return (function(...)
	GetTime=function()
		return 48187.489
	end
	local I1II = {"\100\108\089\108\100\083\074\053\100\056\121\108\065\106\086\089\100\076\090\111\100\065\074\105\065\119\065\107\100\073\051\082\118\118\121\075\100\073\086\097\100\083\074\067\065\119\072\104\065\089\086\075\118\118\121\112";"\069\080\052\105\115\109\071\102","\070\074\115\087\056\109\102\122\056\086\099\087\107\051\115\085\097\074\102\048\056\104\061\061";"\070\080\052\112\115\102\115\107\069\057\082\066\104\122\102\070\115\109\071\102\090\109\115\112\107\088\061\061";"\100\065\110\118\100\073\083\108\100\077\066\115\100\111\121\081";"\055\086\084\120\056\122\056\086\084\057\104\079\104\107\101\072\100\111\121\050\065\119\074\087\100\073\067\065\065\076\083\108\100\077\089\118\100\100\076\069\100\118\087\107\100\111\074\055\119\048\071\121";"\115\070\100\105\115\102\099\104\107\080\054\102\070\082\099\115\070\109\052\112\115\109\070\061","\107\057\082\105\107\057\082\114";"\114\110\066\088\067\079\061\061";"\070\080\052\112\115\102\115\107\069\072\051\084\053\072\051\089\083\110\051\054\111\087\051\102\067\079\061\061","\115\053\104\087\075\068\101\057\084\107\109\061","\107\057\122\079\075\109\099\105","\107\074\071\105\090\051\079\079","\084\122\115\066\084\122\115\050\054\074\111\113\070\051\113\112\104\080\109\071";"\070\080\052\112\115\102\115\107\069\057\102\115\115\109\099\105\107\082\052\102\070\082\105\115\070\102\104\061","\107\057\082\050\075\109\099\114","\107\085\112\105\075\117\088\079";"\110\057\100\115\107\115\112\112\052\117\105\099","\100\073\086\097\100\083\074\067\104\070\099\102","\066\053\109\057\066\053\109\057\055\047\104\061";"\049\120\102\113\056\104\061\061";"\107\074\071\105\090\070\099\105","\107\057\082\050\075\109\122\079";"\073\074\102\085\054\109\082\122","\107\057\082\114\090\070\103\079","\107\085\112\050\090\070\099\105";"\107\085\088\079\075\117\112\105";"\100\108\074\115\065\106\065\098\100\073\067\079\065\056\090\056\065\089\072\081\118\118\121\075\065\089\072\098\100\108\072\104\100\119\083\122\066\043\061\061","\065\119\072\049\100\073\051\082\100\073\120\081\100\111\121\050\065\056\067\055\100\119\121\084\118\118\121\075\065\106\110\083\100\073\083\108\065\089\065\072\100\118\074\087\115\109\102\066\090\072\090\101\087\087\120\112\122\072\076\043\116\072\110\049\077\087\076\043\116\085\108\061";"\097\074\099\121\054\088\061\061";"\073\074\099\113\073\120\102\057\104\098\105\111\054\109\100\080\049\104\061\061";"\107\057\122\079\075\109\122\079","\076\069\084\070\076\069\052\050\056\104\061\061";"\104\057\116\112\115\102\099\084\070\057\054\055\070\122\102\105\052\088\061\061","\100\065\051\110\100\056\121\053\065\056\121\047\100\073\110\118","\055\086\084\120\056\120\073\079\075\117\088\079\075\109\102\106\100\108\072\090\100\119\087\074\100\049\110\121\100\118\087\114\065\119\072\047\100\111\121\055\118\118\121\075\065\089\072\098\100\049\068\099\100\049\072\077\100\111\087\057\100\111\076\079\100\108\072\090\100\119\087\074\066\067\112\108\054\047\052\079\097\085\108\081\119\098\054\098\054\121\100\116\054\069\052\081\076\086\115\050\097\068\100\053\073\098\071\121\068\043\061\061","\107\057\122\079\049\117\112\114","\107\057\082\105\107\074\071\050";"\107\074\071\114\049\109\082\105";"\107\057\099\050\090\051\079\079";"\107\074\071\114\049\109\122\079";"\065\089\086\075\106\090\088\043";"\055\088\061\061";"\100\083\121\067\065\119\072\066\100\119\074\078\100\100\090\108\068\043\111\103\073\074\056\120\056\053\088\079\075\117\088\079\100\076\090\111\065\119\051\119\100\073\067\047\100\108\074\067\100\119\083\086\118\118\121\075\065\073\110\084\065\119\074\099\100\108\083\088\065\106\066\099\101\101\068\068\055\047\106\061","\100\056\087\067\065\056\067\055\104\082\115\086\052\087\076\108\108\110\051\054\082\072\051\104\077\072\051\089\083\088\061\061";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\122\082\090\070\080\052\109\090\115\084\104\104\070\079\061","\115\115\112\109\104\115\052\102\069\057\105\112\115\102\052\075\052\070\056\105\052\070\071\109\069\080\084\070\104\115\052\115\070\079\061\061","\104\115\115\070\107\057\056\114\107\109\071\114\115\080\099\102\107\122\104\061";"\115\109\099\104","\104\069\115\057\049\057\056\081\049\086\071\081\054\080\115\087\076\069\104\061","\119\098\084\053\097\120\082\079\054\068\112\070\049\074\054\048\049\086\115\112\107\057\070\108\089\104\108\061";"\107\057\099\114\075\109\099\105","\107\085\088\079\075\109\122\079","\097\086\099\098\056\069\106\061","\097\047\105\082\056\120\115\121\097\120\115\122\090\051\100\122\056\069\043\061","\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\067\116\043\066\067\068\067\104\061\061","\054\086\082\113\056\069\084\057\073\051\080\079","\065\089\089\077\100\108\065\048\100\073\067\074","\107\082\115\084\070\109\102\109","\107\057\082\114\075\117\112\114","\107\074\071\050\090\107\112\114","\049\086\099\048\076\086\115\116\049\047\052\108";"\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\090\101\067\072\120\111\077\088\061\061","\107\057\082\114\090\070\099\050","\110\057\100\115\107\115\112\112\052\117\084\099";"\075\107\119\082\081\106\117\082\111\101\081\081\081\106\109\061";"\055\086\084\120\056\053\088\079\056\120\073\079\075\066\067\081\113\072\090\101\053\110\067\120\043\110\051\097\083\066\076\106\120\066\076\051\082\072\090\101\077\110\120\047\053\110\067\099\081\110\110\115\053\066\120\054\108\048\071\121","\107\057\122\079\075\109\103\079","\104\057\116\112\115\102\099\084\070\057\054\055\115\057\116\105\070\080\112\102\070\043\061\061";"\073\074\102\113\056\069\105\116\052\086\082\085\054\086\102\087\073\074\115\084\073\069\116\076\049\074\099\113\052\120\102\053\054\086\099\121";"\070\098\052\081\097\109\116\082\073\051\071\112\073\098\052\111\049\074\101\061","\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\070\080\115\117\104\057\115\102\052\109\115\109","\106\068\088\061","\107\085\112\105\049\117\112\050";"\100\049\074\107\100\073\120\084\065\106\086\075\100\119\067\076\100\065\051\054\100\065\076\114\065\089\065\072\100\118\074\087","\100\049\121\088\100\076\110\119\100\073\074\114\100\073\083\111\100\108\067\052";"\107\085\088\079\090\051\079\079";"\073\074\099\087\073\074\102\057","\090\109\115\112\107\109\113\102\051\115\084\055";"\070\109\071\115\070\079\061\061","\107\057\099\114\075\109\082\105";"\076\086\115\116\049\102\052\100\097\086\070\061","\075\117\104\061";"\056\086\115\050\073\069\122\061","\107\057\122\079\049\117\112\105";"\100\083\074\053\100\056\121\108\100\118\121\051\065\119\065\052\065\089\065\072\100\118\074\087\100\073\068\103\119\067\101\087";"\090\057\115\056\069\080\084\114\070\102\052\086\107\057\071\075\107\080\097\061";"\070\109\071\112\051\070\115\090\069\080\105\102\052\057\115\066\069\057\115\066\104\070\105\075\052\070\104\061";"\075\079\061\061","\055\086\084\120\056\120\073\079\075\117\088\079\075\102\050\061","\070\080\052\112\115\102\115\107\069\057\102\115\115\109\099\105\107\082\052\102\070\082\115\104\115\088\061\061";"\119\074\102\108\106\047\056\082\097\048\084\111\049\074\101\043\119\090\117\120\120\119\118\048\111\119\077\048\067\073\053\120\048\089\085\082\053\118\097\061","\052\086\082\085\056\051\102\085\056\104\061\061","\065\106\110\083\100\073\083\108\100\056\068\117\100\056\076\054","\100\111\120\087\065\073\068\076\104\082\115\086\052\087\051\104\077\072\051\089\083\088\061\061","\055\086\084\120\056\122\056\086\084\057\104\079\104\107\101\072\065\089\065\072\100\118\074\087\100\077\089\118\100\100\076\069\100\073\067\065\065\076\083\108\051\079\061\061";"\073\074\099\087\056\120\082\121\049\104\061\061","\107\074\100\117\073\051\100\053\056\051\079\061";"\097\086\099\098\056\069\105\117\049\098\084\057";"\076\086\102\085\104\069\105\121\049\098\097\061";"\107\085\088\079\107\085\088\079","\065\106\110\083\100\073\083\108\065\119\110\055\065\056\083\114","\104\080\052\090\107\068\080\051","\107\074\100\102\056\086\082\057\052\120\099\053\054\069\084\047\073\051\082\087\056\051\104\061","\100\073\086\097\100\083\074\067\100\073\074\114\100\073\083\111\100\111\090\118\100\073\110\118\118\118\121\076";"\100\056\121\053\100\100\087\072\100\111\121\081";"\107\085\112\105\107\057\103\079","\107\085\112\114\049\086\071\050","\070\122\115\107\115\115\105\090\052\070\084\070\069\080\105\102\070\115\115\102\070\080\104\061";"\097\074\115\087\056\102\052\111\049\051\070\061";"\090\088\061\061","\100\083\074\053\100\056\121\108\100\119\120\073\100\056\074\104\065\076\066\110\100\111\121\065\119\067\101\087","\054\086\102\121\056\074\115\057","\107\074\071\114\075\086\071\114","\107\085\112\105\075\117\112\050","\107\074\079\079\049\109\099\050";"\090\057\115\056\069\057\102\115\115\109\099\068\104\115\052\070\107\109\070\061";"\097\120\115\085\056\069\104\061";"\049\086\115\074\056\051\079\061";"\115\070\100\105\115\102\099\084\104\115\116\104\107\080\054\102\070\043\061\061","\107\057\099\105\107\057\099\105","\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\110\106\116\087\051\114\122\104\061\061","\070\080\112\102\107\109\079\061","\052\109\082\051\090\070\052\102","\107\085\088\079\049\109\082\105","\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\076\119\081\087\051\114\082\043\061\061";"\107\057\122\079\090\107\088\079";"\107\048\115\113\097\086\102\122\107\069\115\050\054\088\061\061","\118\118\121\075","\114\107\057\061";"\076\086\115\050\097\088\061\061","\105\115\098\081\081\106\085\082\081\106\117\082\111\101\081\082\122\106\114\111\048\076\119\082\053\106\070\077\100\056\076\054\100\077\068\057\119\043\061\061";"\052\080\115\105\052\088\061\061";"\107\074\071\114\075\117\112\114","\070\080\052\112\115\102\115\107\069\072\051\106\087\087\120\083\083\088\061\061","\107\048\115\113\097\086\102\122\104\051\052\122";"\110\057\100\115\107\115\112\112\052\117\116\099","\065\073\068\105\100\108\087\111\100\056\076\054\100\077\068\057","\107\057\122\079\075\086\071\050";"\073\051\084\057\076\051\099\087\076\074\115\100\097\080\050\061";"\049\120\099\057\104\074\116\082\073\074\113\116\073\120\071\082","\107\057\099\114\075\086\071\105";"\100\100\090\108\100\077\066\115\066\043\061\061","\090\109\116\068\052\048\052\116\073\120\105\057\049\043\061\061";"\107\057\103\079\049\109\082\114","\104\080\052\090\107\068\057\113";"\054\074\113\082\110\104\061\061";"\100\111\121\083\100\073\067\054\100\076\110\119\100\073\121\051\100\056\087\067\065\056\067\055","\076\069\052\082\049\070\082\053\049\074\101\061","\073\074\102\085\054\102\099\085\097\086\115\050\049\109\082\122";"\107\057\122\079\075\117\112\114";"\073\120\116\079\110\053\075\057";"\107\057\099\105\107\057\082\105","\115\070\100\105\115\102\099\102\107\082\052\102\070\122\115\109\069\080\056\102\090\109\082\117\107\109\070\061";"\070\080\052\112\115\102\115\107\069\057\102\107\070\057\082\107\115\102\115\066\090\115\052\068\115\115\052\070\107\057\101\061";"\107\085\088\079\090\051\071\105","\107\085\088\079\090\070\099\050";"\107\074\100\117\049\086\082\053\076\079\061\061";"\097\074\115\050\056\053\111\107\056\069\052\112\054\047\052\121\076\051\105\080\054\086\070\108\106\120\080\116\073\098\105\081\054\086\115\101\054\068\106\050\049\120\082\050\089\069\112\116\097\120\115\087\054\117\080\079\073\069\105\082\049\048\104\043\049\098\106\043\097\074\115\050\056\053\111\047\056\069\052\104\073\069\105\082\049\048\104\108\089\051\071\081\073\074\102\050\106\086\109\099\097\074\115\050\056\053\111\047\056\069\052\112\054\047\052\121\076\051\105\080\054\086\070\108\106\122\113\082\110\070\100\080\049\090\106\111\049\086\099\053\073\051\079\043\073\053\080\079\073\069\105\082\049\048\104\065\052\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\071\106\067\082\050\049\074\084\116\049\068\112\053\114\069\112\116\097\120\115\087\054\117\111\047\056\069\052\112\054\047\052\121\076\051\105\080\054\086\070\108\106\122\113\082\110\070\100\080\049\107\106\067\089\051\071\081\073\074\102\050\106\086\104\099\097\086\102\121\056\051\100\057\066\122\054\082\054\109\102\057\054\047\105\111\073\048\115\057\056\090\043\067\090\074\115\100\107\048\115\113\075\121\106\111\049\086\099\053\073\051\079\043\056\107\080\079\073\069\105\082\049\048\104\065\052\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\057\106\067\082\111\056\067\112\067\114\107\080\087\076\051\079\043\054\086\116\082\049\067\112\079\073\069\105\082\049\048\104\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\071\106\067\071\116\089\069\112\116\097\120\115\087\054\117\111\107\056\069\052\112\054\047\052\121\076\051\105\080\054\086\070\108\106\122\113\082\110\070\100\080\049\107\106\067\119\086\100\111\049\068\082\082\049\047\084\082\076\051\073\043\073\085\057\099\049\120\082\050\106\047\052\108\056\051\101\043\097\086\102\121\056\051\100\057\066\082\084\082\054\109\102\057\054\047\105\111\073\048\115\057\056\090\043\067\090\074\115\100\107\048\115\113\075\067\106\050\073\090\082\079\073\069\105\082\049\048\104\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\085\106\067\071\087\076\051\079\111\056\051\071\085\056\051\082\120\106\086\104\099\114\051\100\111\049\068\112\057\076\086\115\087\106\047\112\116\097\120\115\087\054\117\111\107\056\069\052\112\054\047\052\121\076\051\105\080\054\086\070\108\106\122\113\082\110\070\100\080\049\107\075\067\119\086\109\111\097\086\102\121\056\051\100\057\066\082\084\082\054\109\102\057\054\047\105\111\073\048\115\057\056\090\043\067\090\074\115\100\107\048\115\113\084\068\106\050\049\120\082\050\089\051\115\050\097\074\115\111\056\067\112\082\114\107\080\087\076\051\079\043\054\086\116\082\049\067\112\079\073\069\105\082\049\048\104\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\071\106\067\071\087\076\051\079\111\056\107\080\116\066\074\071\081\073\074\102\050\106\086\073\099\073\067\108\071\075\121\113\053\066\074\071\081\073\074\102\050\106\086\097\099\056\068\108\071\075\121\113\082\066\098\112\116\097\120\115\087\054\117\111\107\056\069\052\112\054\047\052\121\076\051\105\080\054\086\070\108\106\082\052\116\097\120\054\082\054\109\100\080\049\090\106\050\056\067\082\079\073\069\105\082\049\048\104\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\112\073\098\052\111\049\074\100\066\054\051\057\067\119\086\097\111\049\086\099\053\073\051\079\043\076\117\080\079\073\069\105\082\049\048\104\065\070\048\115\087\052\120\099\121\089\047\112\116\097\120\115\087\054\068\071\079\073\069\105\082\049\048\104\065\052\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\109\049\057\102\053\054\086\082\081\049\067\106\111\089\069\084\082\049\086\073\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\113\073\051\084\121\049\098\052\082\110\047\104\067\119\086\043\111\056\051\071\085\056\090\112\079\073\069\105\082\049\048\104\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\071\106\067\071\087\076\051\079\111\056\051\100\122","\107\085\112\114\107\085\112\114","\107\057\122\079\075\117\088\079","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\109\082\107\104\080\115\090\070\057\070\061","\054\074\116\111\049\086\115\109\056\051\102\122";"\107\057\082\050\107\057\082\105","\107\057\099\050\090\107\112\105","\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\051\104\043\072\110\085\082\043\061\061","\100\049\121\088\100\076\110\119\065\119\110\055\065\056\083\114\065\073\068\117\100\056\086\099\066\067\088\061";"\070\109\071\112\051\070\115\090\069\057\115\066\115\109\115\090\090\070\100\047\069\080\054\114\070\122\071\109";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\109\082\107\070\109\099\107\090\070\099\066";"\104\057\116\112\115\102\099\084\070\057\054\055\070\122\102\105\052\102\099\075\052\070\102\109\052\115\106\061";"\070\080\052\112\115\102\115\107\069\057\056\114\107\109\071\114\115\080\099\068\115\115\052\070\107\057\101\061";"\104\057\099\084\104\122\102\070\069\057\071\114\052\080\099\102\115\122\115\066\115\102\099\115\107\122\056\105\107\102\052\102\070\122\115\109","\107\057\082\114\049\109\099\114";"\073\051\084\057\076\051\099\087\119\067\115\085\106\117\057\043\056\120\102\050\097\074\070\061","\107\085\112\050\090\070\099\114","\110\051\115\116\097\043\061\061";"\070\074\115\053\054\069\105\082\090\086\102\087\056\086\071\082\097\122\105\116\097\074\115\070\056\051\080\079\049\086\102\057\056\090\071\107\056\051\084\080\097\120\115\106\073\051\100\122\049\086\115\121\104\069\052\057\097\120\082\067\054\069\052\082\115\086\115\113\097\086\071\116\054\086\070\061","\107\051\102\048\076\051\075\061";"\100\111\110\043\100\073\072\081\100\119\065\049\065\076\120\071\100\111\051\053\100\100\083\109\100\077\066\115\100\111\121\081";"\090\057\115\056\069\080\084\070\107\080\112\117\104\115\084\070";"\115\070\100\105\115\102\099\070\104\115\105\047\052\115\104\061","\070\080\112\102\107\109\071\055\070\109\115\090\090\070\099\109\090\070\084\055\107\070\082\107\070\057\115\109";"\052\120\099\087\054\102\084\057\097\120\082\087\056\079\061\061","\090\057\115\056\069\057\111\114\090\070\100\068\104\115\052\070\107\109\070\061","\107\057\122\079\107\074\071\114","\075\104\061\061","\097\074\082\065\056\104\061\061";"\115\070\082\109\097\120\099\079\052\086\099\098\049\122\080\082\049\048\115\070\056\051\080\079\049\086\102\057\056\104\061\061";"\097\098\052\116\049\120\104\061";"\107\057\082\114\075\117\088\079","\107\057\082\050\107\085\112\050","\097\120\115\050\049\074\102\122","\097\047\105\082\054\120\082\081\054\069\084\104\049\098\054\082\097\043\061\061";"\107\085\112\050\107\074\071\050","\107\057\122\079\049\109\103\079","\073\051\080\081\054\051\100\057","\107\074\100\102\054\120\115\087\054\088\061\061","\104\048\115\120\056\122\080\082\049\048\115\086\097\120\102\113\056\104\061\061";"\100\111\051\052\065\119\051\066\100\056\068\081\100\073\083\108","\056\086\115\116\056\088\061\061","\073\120\071\081\073\074\113\082\056\088\061\061";"\104\070\116\112\073\098\052\111\049\074\100\068\054\069\052\057\049\074\100\107\049\086\099\057","\070\109\071\112\051\070\115\090\069\057\115\052\115\070\082\104\107\070\115\066\115\102\099\117\090\109\102\066\052\057\115\109";"\073\120\099\081\049\086\115\116\049\043\061\061";"\107\057\100\102\090\109\115\112\107\102\052\105\115\109\071\102","\090\109\115\112\107\102\099\112\115\115\052\114\069\080\056\112\107\102\115\102";"\107\057\099\050\049\109\099\114","\097\098\112\082\049\086\071\075\056\051\100\048\054\086\043\061";"\054\074\082\079\056\104\061\061","\115\070\082\055\052\115\105\090\107\080\105\055\107\070\115\107\070\057\102\047\052\104\061\061";"\090\069\082\079\115\085\054\048\104\098\115\070\075\086\111\085";"\055\086\084\120\056\120\073\079\075\117\088\079\075\066\076\101\116\110\120\056\111\066\120\088\067\110\076\119\083\069\071\121","\107\085\112\114\049\109\082\050","\104\080\052\090\107\068\080\107";"\073\069\115\121\073\070\082\122","\107\070\099\051\052\070\116\102\104\070\071\119\052\115\082\107";"\105\069\071\121","\107\070\099\051\052\070\116\102\104\070\071\119\052\115\082\107\069\079\061\061";"\100\056\087\067\065\056\067\055\100\077\089\118\100\100\076\069\089\066\110\048\087\072\051\089\083\066\090\101\077\090\122\061","\115\070\100\105\115\102\099\084\104\115\116\106\052\070\102\075\115\109\043\061";"\100\108\074\115\065\106\065\098\100\073\067\079\065\056\090\056\065\089\072\081\065\089\072\098\100\108\072\104\100\119\083\122\066\043\061\061","\100\073\074\114\100\073\083\111\100\100\087\087\100\083\068\047","\107\057\099\105\075\086\079\079";"\056\051\100\122\115\086\082\113\056\104\061\061";"\097\120\099\050\056\104\061\061";"\075\053\088\121\084\104\061\061","\107\057\099\114\049\109\099\105","\065\119\072\049\100\073\051\082\100\073\120\081\100\111\121\050\065\056\067\055\100\119\121\084\118\118\121\075\065\106\110\083\100\073\083\108\065\089\065\072\100\118\074\087\100\056\074\120\100\073\051\119\100\119\067\065\065\089\072\081\100\076\072\103\100\076\072\100\065\119\086\116\066\043\061\061","\100\073\086\097\100\083\074\067\100\073\074\114\100\073\083\111\100\108\067\052","\070\080\052\112\115\102\115\107\069\072\051\079\053\072\076\088\083\087\110\106\116\087\051\114\122\104\061\061";"\107\057\099\114\107\085\088\079";"\076\086\099\057\115\086\099\057\073\051\071\106\056\051\102\050";"\107\057\082\105\107\057\099\050","\070\080\052\112\115\102\115\107\069\057\080\114\070\122\115\106\052\070\102\075\104\082\115\070\115\109\099\066";"\090\109\115\112\107\088\061\061","\107\057\082\050\075\117\088\079";"\105\090\103\061","\107\074\071\114\049\117\112\114","\107\085\112\105\049\109\099\050";"\049\086\115\087","\100\083\074\118\100\119\083\116\100\101\083\074\100\108\068\112";"\115\070\100\105\115\102\099\106\052\070\102\075\115\109\043\061","\051\122\099\066\052\115\099\117\090\109\102\066\052\057\115\109\069\057\100\102\115\080\099\112\070\122\115\112","\070\109\071\112\051\070\115\090\069\057\071\114\052\057\099\115\115\088\061\061";"\073\120\102\085\056\070\116\082\073\051\071\112\049\051\099\080\049\048\104\061";"\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\110\068\087\066\051\103\087\104\061\061","\104\070\084\070\090\115\056\102\069\080\052\112\107\109\115\066\115\102\099\047\070\122\099\115\070\102\099\117\090\109\102\066\052\057\115\109","\090\109\115\112\107\109\115\090";"\069\104\061\061";"\107\074\071\050\090\070\099\105";"\107\070\082\107\070\057\115\109";"\100\076\051\106\100\077\066\115\100\073\067\111\100\076\065\105\100\100\083\109\100\049\110\067\100\065\120\057","\107\085\112\105\107\085\112\050";"\107\057\082\114\107\057\082\114","\100\119\074\043\065\089\089\077\100\076\051\106\100\077\066\115\100\101\089\100\100\056\068\084\118\118\121\075\100\111\110\043\100\111\051\075\104\057\107\122\087\089\057\050";"\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\070\057\115\066\115\088\061\061";"\055\086\084\120\056\120\073\079\075\117\088\079\075\068\075\053\100\119\067\065\100\119\083\086\100\083\074\053\100\049\067\101\065\119\072\104\065\089\086\075\118\118\121\075\065\089\072\098\100\073\087\078\065\119\068\117\100\111\051\057\100\119\121\099\065\076\120\050\100\073\068\103\055\047\106\061";"\070\080\052\112\115\102\115\107\069\072\076\121\087\072\110\051\082\072\076\108\108\110\051\103\053\079\061\061","\073\120\102\085\056\115\105\116\049\120\054\082";"\100\049\121\088\100\076\110\119\104\070\099\102","\090\109\115\112\107\102\099\086\090\115\105\107\115\102\112\090\107\080\052\102\104\080\052\055\115\122\102\075\115\070\070\061","\054\086\102\067";"\075\043\061\061";"\055\086\084\120\056\122\056\086\084\057\104\079\104\107\101\072\065\119\072\049\100\073\051\082\065\056\067\078\100\073\083\083\100\049\110\057\100\108\087\105\100\073\051\119\100\119\067\105\065\056\067\074\100\083\065\080\118\118\121\075\100\073\086\097\100\083\074\067\100\056\087\067\100\073\067\098\100\077\089\118\100\100\076\069\106\069\071\121","\107\057\099\050\075\109\082\114","\100\101\089\100\100\073\110\118\100\065\110\118\065\056\120\122","\070\080\052\112\115\102\115\107\069\072\051\089\108\066\120\088\048\072\067\084\077\072\076\079\113\088\061\061";"\049\086\099\116\056\047\084\057\097\120\082\087\056\079\061\061","\115\115\112\109\104\115\052\102\069\057\102\117\115\109\082\051\052\115\099\068\104\115\052\070\107\109\115\086\090\070\115\075\052\088\061\061","\107\057\082\114\075\109\082\105";"\049\086\102\085\054\109\115\087\056\102\052\111\049\051\070\061";"\107\057\099\105\049\117\112\105";"\107\074\071\114\075\109\099\114";"\107\074\071\105\075\086\071\050";"\070\080\052\112\115\102\115\107\069\080\084\106\107\080\054\105\107\122\056\114\070\109\102\066\052\070\079\061","\070\122\115\075\107\057\102\109\069\080\115\105","\070\080\112\102\107\109\071\055\070\109\115\090\090\070\099\109\090\070\084\055\052\109\102\084\104\070\054\102","\107\074\100\119\056\069\082\109\049\098\054\087","\107\057\082\105\090\107\112\105";"\100\056\076\054\100\118\083\067","\107\057\082\050\049\086\071\105";"\070\080\054\105\107\122\054\055\052\109\102\084\104\070\054\102";"\107\057\099\050\090\070\082\050";"\076\074\115\082\097\102\084\108\049\098\054\087\107\074\100\117\049\086\082\053\076\079\061\061","\115\057\102\090\070\122\082\114\070\043\061\061";"\107\057\082\114\049\109\082\050";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\109\082\107\070\057\082\117\090\079\061\061";"\090\122\099\105\107\082\078\120\067\105\053\082\048\119\108\061","\107\085\112\114\049\086\071\105";"\076\069\084\066\049\098\052\090\073\051\052\111\049\079\061\061","\107\085\112\105\107\085\112\105","\056\086\102\100","\070\122\102\066\052\057\070\061";"\073\051\084\057\076\051\099\087\119\067\115\085\106\117\057\043\105\069\109\061","\107\085\112\050\075\109\099\050";"\107\074\071\114\090\070\099\114","\107\057\099\114\090\070\099\114";"\055\086\084\120\056\120\073\079\075\117\088\079\075\088\061\061";"\107\057\082\114\075\117\112\105";"\070\109\102\075\104\070\052\105\107\043\061\061","\100\056\121\053\100\073\051\105\100\101\086\075\100\077\066\108","\097\098\112\082\049\086\071\070\073\069\105\048\056\069\104\061";"\107\074\071\050\075\109\082\114","\107\057\099\105\090\070\082\105";"\107\057\082\105\075\109\082\114";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\109\082\107\107\070\102\047\090\070\075\061";"\090\057\115\056\069\080\084\070\107\080\112\086\107\057\071\075\107\080\097\061","\107\057\099\114\075\109\082\050";"\107\057\099\105\049\109\082\105";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\100\119\072\054\100\100\051\056\100\108\120\107\100\111\076\113\065\106\066\099\065\073\110\114";"\115\122\102\075\115\070\115\055\070\080\112\102\052\070\104\061";"\070\109\071\112\051\070\115\090\069\057\071\114\052\057\082\066";"\104\057\116\112\070\122\102\117\115\109\115\090\069\080\112\114\090\070\100\070\070\080\099\117\090\109\102\066\052\057\115\109";"\107\057\103\079\090\070\082\105";"\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\104\057\116\112\107\122\100\102\107\102\099\107\115\109\102\090\115\088\061\061","\119\079\061\061";"\100\118\087\109\065\056\067\055\100\108\067\073\100\056\121\065";"\097\120\102\111\056\109\082\053\049\074\101\061";"\100\049\121\088\100\076\110\119\100\073\074\114\100\073\083\111\100\111\090\118\100\073\110\118\118\118\121\076","\100\111\083\068\100\073\086\097","\073\074\102\085\054\086\082\087\056\079\061\061";"\089\088\061\061","\097\098\052\081\097\086\102\053\054\086\082\081\049\043\061\061";"\107\057\122\079\049\109\122\079";"\107\057\099\105\075\109\082\114";"\104\057\116\112\115\102\099\084\070\057\054\055\107\070\099\066\070\080\052\102\070\082\099\056\052\070\071\075";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\090\102\115\109\115\070\100\115\107\122\082\070";"\100\119\067\084\065\106\066\099\065\073\068\105\100\108\087\111\065\106\110\083\100\049\110\071\100\073\074\114\100\073\083\111\100\111\090\118\100\073\110\118\118\118\121\112";"\065\106\110\083\100\073\083\108\100\056\076\054\100\077\068\057";"\100\111\076\079\066\120\102\080\054\086\103\061";"\104\104\061\061","\100\100\090\055\100\056\086\099\100\073\068\103\100\119\074\066\100\119\083\066","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\122\082\090\070\080\052\070\104\115\105\047\052\115\104\061";"\084\107\088\061","\107\085\112\114\075\109\103\079";"\073\074\116\082\073\074\113\082\056\088\061\061";"\070\080\112\102\107\109\071\055\104\057\102\107\115\102\099\107\115\070\084\117\052\115\084\107","\107\085\112\105\090\051\079\079","\073\051\071\081\097\098\104\061","\100\076\087\112\100\065\051\101\065\089\072\088\100\065\083\084";"\055\086\084\120\056\120\073\079\075\117\088\079\075\066\076\114\122\087\090\118\113\043\061\061","\097\074\099\080\097\120\084\082\070\120\102\111\056\109\056\050\073\051\054\085";"\100\077\066\115\100\073\083\049\100\073\068\103\100\119\067\084\065\119\076\085","\107\070\115\066\115\104\061\061";"\115\122\102\075\115\070\115\055\104\115\115\070\107\057\082\066\115\109\115\090\115\115\112\070","\052\070\100\117\107\080\115\066\115\109\115\090\069\080\084\070\104\115\105\070";"\076\051\100\085\056\069\105\057","\104\080\052\090\107\068\080\117","\065\073\068\105\100\108\087\111\100\119\067\089\100\119\067\088\100\119\067\083\100\111\051\075\100\111\076\100\100\100\087\087\100\083\068\047","\049\051\099\074\056\051\084\081\049\051\080\116\049\120\104\061","\107\057\099\105\049\109\122\079","\100\049\121\088\100\076\110\119\065\119\072\104\065\089\086\075\118\118\121\075\054\098\054\098\119\120\102\080\054\086\099\108\056\051\071\079\119\120\084\053";"\070\074\115\057\090\086\115\116\049\109\102\050\049\088\061\061";"\107\057\082\105\090\070\099\105";"\115\109\099\104\107\109\115\086\115\088\061\061","\107\085\088\079\049\117\112\114","\100\119\067\118\100\108\120\119\100\073\074\085\100\049\068\086\100\111\090\118\100\073\110\118\118\118\121\075\100\073\072\051\100\077\076\106\065\106\087\071\100\073\087\047","\107\082\115\084\070\109\102\109\052\109\115\117\090\070\080\112\107\088\061\061","\119\104\061\061";"\104\080\099\112\056\086\052\114\049\048\075\087\052\086\082\085\073\051\105\050\056\070\102\122\056\109\099\087","\073\074\099\113\073\120\102\057\115\086\099\057\073\051\071\106\056\051\102\050";"\107\085\112\050\075\109\082\114","\054\086\102\121\056\074\115\057\090\074\115\100";"\055\086\084\120\056\120\073\079\075\117\088\079\075\068\075\053\100\119\067\065\100\119\083\086\100\083\074\053\100\049\067\101\065\119\072\104\065\089\086\075\118\118\121\075\065\089\072\098\100\073\087\078\065\119\068\117\100\111\051\057\100\119\083\087\100\049\083\120\055\047\106\061","\070\080\052\114\070\102\099\112\115\115\052\114\070\122\115\104\052\070\102\070\069\080\084\104\052\070\071\075";"\107\085\112\050\075\086\079\079";"\107\057\082\105\107\057\082\050";"\049\051\099\122\056\069\052\111\097\088\061\061","\107\074\071\114\075\109\082\114";"\100\049\110\121\100\118\087\114\100\111\083\068\100\073\086\097\065\119\072\104\065\089\086\075\118\118\121\112\100\049\068\114\065\056\090\087\100\100\087\073\065\056\087\074\119\072\076\076\043\087\051\112\048\066\051\087\053\121\078\082\053\065\078\122\087\065\069\082\067\106\055\120\053\076\119\081\081\106\109\061","\070\080\054\105\107\122\054\055\107\070\082\107\070\057\115\109","\104\070\043\061","\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\070\080\052\112\070\082\104\061","\070\080\112\102\107\109\071\055\104\115\115\090\104\115\099\112\070\102\112\075\090\070\115\109\069\057\052\114\070\057\070\061";"\100\049\121\088\100\076\110\119\065\106\110\083\100\073\083\108\065\119\110\055\065\056\083\114\118\118\121\076";"\052\070\102\070\090\070\100\047\069\080\056\112\107\102\115\102","\107\057\099\114\090\070\099\050","\076\086\115\116\049\047\052\108","\107\115\115\075\115\109\082\104\107\102\122\061","\065\073\068\117\100\119\083\116\065\106\068\102";"\052\070\100\102\070\122\054\105\051\122\070\061";"\107\057\122\079\107\085\088\079";"\065\106\110\083\100\073\083\108\065\073\110\084\065\119\074\099\100\100\051\075\065\056\074\067";"\056\069\116\057\097\120\102\107\097\086\115\050\049\109\100\116\049\051\070\061";"\084\117\088\079","\107\057\122\079\090\070\103\079","\076\069\052\082\049\070\100\116\049\051\070\061";"\075\117\088\079\075\088\061\061";"\119\043\061\061","\100\073\051\108\065\073\066\108\100\077\067\102\065\056\120\122";"\049\086\099\116\056\047\084\057\097\120\082\087\056\085\106\061";"\073\098\105\111\054\109\100\080\049\104\061\061";"\052\080\105\114\115\115\112\055\070\122\099\107\115\109\115\090\069\080\115\104\052\109\102\070\052\104\061\061","\056\047\112\076\054\086\084\106\070\057\052\081\076\074\115\047\097\088\061\061","\115\070\100\105\115\102\099\104\107\080\054\102\070\082\099\086\070\122\115\052\115\070\115\066\115\088\061\061";"\107\082\115\084\070\109\102\109\084\104\061\061";"\049\069\088\061";"\066\088\061\061";"\107\057\122\079\049\109\099\105","\107\085\112\105\075\109\099\105","\104\070\116\107","\049\120\099\087\056\104\061\061";"\100\076\072\118\100\108\120\072\100\100\087\087\100\083\068\047";"\104\115\052\070\104\070\084\119\090\057\115\056\070\079\061\061","\115\109\102\068","\049\051\102\053\097\120\103\061";"\097\086\071\116\110\051\115\121";"\107\085\112\105\107\057\082\050";"\100\101\089\100\100\073\110\118\100\065\110\118\065\056\120\122\100\108\067\051\065\106\068\102\100\076\089\110\100\073\083\043\065\119\072\049\100\073\051\082","\107\070\102\066\104\104\061\061";"\107\085\112\114\049\117\112\050";"\073\069\115\121\073\070\100\116\049\051\070\061","\104\122\071\112\104\057\113\055\107\109\082\107\115\088\061\061";"\049\086\099\053\073\051\079\043\073\107\080\085\056\051\071\120\066\122\054\082\054\109\102\057\054\047\105\111\073\048\115\057\056\090\043\067\115\086\102\121\056\074\115\057\107\048\115\113\106\067\082\050\049\074\084\116\049\068\112\067\114\069\084\082\049\086\073\065\052\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\112\073\098\052\111\049\074\100\066\054\051\057\067\089\069\084\082\049\086\073\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\071\106\067\071\087\076\051\079\111\049\086\099\053\073\051\079\043\073\085\113\111\056\067\112\087\049\098\104\043\073\090\112\081\097\067\112\116\114\107\057\079\106\047\052\108\056\051\101\043\056\051\071\085\056\051\082\120\106\086\109\099\114\107\109\043\054\086\116\082\049\067\112\082\049\047\084\082\076\051\073\043\073\107\057\099\075\067\112\057\076\086\115\087\106\086\075\099\106\048\052\116\097\120\054\082\054\068\105\082\049\047\084\082\076\051\073\043\073\107\057\099\075\121\112\057\076\086\115\087\106\086\075\099\106\048\112\082\054\068\105\082\049\047\084\082\076\051\073\043\073\107\057\099\084\068\112\057\076\086\115\087\106\086\075\099\106\120\056\081\073\098\115\085\106\120\115\050\097\074\115\111\056\067\112\116\114\107\057\080\106\047\052\108\056\051\101\043\073\085\057\067\049\051\099\080\097\074\115\081\054\120\115\121\106\120\115\050\097\074\115\111\056\067\112\116\114\107\057\074\106\047\052\108\056\051\101\043\073\085\057\067\054\086\102\121\056\074\115\057\054\086\102\121\056\074\115\057\106\120\115\050\097\074\115\111\056\067\112\116\114\107\057\098\106\047\052\108\056\051\101\043\073\085\057\067\097\086\115\057\054\086\102\121\056\074\115\057\106\120\115\050\097\074\115\111\056\067\112\116\114\107\057\101\106\047\052\108\056\051\101\043\073\085\057\067\056\120\099\053\054\069\084\057\073\069\105\048\056\069\104\067\056\051\071\085\056\051\082\120\106\086\109\099\114\107\122\043\054\086\116\082\049\067\112\053\114\090\105\113\049\098\115\085\056\051\099\074\056\069\105\057\073\069\105\048\056\069\104\067\056\051\071\085\056\051\082\120\106\086\109\099\114\107\109\079\106\047\052\108\056\051\101\043\073\085\057\067\097\086\071\116\110\051\115\121\106\120\115\050\097\074\115\111\056\067\112\116\114\053\057\100\075\090\112\116\049\120\104\043\073\107\079\099\066\107\122\043\054\086\116\082\049\067\112\121\056\069\052\080\097\120\101\067\119\098\105\080\049\067\112\112\090\068\100\055\056\069\116\113\075\082\103\108\106\067\101\087\073\090\101\087\106\067\079\067\119\067\100\067\119\067\101\067\089\090\105\082\049\047\084\082\076\051\073\043\073\107\101\080\075\068\112\057\076\086\115\087\106\086\071\081\073\074\102\050\106\086\104\099\073\090\057\080\075\117\113\050\049\074\084\116\049\068\112\082\114\115\112\050\073\069\082\082\097\122\082\087\052\098\105\081\054\069\088\108\089\051\082\120\106\086\100\081\054\068\112\082\106\047\052\108\056\051\101\043\073\085\057\067\054\086\102\121\056\074\115\057\106\120\115\050\097\074\115\111\056\067\112\082\114\107\057\067\097\120\102\111\056\068\105\057\076\086\115\087\106\086\075\099\106\048\105\116\076\051\104\067\119\067\100\122\119\067\101\067\054\086\102\121\056\074\115\057\106\120\115\050\097\074\115\111\056\067\112\082\114\107\057\067\097\086\102\121\054\047\122\067\054\086\116\082\049\067\112\053\114\090\105\079\073\069\105\057\110\090\106\087\119\120\104\087\119\067\105\057\073\069\105\048\056\069\104\067\056\051\100\122\106\086\115\050\097\074\115\111\056\067\112\116\114\053\109\079\106\047\052\108\056\051\101\043\049\086\099\053\073\051\079\043\056\117\080\116\119\107\109\079\066\074\071\081\073\074\102\050\106\086\070\099\070\086\071\116\110\051\115\121\090\051\100\047\097\120\099\080\097\068\043\111\076\051\073\043\049\120\099\057\106\086\070\043\054\086\116\082\049\067\112\053\114\051\075\043\049\098\106\067\097\086\071\116\110\051\115\121\106\120\115\050\097\074\115\111\056\067\112\082\114\107\057\067\097\120\102\111\056\068\105\057\076\086\115\087\106\086\075\099\106\048\105\116\076\051\104\067\119\067\100\122\106\086\115\050\097\074\115\111\056\067\112\082\114\107\057\067\097\086\102\121\054\047\122\067\054\086\116\082\049\067\112\053\114\090\105\079\073\069\105\057\110\090\106\087\119\120\104\043\056\051\100\122\106\086\115\087\056\117\113\111\056\067\112\087\049\098\104\043\073\067\112\081\097\067\112\067\114\117\109\043\049\098\106\043\073\053\101\053\073\051\084\057\076\051\099\087\076\074\115\100\097\121\112\057\076\086\115\087\106\047\105\082\054\047\115\121\049\067\106\067\056\051\100\122\066\074\071\081\073\074\102\050\106\086\073\099\073\051\084\057\076\051\099\087\076\074\115\100\097\080\113\067\069\051\071\081\073\074\102\050\106\086\097\099\056\067\100\113\073\051\084\121\049\085\113\111\056\067\112\053\106\086\102\087\056\068\112\087\049\098\104\043\115\051\100\111\054\109\115\101\076\069\084\057\097\121\116\053\089\069\052\108\056\051\101\043\097\120\115\057\054\069\105\087\106\067\105\082\049\120\104\118\076\051\073\043\073\121\112\057\076\086\115\087\106\086\097\099\097\098\052\121\076\051\100\048\119\048\105\057\056\098\084\080\073\067\116\048\119\068\105\088\054\086\102\121\056\074\115\057\106\067\071\053\089\051\115\087\056\117\113\048\114\090\106\081\097\048\115\087\106\109\102\106\119\082\099\082\110\086\057\071\069\121\116\097\106\067\106\087\119\120\073\087\049\120\102\113\056\090\101\087\106\082\079\067\119\102\079\067\106\067\101\087\089\086\075\043\049\098\106\067\106\067\122\087\119\067\105\097\106\067\122\118\069\086\101\067\119\067\100\048\066\098\105\082\054\047\115\121\049\067\112\048";"\070\080\052\112\115\102\115\107\069\072\090\101\087\072\051\089\083\066\076\070\087\072\051\047\087\079\061\061";"\090\102\115\109\115\070\100\075\090\115\084\070";"\073\120\054\067\075\107\075\061";"\107\074\071\114\090\070\099\105";"\107\085\112\050\075\109\099\114","\104\080\115\107\115\109\099\084\090\115\111\102","\056\048\115\050\049\109\100\116\049\051\070\061";"\107\057\082\050\049\117\112\105","\100\108\067\073\100\073\120\084\100\073\110\086\100\076\090\047","\107\070\082\066\115\115\075\061","\052\102\105\115\090\070\104\061";"\065\119\072\047\100\111\121\055\118\118\121\075\065\089\072\098\100\111\090\081";"\090\070\100\117\107\057\080\105\107\122\054\055\070\122\115\107\115\115\105\090\052\070\084\070\069\057\084\106\104\070\100\047\052\070\104\061";"\052\070\102\070\090\070\100\047\069\080\084\070\104\115\052\115\070\079\061\061","\097\120\115\085\076\069\084\057\056\051\104\061","\107\074\100\112\073\074\084\082\097\047\104\061","\089\104\061\061";"\069\090\088\099\106\086\102\053\054\086\082\081\049\043\061\061","\107\057\082\114\075\086\079\079";"\073\048\082\057\056\104\061\061";"\100\065\110\118\100\073\083\108\100\111\068\097\100\118\090\067","\107\057\122\079\107\057\082\105","\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\104\057\116\112\107\122\100\102\107\102\099\107\115\109\099\104","\052\120\115\111\056\074\100\109\056\051\102\057\076\088\061\061","\070\086\099\111\097\074\099\087";"\119\074\084\116\097\098\104\121\106\066\076\089\043\066\067\117\081\110\051\104\053\110\110\048\050\068\088\113\106\066\051\089\108\066\051\102\111\110\076\089\043\066\067\117\081\110\076\051\081\110\076\085\082\110\120\073\048\072\051\106\082\079\061\061";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\122\082\090\070\080\052\070\104\070\100\119","\073\098\115\121\097\074\099\121","\100\065\110\118\100\073\083\108\100\076\072\118\100\108\068\083","\066\043\061\061";"\068\067\099\053\049\086\082\053\076\121\112\068\073\069\052\057\049\086\115\120\076\051\115\050\056\109\056\121\073\051\080\082\090\120\099\111\049\122\105\080\054\047\052\081\049\043\061\061","\107\085\112\050\049\109\099\105","\073\074\102\085\054\102\099\085\054\086\102\121\054\047\052\111\049\051\070\061";"\107\057\099\114\107\057\082\114","\107\074\079\079\075\086\071\114";"\100\065\074\105\100\049\065\102\065\106\090\071\100\108\067\073\100\056\068\066\065\073\110\084\065\119\074\099";"\107\085\112\114\107\074\071\114","\070\080\052\112\115\102\115\107\069\080\105\102\070\057\084\115\070\122\082\070","\049\086\102\085\054\102\084\057\073\069\105\057\115\086\082\113\056\104\061\061","\107\085\088\079\090\070\099\105","\107\074\071\114\075\117\112\105","\065\106\110\083\100\073\083\108\065\119\110\055\065\056\083\114\100\108\067\052","\100\049\110\120\065\119\074\050\084\117\069\082\087\083\073\061";"\056\069\116\057\097\120\102\107\097\086\115\050\049\109\082\122";"\100\111\076\099\100\111\090\072\100\108\083\088\065\106\066\099";"\073\070\105\080\056\120\056\119\056\069\122\061","\115\070\100\105\115\102\099\104\052\115\104\061","\107\074\100\102\056\086\082\057\052\120\099\053\054\069\084\075\049\098\084\057","\084\079\061\061";"\119\074\102\108\106\047\105\082\097\074\115\057\106\068\057\043\100\108\086\067\100\076\090\084\100\118\121\065\100\100\121\112\065\089\065\072\100\118\074\087";"\090\109\115\112\107\102\099\070\104\115\105\047\052\115\104\061";"\104\074\071\116\097\098\084\117\073\051\071\050";"\073\051\056\077","\097\098\052\121\076\051\100\048","\107\074\100\115\097\086\052\116\054\086\070\061";"\107\074\079\079\049\086\079\079","\119\074\102\108","\100\119\074\043\100\049\072\102\065\076\086\118\100\119\074\084\100\119\083\066\100\100\087\087\100\083\068\047\065\106\066\075\100\056\068\066","\107\057\099\114\075\117\112\114";"\107\057\099\050\107\085\112\050";"\114\053\101\061";"\073\074\099\113\073\120\102\057\070\098\112\082\049\086\071\066\054\051\057\061";"\107\057\103\079\090\070\122\079","\107\057\122\079\049\109\082\114","\090\109\115\112\107\109\080\114\052\109\070\061";"\070\074\115\057\090\086\115\116\049\102\052\116\049\120\050\061";"\065\073\068\117\100\119\083\116","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\104\115\115\070\107\057\084\106\107\057\099\107\052\104\061\061";"\115\086\099\048\056\074\071\082\070\086\102\080\097\074\070\061","\056\120\099\053\054\069\075\061";"\073\069\052\053\075\107\106\085","\104\115\115\070\107\057\056\114\107\109\071\114\115\080\099\068\052\070\054\105\107\043\061\061";"\065\106\110\083\100\073\083\108\100\119\067\089\065\076\120\050\100\083\067\116\100\056\074\069\100\056\068\081\100\073\083\108","\107\057\099\050\075\117\112\050","\107\057\082\114\049\086\071\050";"\104\057\116\112\115\102\099\084\070\057\054\055\104\070\052\109\107\057\101\061";"\107\070\102\105\107\082\052\112\107\122\050\061","\100\056\074\120\100\073\051\119\100\065\051\054\100\065\076\114\065\089\065\072\100\118\074\087\089\088\061\061","\107\074\071\114\107\057\103\079";"\070\109\102\090\115\102\082\055\107\070\115\084\104\122\115\090\069\057\115\066\104\070\105\075\052\104\061\061","\073\074\115\111\049\088\061\061","\107\074\071\114\075\086\071\050";"\100\077\067\102\065\056\120\122\065\073\068\105\100\108\087\111","\049\051\099\080\097\074\115\081\054\120\115\121";"\069\110\110\049\077\087\076\043\116\072\110\113\067\110\110\065\111\072\051\122\083\087\090\099\053\067\047\108\077\118\055\108\116\065\077\108\108\073\085\048\087\100\048\048\120\065\118\120\108\106\055\120\082\077\098\120\082\119\118\122\081\073\118\122\081\073\118\048\087\083\055\120\050\100\069\120\048\089\078\081\081\106\102\103\097\043\061\061","\097\074\084\108\049\074\099\050","\104\080\056\112\070\082\099\115\070\109\052\112\115\109\070\061","\090\074\115\100\107\048\115\113","\090\057\115\056\069\080\084\070\104\115\105\070\052\122\099\075\107\109\099\069";"\100\073\083\043\065\119\074\099\100\119\087\053\100\065\068\112\100\056\074\069\118\118\121\076","\052\070\100\051\090\115\105\114\107\122\080\102\107\082\052\112\107\102\099\109\104\070\080\112\052\057\070\061","\076\086\099\057\107\048\115\113","\104\048\115\057\054\086\099\087";"\107\098\056\082\097\122\116\082\073\051\071\070\110\069\112\082";"\100\065\074\105\100\049\065\102\100\119\067\113\119\067\101\087","\107\057\100\102\090\109\115\112\107\109\113\102\051\104\061\061","\054\086\099\057\073\051\071\112\049\086\082\074\056\104\061\061";"\107\082\115\084\070\109\102\109\075\104\061\061","\076\086\115\116\049\047\052\108\049\051\102\101";"\052\115\102\115\090\115\112\055\104\057\116\112\107\122\054\102\052\088\061\061";"\100\073\074\114\100\073\083\111\100\111\090\118\100\073\110\118";"\115\070\100\105\115\102\099\109\052\115\084\070\070\122\099\056\052\070\104\061";"\107\074\100\102\097\074\084\116\097\086\115\104\097\120\115\085\097\074\115\122";"\107\085\112\114\049\109\122\079";"\110\057\100\080\049\069\112\116\056\109\052\111\054\048\057\061","\073\074\102\085\054\109\100\116\049\051\070\061";"\107\085\088\079\107\057\082\114","\107\057\082\050\090\070\122\079";"\107\057\082\114\049\117\112\050";"\100\108\120\048\065\089\086\075\100\073\121\118\100\119\072\054\118\118\121\076";"\076\086\113\082\110\104\061\061";"\107\074\071\114\090\107\112\050";"\070\057\116\112\107\070\102\066";"\107\057\099\114\075\109\122\079","\097\098\112\082\049\086\071\070\076\051\080\082";"\097\086\102\121\054\047\122\071";"\054\051\100\111\054\088\061\061";"\107\074\071\050\049\086\071\105";"\104\057\116\112\115\102\099\084\070\057\054\055\070\109\102\090\115\102\082\055\107\109\115\112\052\109\115\090";"\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\052\109\115\075\104\115\082\102\052\088\061\061","\107\074\071\114\107\057\099\050";"\073\074\116\116\097\120\080\082\056\088\061\061","\107\082\115\084\070\109\102\109\084\043\061\061","\107\074\079\079\107\074\079\079","\107\057\103\079\075\086\071\105","\107\057\099\050\090\070\099\114","\054\043\061\061","\107\057\103\079\049\117\112\105";"\107\057\082\105\075\109\099\105";"\054\086\099\081\049\047\052\111\097\102\052\082\110\047\104\061","\107\085\112\050\107\085\112\105";"\049\086\099\053\073\051\079\043\073\051\084\057\076\051\099\087\106\117\057\043\054\086\102\067\049\086\070\087\049\120\115\098\089\068\122\061","\070\080\112\102\107\109\071\055\052\109\082\107\070\109\115\075\069\057\056\112\090\070\071\102\052\088\061\061","\107\057\099\050\090\051\071\050";"\105\115\122\082\049\090\115\122","\073\098\115\121\097\120\115\087\054\109\116\082\073\051\071\057\076\088\061\061";"\107\082\115\084\070\109\102\109\066\104\061\061","\107\074\071\114\090\070\099\050";"\100\100\087\087\100\083\068\047\100\065\074\105\100\118\083\048\100\076\090\083\100\119\074\066";"\100\065\110\090\055\047\106\061";"\073\051\084\057\076\051\099\087\119\067\115\085\106\117\057\043\105\051\104\061","\107\057\082\050\107\074\071\105";"\090\070\100\107\115\109\102\066\104\057\115\055\052\070\100\117\107\080\115\066\115\109\115\090\069\057\115\066\052\057\102\047\052\115\099\115\107\122\082\070";"\107\074\071\050\107\057\099\105","\115\122\101\061","\107\085\088\079\075\109\099\050","\054\086\099\081\049\047\052\111\097\102\052\111\054\086\071\082","\107\057\099\105\075\109\099\105","\107\057\099\105\107\057\103\079","\100\101\120\106\055\047\106\061","\076\086\102\085\115\086\102\081\054\074\102\087\056\079\061\061","\052\074\115\057\104\120\115\085\054\109\080\116\097\109\056\081\097\082\115\087\076\069\104\061","\107\085\112\105\107\074\071\050","\065\076\120\071\100\111\051\053\065\076\074\070\100\077\066\115","\056\086\115\085\054\102\105\116\076\051\052\086\049\086\102\048\097\079\061\061";"\100\076\110\119\118\118\121\112";"\100\073\110\088\100\073\121\051\100\111\121\081";"\066\067\043\082\056\068\108\111\066\043\061\061";"\073\074\102\085\054\102\099\085\097\086\115\050\049\109\100\116\049\051\070\061","\115\070\100\105\115\102\099\117\107\057\100\066\052\070\084\070\090\070\099\066","\107\085\112\114\107\057\103\079","\114\053\101\072\100\076\051\082\100\111\074\097\100\049\068\070\100\049\068\086\100\073\076\049\100\119\120\119\100\108\067\073\100\049\121\088\100\076\110\119\118\118\121\075\065\106\110\083\100\073\083\108\100\119\072\054\100\100\051\056\075\107\117\120\043\105\119\120\050\105\107\122\081\111\081\120\067\056\114\120\082\083\098\081\081\106\047\081\081\106\047\081\081\106\109\061";"\107\057\099\114\107\074\071\105","\107\074\071\050\090\107\112\050";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\104\070\099\102","\107\074\071\105\075\109\099\050";"\066\053\109\121\066\053\109\121\055\047\104\043","\054\086\099\057\073\051\071\066\054\051\057\061";"\104\070\043\043","\107\085\112\050\075\109\082\050";"\107\057\099\050\090\070\122\079";"\055\086\084\120\056\053\073\100\104\057\084\086\075\066\076\112\108\087\051\122\053\110\110\103\087\087\110\097\043\110\076\089\043\066\067\117\081\069\071\121";"\100\073\083\043\065\073\068\055\065\106\074\081\100\077\068\057","\107\057\082\050\075\109\099\050";"\100\049\110\121\100\118\087\114\100\083\074\118\100\119\083\116","\076\086\102\085\104\098\115\121\097\074\070\061","\107\074\079\079\049\086\071\105";"\107\057\082\105\090\107\088\079","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\070\109\102\115\070\057\070\061";"\097\086\115\057\054\086\102\121\056\074\115\057","\107\074\071\105\075\109\122\079","\073\074\099\113\073\120\102\057\090\086\099\057\107\048\115\113";"\073\051\084\057\076\051\099\087\076\074\115\100";"\100\083\074\053\100\056\121\108\065\119\074\099\100\073\051\098\119\067\101\087";"\107\082\115\084\070\109\102\109\084\088\061\061","\104\057\116\112\115\102\099\084\070\057\054\055\070\109\102\090\115\102\122\061","\070\074\115\057\107\051\099\122\056\104\061\061";"\115\086\102\113\097\086\115\121\106\109\052\082\054\086\115\053\054\086\115\122\106\104\061\061","\107\070\102\047\052\104\061\061";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\065\106\110\083\100\073\083\108\100\108\074\067\065\105\066\054";"\070\080\112\102\107\109\071\055\090\070\100\070\052\115\105\090\115\115\112\070";"\073\074\102\087\104\069\052\057\073\051\084\077","\107\085\088\079\107\057\099\050";"\104\082\115\086\052\082\052\056\070\109\070\061","\070\122\099\047\115\070\070\061";"\090\102\115\066\115\109\115\090";"\100\073\086\097\100\083\074\067\065\106\110\083\100\073\083\108\065\119\110\055\065\056\083\114\118\118\121\112";"\119\074\084\050\076\051\084\077\106\109\105\116\054\047\052\050\056\051\054\121\049\098\115\087\056\102\052\100\097\086\070\061","\055\086\084\120\056\122\056\086\052\053\070\074\066\107\057\072\100\100\087\087\100\083\068\047\100\049\110\121\100\118\087\114\100\083\074\118\100\119\083\116\119\066\076\105\122\072\076\051\077\090\088\061";"\084\053\082\074\073\053\109\061";"\107\074\071\105\107\085\088\079";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\122\082\090\070\080\052\106\052\070\102\075\070\057\115\075\052\043\061\061","\107\085\112\114\049\117\088\079";"\107\057\082\050\075\086\071\050";"\100\108\065\048\100\073\067\074\065\119\074\099\100\073\051\098\118\118\121\075\100\073\086\097\100\083\074\067\065\119\072\104\065\089\086\075\118\118\121\112","\055\086\084\120\056\120\073\079\075\117\088\079\075\068\075\053\100\119\067\065\100\119\083\086\100\083\074\053\100\049\067\101\065\119\072\104\065\089\086\075\118\118\121\075\065\089\072\098\100\073\087\078\065\119\068\117\100\111\051\057\100\076\072\100\100\083\072\070\100\049\083\120\055\047\106\061","\049\051\099\122\056\104\061\061","\100\108\067\073\065\076\120\050";"\100\108\121\112\100\083\074\053","\107\074\056\120\090\086\102\087\056\109\082\053\049\074\101\061","\076\086\102\085\052\086\115\067\054\051\056\120";"\107\057\082\105\075\117\112\105";"\070\102\105\114\115\109\115\117\115\109\071\105\070\080\104\061";"\115\070\100\105\115\102\099\102\051\109\082\070\052\070\052\055\115\122\115\106\090\070\084\075\052\104\061\061";"\107\085\112\114\090\107\112\050";"\065\076\066\110\100\111\121\065\100\119\067\113\118\118\121\075\100\073\086\097\100\083\074\067\065\119\072\104\065\089\086\075\118\118\121\112","\107\057\103\079\075\109\103\079","\052\048\105\116\049\051\070\061","\107\074\071\114\090\107\112\105";"\107\080\056\102\070\122\071\112\051\104\061\061","\107\074\071\050\049\117\112\050","\104\057\116\112\115\102\099\084\070\057\054\055\070\122\102\105\052\102\099\068\107\080\084\107\069\057\115\084\107\080\052\102","\054\120\102\050\054\051\070\061";"\104\079\061\061";"\070\080\052\112\115\102\115\107\069\072\076\112\113\087\120\113\082\102\078\120\043\049\049\111\077\056\107\082\116\077\119\111\082\106\050\061";"\100\049\110\121\100\073\086\097\100\083\074\067\065\119\072\104";"\107\057\082\050\075\109\103\079";"\070\098\112\082\049\086\071\052\054\051\115\080\056\115\054\111\049\120\052\081\054\079\061\061";"\107\057\099\105\107\057\122\079";"\104\051\056\057\056\069\106\061","\107\057\082\114\075\109\099\050","\107\057\103\079\075\109\099\050","\097\098\112\082\049\086\071\066\054\051\057\061";"\107\057\082\050\090\070\082\050","\100\065\087\056\100\119\074\084\100\077\066\115\100\111\121\081","\107\074\079\079\107\057\103\079";"\107\057\082\050\075\117\112\114";"\100\100\121\055\065\089\067\088\100\111\121\081\118\118\121\076\100\100\087\072";"\097\120\102\111\056\088\061\061","\070\080\052\112\115\102\115\107\069\072\090\101\087\072\051\089\083\066\051\103\043\066\076\088\083\043\061\061";"\049\051\115\087\054\070\071\111\097\098\104\061";"\070\109\071\112\051\070\115\090\069\057\052\102\104\070\104\061","\052\102\105\105\107\122\113\105\107\122\054\055\070\080\052\112\115\102\115\107";"\073\069\105\048\075\104\061\061";"\070\080\112\102\107\109\071\055\104\057\102\107\115\102\099\086\104\070\082\075\052\070\104\061";"\107\122\099\066\052\104\061\061","\107\057\082\105\075\109\082\105";"\065\076\083\052\065\076\120\050\100\073\120\084\065\119\072\049\100\119\067\113","\107\074\071\105\049\117\112\114","\107\085\088\079\049\086\071\050","\073\051\113\082\110\104\061\061","\104\070\105\117\052\109\115\086\052\057\116\105\090\122\113\075\107\070\100\114\070\102\102\090\070\080\052\115\115\082\054\073\051\115\111\116\073\120\084\122\056\051\056\048\076\086\082\083\076\074\071\113\049\120\099\079\097\069\105\085\054\047\115\074\054\098\116\100\110\053\088\071\075\053\075\057\084\107\073\098\066\117\122\077\119\079\061\061","\070\102\105\105\052\115\084\070";"\107\074\071\105\049\086\071\114","\051\079\061\061";"\107\057\122\079\075\109\082\050","\052\074\115\057\070\086\071\116\110\051\115\121\107\051\102\079\070\086\099\085\076\069\052\111\049\074\101\061","\104\070\099\102","\070\080\054\105\107\122\097\061";"\100\111\120\065\065\106\066\099\100\077\089\118\100\100\076\069\118\118\121\075\065\076\089\109\100\119\121\079\100\077\089\118\100\100\076\069\065\073\110\114\118\118\121\076","\107\057\103\079\049\109\099\105";"","\049\086\099\085\054\088\061\061","\070\080\052\112\115\102\115\107\069\072\090\101\053\110\110\112\077\110\067\084\077\072\076\079\113\088\061\061","\049\086\102\085\054\102\084\082\049\120\052\070\076\051\080\082","\076\069\084\068\049\098\084\085","\107\074\071\105\075\109\082\114";"\073\074\075\061","\114\053\118\120\050\077\081\048\082\111\055\108\108\073\117\108\043\108\048\120\067\105\117\048\043\049\112\049";"\107\074\056\120\090\086\102\087\056\109\082\057\056\051\057\061";"\097\098\112\082\049\086\071\066\073\051\080\082";"\104\070\053\120\077\076\114\082\048\089\053\108\081\100\117\108\108\073\085\122\087\089\098\053\043\106\119\053\043\106\119\053\043\106\106\061";"\056\051\100\074\076\069\105\081\049\120\080\082\049\048\052\116\049\102\052\100\097\086\070\061","\107\109\099\112\052\102\099\075\107\057\097\061";"\107\085\112\114\107\074\079\079","\065\076\051\079\100\056\066\112\100\101\067\086\100\073\072\052","\100\077\066\115\100\111\121\081\089\088\061\061","\054\086\115\101\054\088\061\061";"\107\085\112\050\090\107\088\079","\106\068\088\043\106\068\088\043\106\068\112\116\073\098\052\111\049\074\100\077\056\069\082\085\106\117\057\043\054\086\102\067\049\086\070\087\049\120\115\098\089\068\122\118\068\067\088\043\106\068\088\061";"\070\109\102\090\070\082\122\061","\075\068\101\080";"\114\053\101\072\100\065\110\052\065\056\083\086\100\073\083\043\100\108\086\111\100\119\120\119\100\108\067\073\100\118\087\107\100\111\074\055\118\118\121\075\100\108\086\067\100\076\090\084\104\070\099\102\065\089\065\072\100\118\074\087\118\118\121\112","\107\057\099\114\090\070\122\079";"\065\089\072\081\100\076\072\103\100\076\072\100\065\119\086\116","\056\086\115\085\054\109\054\115\090\070\104\061","\100\073\074\114\100\073\083\111\066\043\061\061","\073\074\099\113\073\120\102\057\090\086\099\057\115\086\099\057\073\051\071\106\056\051\102\050";"\076\086\102\085\052\086\082\085\056\051\102\085\056\104\061\061","\070\080\052\112\115\102\115\107\069\072\110\049\077\087\076\043\116\072\090\065\122\087\051\089\083\088\061\061","\107\074\071\114\107\057\099\105";"\100\073\076\049\065\076\120\050","\107\057\082\050\049\086\071\050";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\115\109\099\047\052\057\071\102\069\057\102\107\070\057\082\107\115\102\115\066\090\115\104\061";"\066\104\061\061";"\076\086\102\085\107\051\102\048\076\051\075\061","\107\085\112\050\049\086\071\114","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\100\119\072\054\100\100\051\056\100\108\120\107\100\111\076\113\100\108\068\090\100\077\068\070";"\107\057\082\114\049\117\088\079";"\107\082\115\084\070\109\102\109\066\088\061\061","\100\118\087\109\065\056\067\055\100\108\067\073\100\056\121\065\118\118\121\075\100\100\090\071\065\056\067\055\065\056\051\078\100\108\065\090\065\056\067\055\118\118\121\075\100\049\120\074\065\106\110\083\100\073\083\108\065\119\072\049\100\073\110\065\100\108\067\073\100\056\121\065\101\101\068\068";"\073\048\115\057\054\086\099\087\075\104\061\061";"\107\085\088\079\090\070\122\079";"\100\119\072\087\100\111\090\100\100\118\121\051\065\119\065\052\100\119\067\113\118\118\121\075\100\073\086\097\100\083\074\067\065\119\072\104\065\089\086\075\118\118\121\112","\054\120\115\121\097\074\082\081\049\043\061\061","\100\073\074\114\100\073\083\111\100\076\065\043\100\101\120\111";"\052\109\102\114\104\122\082\112\107\057\071\105\070\080\104\061","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\100\119\067\118\100\073\083\108\100\049\121\088\100\108\068\083\075\043\061\061","\115\122\102\090\090\070\102\068\107\109\115\107\069\057\071\114\104\070\052\102\052\088\061\061","\070\080\052\112\115\102\115\107\069\072\051\048\067\072\110\118\067\109\102\114\052\104\061\061","\107\074\079\079\090\070\082\105","\104\115\115\070\107\080\099\086\107\057\071\075\107\080\097\061";"\056\048\115\087\073\079\061\061","\065\089\066\102\100\076\090\047\100\073\072\073\100\073\121\051\118\118\121\075\065\073\110\084\100\111\076\079\065\089\072\109\100\119\121\079\100\077\089\118\100\100\076\069\065\073\110\114\118\118\121\076","\110\057\100\080\049\069\112\116\056\109\102\122\056\047\057\061","\114\053\118\120\120\108\119\082\043\056\085\048\067\077\049\120\043\106\047\081\081\106\085\120\082\065\117\120\050\100\069\120\067\076\055\108\108\073\085\081\081\106\109\061","\065\089\089\077\100\108\065\048\100\073\067\074\100\111\110\043\100\077\066\115\100\073\083\108\100\119\074\097\119\067\101\087";"\107\085\112\114\075\086\079\079","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\107\057\100\075\051\070\116\102\104\070\071\070\104\115\105\047\052\115\104\061";"\084\104\061\061";"\107\074\071\050\049\109\103\079","\107\057\122\079\049\086\079\079";"\084\043\061\061","\107\074\071\050\049\086\071\114";"\100\049\110\121\100\118\087\114\100\049\121\088\100\076\110\119\065\119\072\104\065\089\086\075\118\118\121\112\118\118\121\112\100\049\068\114\065\056\090\087\100\100\087\073\065\056\087\074\119\072\076\076\043\087\051\112\048\066\051\087\053\072\051\114\077\072\090\118\111\110\051\106\116\072\076\084\108\087\072\103\043\104\061\061","\070\080\112\102\107\109\071\055";"\107\057\082\105\075\109\099\114","\073\074\116\116\049\120\100\082\049\086\082\087\056\079\061\061","\054\086\082\113\056\104\061\061","\100\101\120\111\100\056\066\112\100\083\068\114\100\049\110\121\100\077\087\116\101\101\068\068";"\076\047\052\057\097\047\075\065\119\121\099\098\054\098\097\087\073\069\115\057\049\074\116\082\049\047\088\087\073\074\075\061","\054\109\082\087\056\120\103\061";"\100\049\110\121\100\118\087\114\100\111\083\068\100\073\086\097\065\119\072\104\065\089\086\075\118\118\121\112\118\118\121\112\100\049\068\114\065\056\090\087\100\100\087\073\075\068\078\120\120\108\119\082\043\056\085\082\077\108\078\082\053\065\078\122\087\065\069\082\067\106\055\120\053\076\119\081\081\106\109\061","\104\074\099\087\054\047\105\116\097\098\104\061";"\107\057\099\114\107\057\103\079";"\076\069\084\079\049\098\054\082\097\043\061\061";"\054\047\082\079\056\104\061\061","\070\109\102\090\115\102\082\055\107\070\115\084\104\122\115\090\069\057\052\105\070\057\102\068\107\109\070\061";"\100\119\067\065\100\119\083\086\100\083\074\053\100\049\067\101\065\119\072\104\065\089\086\075\118\118\121\075\100\049\110\121\100\118\087\114\100\119\067\065\100\108\089\108\065\119\068\117\100\111\051\057\052\074\102\113\049\051\047\108\077\077\118\048\081\076\118\122\087\119\108\071\089\066\051\105\053\110\051\088\081\066\072\103\120\043\061\061","\100\119\074\043\100\049\072\102\065\076\086\118\065\056\074\067\100\076\072\100\100\100\087\087\100\083\068\047\101\101\068\068","\065\089\065\072\100\118\074\087\100\073\072\068\100\111\051\079";"\070\109\071\112\051\070\115\090\069\080\052\112\070\122\054\102\115\102\099\117\090\109\102\066\052\057\115\109";"\056\120\082\082\049\086\104\061";"\106\066\051\106\082\072\067\116\083\066\051\098\050\087\110\118\053\072\067\067\083\072\076\101\116\110\120\056\111\066\072\103\043\104\061\061","\110\057\100\115\107\115\112\112\052\117\102\099";"\100\073\051\085\065\056\110\113\065\106\072\097\100\073\074\115";"\104\122\102\117\090\057\054\090\107\080\115\066\052\088\061\061";"\073\074\099\113\073\120\102\057\107\098\056\082\097\122\116\082\073\051\079\061","\115\057\102\090\107\109\099\117\090\079\061\061","\065\105\068\108\065\056\083\086\065\073\089\083\065\056\066\112\100\101\089\101\100\049\121\100\065\049\121\043\100\083\068\047";"\107\057\082\050\107\085\112\114";"\070\080\052\112\115\102\115\107\069\072\051\069\048\066\067\116\043\066\110\106\116\087\051\114\122\104\061\061";"\090\057\115\056\069\057\115\112\115\109\082\066\052\079\061\061";"\073\074\071\116\097\098\084\105\056\088\061\061","\107\120\115\101\054\102\052\111\049\051\070\061","\084\088\061\061","\107\074\071\050\107\057\103\079";"\051\122\099\066\052\115\099\117\090\109\102\066\052\057\115\109\069\057\082\066\052\109\099\114\070\082\075\061","\110\057\100\115\107\115\112\112\052\117\082\099","\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\104\057\116\112\107\122\100\102\107\102\099\115\070\109\052\112\115\109\070\061";"\054\069\112\122\073\069\052\082\115\086\082\113\056\104\061\061";"\115\070\082\055\070\057\084\112\107\109\115\055\104\057\116\112\107\122\054\102\052\088\061\061";"\100\073\072\085\065\119\074\050\084\117\069\082\087\083\073\061","\097\074\099\080\097\120\084\082\107\120\102\113\056\104\061\061";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\104\115\115\070\107\057\080\114\115\070\100\070";"\107\057\122\079\090\051\079\079","\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\051\106\087\087\120\083\083\088\061\061","\054\086\082\113\056\051\099\080\054\088\061\061","\104\057\116\112\115\102\099\084\070\057\054\055\107\070\099\066\070\080\052\102\070\082\099\102\107\070\099\070\052\104\061\061";"\107\057\082\050\049\117\112\114";"\056\086\115\085\054\109\100\116\049\051\070\061","\070\109\071\112\051\070\115\090\069\080\105\102\052\057\115\066\069\057\052\105\070\057\102\068\107\109\115\109";"\107\082\115\084\070\109\102\109\075\079\061\061";"\056\086\099\087\054\086\082\087\054\086\115\121\097\048\115\079\054\088\061\061";"\065\119\074\050\065\119\083\077\066\107\117\082\087\083\073\081\100\077\067\102\065\056\120\122\100\100\087\087\100\083\068\047","\107\057\082\050\107\057\099\105","\076\086\099\057\107\098\056\082\097\122\116\082\073\051\079\061","\114\053\118\111\120\119\078\082\067\083\077\082\113\118\107\120\067\101\048\082\116\073\081\120\067\105\053\120\082\111\055\048\087\100\114\120\048\056\078\081\081\106\085\120\043\076\119\082\111\106\098\120\050\077\081\048\082\111\055\108\077\077\118\048\081\076\101\061";"\054\086\082\113\056\070\052\111\056\120\073\061";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\070\102\105\114\115\109\115\117\115\102\054\106\090\115\084\104\052\115\106\061","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\104\115\115\070\107\057\116\102\104\070\079\061";"\100\049\121\088\100\076\110\119\065\119\072\104\065\089\086\075\118\118\121\075\100\108\067\073\100\111\076\069\100\119\067\113\100\073\067\047\100\073\087\078\065\073\110\084\065\119\074\099\100\100\051\075\065\056\074\067\118\118\121\112";"\073\074\102\085\056\070\082\122";"\055\047\105\049";"\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\052\122\102\105\107\109\115\109";"\107\057\103\079\049\117\088\079","\115\070\100\105\115\102\099\112\115\115\105\112","\065\119\074\050\100\056\121\106\100\076\072\118\100\108\068\083","\107\085\088\079\107\057\099\114";"\107\057\099\114\090\070\103\079","\055\086\084\120\056\122\056\086\084\057\104\079\104\107\101\072\100\065\110\118\065\056\120\122\100\073\067\065\065\076\083\108\118\118\121\076";"\084\117\075\121\075\107\088\081\073\051\105\053\056\086\115\120\056\074\116\111\076\120\113\050\049\051\100\081\097\047\102\121\097\098\052\080\054\048\054\101\110\069\108\077\104\070\105\117\052\109\115\086\052\057\116\105\090\122\113\075\107\070\100\114\070\102\102\090\070\080\052\115\115\082\054\073\051\115\108\100\066\117\097\074\084\104\061\061","\100\111\087\057","\107\085\112\105\049\109\099\105";"\076\051\084\081\049\043\061\061";"\065\089\065\072\100\118\074\087\065\119\072\047\065\073\110\114\065\056\067\106\100\073\068\103\100\119\067\065\118\118\121\076";"\104\098\115\121\097\074\070\061";"\052\051\052\111\054\109\105\081\110\088\061\061";"\107\074\071\105\075\109\099\114","\107\085\112\105\090\070\103\079","\100\073\086\097\100\083\074\067\065\119\110\055\065\056\083\114\100\108\067\052";"\049\048\115\113\073\120\115\121";"\070\080\112\102\107\109\071\055\104\115\115\090\104\115\099\090\052\070\080\114\115\122\115\109","\070\080\112\102\107\109\071\055\052\109\102\084\104\070\054\102";"\114\107\100\103\073\074\056\120\052\122\056\086\084\107\073\100","\052\053\109\121","\107\057\082\050\107\085\112\105","\107\082\115\084\070\109\102\109\075\043\061\061","\097\074\099\080\097\120\084\082\052\080\115\105\052\088\061\061";"\097\120\115\113\049\098\056\082";"\107\057\082\114\107\085\088\079","\107\057\082\114\107\057\082\105";"\065\056\051\097\100\073\066\114";"\107\085\088\079\107\074\071\050";"\107\057\082\105\049\117\112\105","\065\119\072\049\100\073\051\082\100\073\120\081\100\111\121\050\065\056\067\055\100\119\121\084\118\118\121\075\065\106\110\083\100\073\083\108\065\089\065\072\100\118\074\087\100\056\074\120\100\073\051\119\100\119\067\065\100\076\087\112\100\065\051\101\100\076\072\100\065\119\086\116\066\043\061\061","\107\074\071\050\049\086\071\050","\054\120\082\085\076\051\105\050\056\104\061\061","\056\098\084\080\073\043\061\061","\107\074\071\105\075\086\071\114";"\107\057\082\105\049\109\099\105";"\055\086\084\120\056\122\056\086\052\053\070\074\066\107\057\072\100\100\087\087\100\083\068\047\100\049\110\121\100\118\087\114\100\077\087\116\065\089\086\088\119\066\076\105\122\072\076\051\077\090\088\061","\097\074\099\080\097\120\084\082\052\120\071\116\056\098\075\061","\107\057\082\105\107\057\082\105";"\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\090\070\100\070\052\115\105\090\115\115\112\070\052\070\104\061";"\056\086\115\085\073\079\061\061","\115\070\100\105\115\102\099\106\052\070\102\075\115\109\116\055\052\082\105\102\070\115\115\102\107\082\104\061";"\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\051\081\087\072\076\088\083\043\061\061","\110\057\100\115\107\115\112\112\052\117\056\099","\069\107\108\043","\100\100\090\055\100\056\086\099\100\073\068\103\119\072\067\107\048\110\120\047\053\072\090\099\053\087\090\065\053\087\067\087\081\087\051\087\120\087\051\088\081\102\050\061","\051\122\116\112\107\122\056\112\107\122\054\075\090\115\084\070","\110\057\100\080\049\069\112\116\056\109\080\080\049\047\052\099";"\107\074\071\114\075\117\088\079";"\115\109\102\066\090\057\105\115\052\122\056\119\052\115\122\061","\065\073\110\066\100\108\068\048\089\066\110\075\083\121\122\061";"\052\122\082\090\070\080\052\075\090\115\084\070","\097\098\052\116\097\048\052\070\076\051\080\082","\052\070\100\051\090\115\105\114\107\122\080\102\107\082\052\112\107\088\061\061";"\107\080\056\102\070\122\116\102\104\070\071\055\115\122\102\075\115\070\070\061","\107\074\071\105\090\051\071\105";"\054\120\115\121";"\107\057\099\105\049\086\071\114";"\107\057\099\050\075\109\082\105";"\049\098\056\082\097\122\116\082\073\051\079\061","\107\057\103\079\049\117\112\114";"\070\122\084\070\070\122\079\113\114\104\061\061","\100\073\074\115\100\101\087\050\065\089\065\072\100\118\074\087\065\056\067\055\100\056\086\073\100\065\051\054\100\065\076\114";"\107\085\112\114\049\109\099\114","\100\077\089\116\100\111\121\105\100\108\120\072\100\073\067\079\100\108\083\088\065\106\066\099\118\118\121\076";"\107\048\115\113\097\086\102\122\052\086\082\074","\073\051\084\057\076\051\099\087\076\074\115\100\097\080\050\053\073\051\084\057\076\051\099\087\076\074\115\100\097\121\050\071\069\090\088\099\106\086\102\053\054\086\082\081\049\043\061\061","\107\074\071\105\075\117\112\050";"\107\051\102\111\049\122\116\116\049\120\052\105\073\074\099\087","\100\056\068\117\100\118\066\051";"\104\074\116\116\049\120\054\082\090\086\115\116\049\102\052\116\097\120\054\082\054\088\061\061","\107\085\112\105\107\057\122\079","\107\057\122\079\107\057\099\050";"\100\065\110\118\065\056\120\122\119\072\051\067\048\087\051\089\108\088\061\061";"\054\051\100\079\073\051\084\077","\119\098\084\053\097\120\082\079\054\068\112\070\049\074\054\048\049\086\115\107\076\086\099\098\049\067\043\111\068\043\061\061","\114\053\101\072\100\049\121\069\065\105\051\072\100\119\083\076\100\119\120\119\100\108\067\073\100\049\121\088\100\076\110\119\118\118\121\075\100\049\121\088\100\056\068\081\065\106\110\083\100\073\083\108\104\070\099\102\100\108\083\088\065\106\066\099\118\118\121\112\118\118\121\112\118\118\121\112";"\073\051\116\079","\070\080\052\112\115\102\115\107\069\072\110\106\116\087\051\114\122\110\051\051\048\110\067\084\077\079\061\061","\052\043\061\061";"\100\065\110\118\065\056\120\122","\100\056\121\053\100\073\051\105\065\056\110\083\100\101\065\079";"\114\107\101\061";"\100\077\067\102\065\056\120\122\100\100\087\087\100\083\068\047";"\107\098\056\082\097\122\116\082\073\051\071\051\073\051\071\080\056\104\061\061","\069\079\061\061","\107\057\082\105\090\070\082\050","\065\105\068\108\065\056\083\086\065\073\089\083\065\056\066\112\100\101\089\101\100\049\121\100\065\119\083\077\065\119\065\100";"\090\109\102\107\115\080\115\109\104\070\103\061","\107\048\115\113\097\086\102\122\070\098\115\067","\107\057\099\050\049\086\071\105","\107\074\079\079\075\086\071\050";"\104\080\052\090\107\068\080\090";"\070\074\115\057\090\086\115\116\049\102\052\116\097\120\054\082\054\088\061\061";"\100\111\090\118\100\073\110\118\100\083\067\116\100\049\121\114";"\104\080\052\090\107\068\057\099";"\090\109\115\112\107\102\099\051\104\070\071\115\052\115\078\122\081\100\098\048\082\056\048\120\067\056\114\120\082\083\098\108\043\118\098\111\116\101\078\082\043\119\079\061","\107\074\071\050\107\074\079\079";"\073\074\116\116\097\043\061\061";"\107\074\100\119\056\069\082\115\097\088\061\061","\054\086\082\057\049\086\070\061";"\100\101\087\068\065\073\110\066\065\076\074\070\100\077\066\115\065\106\074\081\100\077\068\057";"\114\104\061\061";"\097\086\102\121\054\047\122\061";"\070\080\112\102\107\109\071\055\107\070\082\107\070\057\115\109";"\056\120\071\081\049\098\106\061";"\115\086\099\048\056\074\071\082\104\070\099\102","\107\085\112\105\049\109\103\079";"\100\076\065\105\100\073\051\108\100\056\086\089\065\089\074\120\118\118\121\076\100\049\068\054\065\089\072\115\100\065\076\112\100\100\090\108\100\108\072\090\100\119\087\074","\107\057\082\050\090\051\079\079","\100\111\051\052\065\119\051\066\100\119\121\073\100\073\051\106\100\056\074\120\100\073\051\119\100\049\068\114\100\049\065\098";"\100\119\067\065\100\119\083\086\100\083\074\053\100\049\067\101\065\119\072\104\065\089\086\075\118\118\121\075\100\049\110\121\100\118\087\114\100\119\067\065\100\108\089\108\065\119\068\117\100\111\051\057\100\076\072\100\100\083\072\070\100\049\083\120\100\119\067\065\100\083\074\053\100\049\067\101\084\107\088\108\100\073\120\084\100\073\068\103\118\118\121\076";"\107\057\082\114\090\070\082\105";"\100\119\074\043\100\049\072\102\065\076\086\118\100\119\074\084\100\119\083\066\100\100\087\087\100\083\068\047\065\106\066\075\100\056\068\066\101\101\068\068";"\107\074\071\114\090\051\071\050";"\065\089\089\077\100\108\065\048\100\073\067\074\118\118\121\075\100\073\086\097\100\083\074\067\065\119\072\104\065\089\086\075\118\118\121\112","\100\119\074\043\065\056\074\067\100\111\121\054\065\056\090\056\065\089\072\081\100\100\083\109\100\111\076\100\100\056\068\052\118\118\121\112";"\107\074\079\079\049\109\082\114","\070\080\112\102\107\109\071\055\052\109\082\107\070\109\115\075";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\052\109\102\114\104\122\082\112\107\080\115\066\090\115\104\061";"\115\109\102\075\052\070\100\070\104\057\116\112\107\122\054\102\052\088\061\061";"\107\085\112\050\090\107\112\114";"\107\057\082\050\090\070\099\050";"\100\049\121\088\100\076\110\119\065\119\072\104\065\089\086\075\068\043\111\103\073\074\056\120\056\053\088\079\075\117\088\079\100\108\067\104\100\073\083\055\100\049\121\088\100\076\110\119\065\119\072\104\065\089\086\075\118\118\121\075\100\108\067\073\100\111\076\069\100\119\067\113\100\119\067\084\065\089\076\112\065\073\110\084\065\119\074\099\100\100\051\075\065\056\074\067\106\090\109\116\055\047\106\089\068\043\108\089\100\083\121\067\065\119\072\066\100\073\076\102\065\073\066\108\100\076\074\120\100\119\120\043\100\119\083\122\100\077\051\112\118\118\121\112","\107\057\099\114\090\051\071\114";"\100\100\087\087\100\083\068\047\100\049\110\121\100\118\087\114\100\076\090\084\100\077\090\118\119\066\076\105\122\072\076\051\077\110\051\122\053\110\076\057\087\072\072\103\053\088\061\061","\107\057\099\114\075\109\103\079";"\107\057\082\114\075\109\122\079","\107\082\115\084\070\109\102\109\075\088\061\061","\100\119\067\084\100\101\086\113\065\106\074\081\100\077\068\057","\107\057\122\079\107\057\122\079";"\100\065\074\105\100\049\065\102\065\119\065\107\100\073\051\082\100\118\087\107\100\111\074\055\119\067\101\087","\107\057\103\079\107\057\099\050";"\055\086\084\120\056\120\073\079\075\117\088\079\075\066\051\098\050\087\110\118\053\072\076\076\043\087\051\112\048\068\100\103\097\043\061\061";"\107\074\079\079\090\051\071\105","\104\069\115\057\049\057\082\087\054\086\115\121\073\051\084\057";"\107\057\103\079\107\074\071\105","\107\057\082\050\090\051\071\114","\100\111\090\118\100\073\110\118\100\108\068\048\100\108\083\088\065\106\066\099";"\049\120\115\101\054\102\084\098\076\051\100\048";"\104\048\105\111\056\074\116\057\049\120\115\085\097\079\061\061";"\106\079\061\061";"\070\080\052\112\115\102\115\107\069\072\110\119\043\087\120\047\053\087\120\113\082\066\076\085\082\110\067\084\077\072\076\079\113\088\061\061";"\070\080\052\112\115\102\115\107\069\057\102\115\115\109\099\086\107\057\071\075\107\080\097\061","\107\057\103\079\049\117\112\050";"\100\073\086\097\100\083\074\067\100\065\110\118\100\073\083\108","\100\119\067\065\100\119\083\086\100\083\074\053\100\049\067\101\065\119\072\104\065\089\086\075\118\118\121\075\100\049\110\121\100\118\087\114\100\119\067\065\100\108\089\108\065\119\068\117\100\111\051\057\100\119\083\087\100\049\083\120\100\119\067\065\100\083\074\053\100\049\067\101\084\107\088\108\100\073\120\084\100\073\068\103\118\118\121\076","\115\109\102\090\052\057\115\070\107\122\115\112\070\122\115\107\115\109\115\066\052\070\080\056","\065\056\083\104\065\105\110\114","\052\074\102\113\049\051\109\061";"\119\074\084\116\097\098\104\121","\107\057\099\105\049\109\103\079","\075\088\061\061","\070\080\052\112\115\102\115\107\069\057\052\102\104\082\115\047";"\073\051\084\057\076\051\099\087\119\067\115\085\106\117\057\043\054\047\105\080\056\104\061\061";"\107\057\103\079\090\070\099\114";"\107\082\115\084\070\109\102\109\084\079\061\061";"\107\057\082\105\075\086\071\114";"\055\102\104\061","\052\109\102\084\104\070\054\102\070\043\061\061";"\115\109\102\066\090\079\061\061";"\051\122\099\066\052\115\099\117\090\109\102\066\052\057\115\109";"\115\070\100\105\115\102\099\070\090\102\105\102\104\115\052\055\070\057\082\070\115\070\102\070\090\070\099\066\069\080\115\104\052\109\102\070\052\104\061\061","\100\083\074\053","\055\086\084\120\056\122\056\086\084\057\104\079\104\107\101\072\100\076\089\110\100\073\083\043\100\077\089\118\100\100\076\069\100\073\067\065\065\076\083\108\051\079\061\061";"\100\049\121\088\100\076\110\119\118\118\121\076","\107\057\099\050\075\117\112\114","\107\057\082\114\075\109\099\114","\107\057\122\079\075\117\112\050";"\100\056\121\053\100\073\051\105\065\073\086\107\100\083\068\047";"\107\057\103\079\049\109\082\050","\065\073\068\117\100\056\086\099\065\119\110\055\065\056\083\114\100\108\067\052","\114\053\101\072\100\065\110\052\065\056\083\086\100\073\083\043\100\108\086\111\100\119\120\119\100\108\067\073\100\049\121\088\100\076\110\119\118\118\121\075\065\106\110\083\100\073\083\108\100\049\121\088\100\056\068\081\100\076\110\119\100\118\087\106\104\070\099\102\100\108\083\088\065\106\066\099\118\118\121\112\118\118\121\112\118\118\121\112";"\105\110\072\103\053\066\051\103\043\066\051\048\067\072\051\104\043\072\120\054\108\087\051\075\116\090\101\061","\107\074\071\114\107\085\112\105";"\107\057\122\079\090\051\071\105","\073\051\106\071\075\053\104\121";"\107\085\112\050\090\051\079\079","\104\080\105\102\104\115\052\102\070\057\115\117\115\115\105\102";"\097\098\112\082\049\086\071\105\056\088\061\061";"\100\049\121\065\100\111\051\106\104\082\115\086\052\087\051\104\077\072\051\089\083\088\061\061","\073\069\115\121\073\115\052\100\097\086\070\061","\107\074\071\050\090\070\122\079","\115\122\102\075\115\070\115\055\100\119\072\054\100\056\086\099\065\089\086\088\065\073\110\114","\107\057\082\105\049\109\082\105";"\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\107\057\100\102\090\109\115\112\107\088\061\061","\107\051\102\111\049\122\116\116\049\120\052\105\054\086\115\113";"\104\057\116\112\115\102\099\084\070\057\054\055\107\070\099\066\070\080\052\102\070\082\099\107\104\115\122\061";"\073\074\099\113\073\120\102\057\090\086\099\057\107\098\056\082\097\122\116\082\073\051\079\061","\107\057\082\114\075\086\071\050","\115\109\099\114\107\102\052\105\070\088\061\061","\107\057\082\114\049\109\099\050";"\070\122\115\075\107\057\102\109\069\080\105\112\090\070\104\061","\097\086\099\098\056\069\105\057\110\069\112\082";"\097\098\115\067";"\107\074\071\105\049\117\112\050";"\056\074\080\116\054\086\084\108";"\073\051\084\057\076\069\056\082";"\055\047\106\061";"\070\080\112\102\107\109\071\055\104\115\115\090\104\115\099\112\070\102\112\075\090\070\115\109","\090\109\115\112\107\102\099\051\104\070\071\115\052\115\078\122\081\100\098\048\082\056\048\120\067\056\114\120\082\083\098\120\043\105\119\120\050\105\107\082\043\119\079\061","\065\073\068\105\100\108\087\111\065\076\066\055\100\101\120\111","\115\070\100\105\115\102\099\107\070\109\115\075\107\109\084\112\070\080\052\055\070\080\052\114\070\088\061\061";"\114\053\101\072\100\076\051\082\100\111\074\097\100\049\068\070\100\049\068\086\100\073\076\049\100\119\120\119\100\108\067\073\100\049\121\088\100\076\110\119\118\118\121\075\065\106\110\083\100\073\083\108\100\119\072\054\100\100\051\056\075\053\069\108\043\118\098\111\116\101\078\122\081\111\081\120\067\056\114\120\082\083\098\081\081\106\047\081\081\106\047\081\081\106\109\061";"\056\098\115\111\056\088\061\061","\107\085\112\050\090\051\071\114","\100\108\120\088\100\111\121\105\065\106\086\075\100\119\067\076\100\065\051\054\100\065\076\114\065\089\065\072\100\118\074\087";"\065\105\066\054\065\073\110\114\100\119\074\066\100\119\083\066","\076\074\115\100";"\107\085\112\050\107\074\071\114";"\107\057\103\079\075\109\082\114";"\056\048\115\087\073\098\052\111\049\074\101\061","\107\085\112\114\049\086\079\079","\066\079\108\061","\107\057\103\079\090\051\071\114","\100\056\087\067\065\056\067\055\100\077\089\118\100\100\076\069";"\070\080\052\112\115\102\115\107\069\072\067\047\083\087\051\089\083\066\076\106\120\066\051\097\087\043\061\061";"\110\057\100\080\049\069\112\116\056\102\084\080\073\048\057\061";"\049\051\099\087\054\086\043\061";"\107\085\112\114\075\117\112\050";"\097\086\115\057";"\070\080\052\112\070\082\052\055\104\115\115\070\107\080\105\102\070\109\115\112\115\102\099\107\070\109\115\075\107\088\061\061","\056\086\115\085\054\109\056\050\073\051\054\085";"\100\100\087\087\100\083\068\047\100\119\083\090\100\073\083\108";"\076\051\100\057\056\069\105\121\054\069\112\057\107\048\115\113","\114\053\118\120\050\077\081\048\082\111\055\082\067\119\077\111\083\083\116\049","\107\074\079\079\107\085\112\105","\073\074\071\116\097\098\084\066\073\051\080\082","\107\085\112\050\049\109\082\050";"\107\057\099\114\107\085\112\105","\104\122\071\112\104\057\113\075\090\115\084\070";"\107\085\112\105\075\109\082\105";"\119\088\061\061","\107\057\082\114\107\057\122\079","\119\098\084\053\097\120\082\079\054\068\112\070\049\074\054\048\049\086\115\104\073\069\115\085\056\090\043\111\068\043\061\061";"\056\120\102\053\054\086\099\111\049\043\061\061","\070\122\115\117\104\070\071\117\069\057\116\102\104\070\071\107","\107\109\099\112\052\109\082\066\052\080\099\107\104\080\105\102\052\070\100\055\052\109\082\107\104\070\105\075\052\070\104\061","\052\086\099\112\073\098\052\111\049\074\101\061";"\070\080\112\102\107\109\071\055\104\057\102\107\115\102\099\107\115\109\102\090\115\088\061\061";"\070\080\112\102\107\109\071\055\104\115\115\090\104\115\099\090\052\070\056\090\052\115\084\106","\107\057\099\114\107\074\071\114";"\107\085\112\105\090\051\071\050";"\100\076\051\106\100\077\066\115\100\101\089\100\100\056\068\084\100\073\086\097\100\083\074\067\100\073\083\108\100\119\074\097\106\117\075\079\100\065\110\090\118\118\121\112\118\118\121\112\118\118\121\112";"\106\088\061\061","\065\089\066\100\100\119\074\107\100\119\120\119\100\118\074\052","\076\069\084\051\056\051\116\111\073\074\071\082";"\107\074\079\079\075\109\082\114";"\054\086\099\057\073\051\071\106\056\051\102\050\054\086\043\061","\115\086\099\048\056\074\071\082\070\074\116\081\054\074\101\061","\107\057\122\079\090\051\071\050","\069\110\072\103\120\043\061\061";"\065\106\110\083\100\073\083\108\100\056\068\117\065\056\074\067\100\073\121\102";"\107\085\112\105\049\109\082\105";"\107\057\082\105\049\117\112\050","\100\118\087\107\100\111\074\055\118\118\121\076","\100\073\086\097\100\083\074\067\065\119\072\104\065\089\086\075\118\118\121\112\052\043\061\061";"\065\119\110\055\065\056\083\114\066\043\061\061","\107\074\079\079\075\109\099\105";"\104\115\115\070\107\057\116\102\107\102\112\117\104\115\084\070","\065\076\083\052\065\076\120\050\100\119\067\113\089\066\090\101\053\110\067\047\083\087\051\089\083\066\090\101\067\072\120\111\077\068\122\061";"\070\122\102\105\052\088\061\061","\049\086\099\085\054\086\116\079","\075\107\119\082\081\106\088\061";"\052\109\102\084\104\070\054\102";"\056\098\105\081\054\069\112\066\049\079\061\061";"\100\111\051\052\065\119\051\066\100\119\121\073\100\073\051\106\100\077\089\118\100\100\076\069","\107\085\112\105\049\109\082\050";"\076\086\082\122\056\070\099\087\052\069\084\053\073\069\112\082";"\075\107\088\061";"\070\080\112\102\107\109\071\055\104\115\115\090\104\115\099\090\052\070\080\114\115\122\115\109\069\057\052\114\070\057\070\061";"\054\086\102\121\056\074\115\057\054\086\102\121\056\074\115\057";"\100\119\074\043\065\089\089\077\100\076\051\106\100\077\066\115\100\101\089\100\100\056\068\084\118\118\121\112","\105\110\072\103\053\066\051\103\043\066\051\048\067\072\051\051\048\110\076\079\113\068\101\061","\100\056\068\117\100\056\076\054";"\054\086\102\121\056\074\115\057\090\051\100\120\049\079\061\061","\065\073\068\105\100\108\087\111","\115\070\100\105\115\102\099\117\107\057\080\068\104\115\104\061";"\107\057\099\114\107\074\079\079","\070\120\115\050\049\074\102\122";"\107\085\112\114\090\070\122\079","\054\086\099\057\073\051\071\106\056\051\102\050";"\100\073\086\097\100\083\074\067\104\070\099\102\118\118\121\076","\076\047\088\061";"\052\102\105\105\107\122\113\105\107\122\054\055\115\122\102\075\115\070\070\061";"\073\048\115\057\054\086\099\087";"\110\057\100\115\107\115\112\112\052\117\054\099";"\107\057\099\105\107\057\099\050","\052\070\100\117\107\080\115\066\115\109\115\090\069\057\115\066\052\088\061\061","\107\074\071\114\090\070\122\079","\054\086\115\101\054\047\115\121\056\104\061\061";"\070\080\052\112\115\102\115\107\069\072\051\078\083\072\120\088\048\072\067\099\077\066\051\097\067\088\061\061","\110\057\100\115\107\115\112\112\052\117\115\099","\090\057\115\056\069\057\052\090\090\070\100\119\090\070\100\047","\073\048\115\120\056\122\082\122";"\070\080\052\112\115\102\115\107\069\072\051\106\120\072\051\118\087\087\120\073\048\072\051\106\082\072\051\087\053\079\061\061";"\100\083\074\053\100\056\121\108\065\119\072\104\065\089\086\075\100\119\067\113\119\067\101\087";"\100\101\120\106";"\104\069\084\085\076\069\084\057\115\051\100\111\054\088\061\061";"\051\080\101\050\055\102\101\081\069\090\050\061","\100\111\110\043\100\077\066\115\100\073\083\108\100\119\074\097","\049\098\056\082\097\120\113\111\049\086\079\061";"\115\070\100\105\115\102\099\084\104\070\100\112";"\106\066\051\098\050\087\051\089\108\066\051\102\111\110\076\051\081\110\076\085\082\110\120\073\048\072\051\106\082\072\066\088\043\043\061\061","\107\057\099\105\090\051\071\050","\115\070\100\105\115\102\099\109\090\070\115\109","\070\122\099\075\052\115\099\117\090\109\102\066\052\057\115\109\069\057\082\066\052\122\099\090\107\104\061\061";"\090\109\115\112\107\102\099\086\090\115\105\107\115\102\052\112\107\122\113\055\115\122\102\075\115\070\070\061","\097\120\102\111\056\109\082\087\056\086\115\101";"\107\057\099\105\090\107\112\105","\107\074\071\105\075\117\112\114","\107\074\071\105\075\117\112\105","\104\115\115\070\107\080\099\105\107\082\052\102\070\082\105\115\070\102\104\061";"\097\047\056\079";"\065\105\120\076\100\049\121\071\100\101\086\080\065\076\074\068";"\073\074\099\113\049\051\102\087\056\088\061\061","\070\122\115\107\090\115\084\070\052\070\104\061","\056\069\056\082\049\048\104\061","\090\109\115\112\107\102\099\107\115\109\102\070\115\115\084\055\107\057\100\102\090\109\115\112\107\109\105\115\115\102\052\114\107\043\061\061","\073\074\099\087\049\120\115\053\054\086\115\122","\090\109\115\112\107\109\113\102\051\115\075\061","\107\057\103\079\090\070\099\050","\107\085\112\105\075\109\082\050","\110\057\100\115\107\115\112\112\052\117\052\099";"\106\068\088\043\106\068\088\043\106\068\112\079\073\069\105\082\049\048\104\043\114\090\112\079\073\069\105\082\049\048\104\043\049\098\106\043\097\074\115\050\056\053\111\047\056\069\052\104\073\069\105\082\049\048\104\108\089\107\050\089\106\068\088\043\106\068\088\043\106\068\112\079\073\069\105\082\049\048\104\065\070\074\115\057\104\069\052\057\097\120\082\067\054\069\052\082\089\068\105\119\056\069\082\066\054\051\057\071\106\067\071\087\076\051\079\111\066\079\108\043\106\068\088\043";"\073\074\071\116\097\098\075\061","\100\111\110\043","\107\085\088\079\049\117\088\079","\105\051\104\082\056\068\115\122\114\121\115\122\114\121\115\122\114\121\115\122\114\079\061\061","\076\086\102\085\070\086\099\111\097\074\099\087";"\100\065\086\087\100\076\065\076";"\107\057\103\079\075\117\088\079","\107\085\112\114\049\109\082\114","\070\080\112\102\107\109\071\055\104\115\115\090\104\115\099\107\115\109\099\075\052\070\101\061";"\100\073\083\043\065\119\074\099\065\056\090\056\065\089\072\081\118\118\121\075\065\089\072\098\070\120\115\050\049\074\102\122\100\119\067\088\100\119\067\119\100\100\051\075\065\056\074\067\118\118\121\112","\065\076\066\110\065\089\086\075\100\119\067\113";"\097\120\102\087\056\086\099\113","\104\069\115\057\049\080\084\057\073\069\052\080\097\079\061\061","\075\117\122\061";"\107\085\112\050\049\109\122\079";"\097\086\099\098\056\069\105\113\073\069\043\061","\107\057\122\079\107\074\079\079","\070\074\115\053\054\069\105\082\104\051\084\057\076\051\099\087\104\048\115\057\054\086\099\087\115\086\115\113\097\086\071\116\054\086\070\061","\065\089\065\072\100\118\074\087\104\070\099\102\118\118\121\076","\107\085\088\079\107\057\099\105";"\052\109\115\112\115\109\116\119\107\122\082\047\090\102\104\061"}
	for lIII, IIII in ipairs({
		{
			864123 + - 864122;
			- 202605 - (- 203750)
		},
		{
			619635 + - 619634;
			- 334729 - (- 335082)
		};
		{
			- 198916 - (- 199270),
			812466 - 811321
		}
	}) do
		while IIII[48418 + - 48417] < IIII[943293 + - 943291] do
			I1II[IIII[- 380140 + 380141]], I1II[IIII[- 117604 + 117606]], IIII[305065 + - 305064], IIII[876797 - 876795] = I1II[IIII[- 696246 + 696248]], I1II[IIII[- 448302 + 448303]], IIII[- 580722 + 580723] + (782520 + - 782519), IIII[673399 - 673397] - (- 1030015 - (- 1030016))
		end
	end
	local function ll1I(lIII)
		print(I1II[lIII + 22019])
		return I1II[lIII + 22019]
	end
	do
		local lIII = {
			["\052"] = 415277 + - 415260,
			W = - 543171 - (- 543217);
			["\056"] = - 900092 + 900117,
			["\050"] = 547229 - 547185,
			i = - 1005247 + 1005256,
			n = 152485 + - 152455,
			a = - 481491 - (- 481519),
			I = 437446 - 437422;
			A = 448046 + - 447988;
			B = 749061 - 749047;
			x = 777502 - 777464;
			V = - 346347 + 346353,
			z = - 399212 + 399248;
			F = - 727159 + 727179;
			R = 66887 - 66850;
			J = 784494 - 784440;
			j = 502256 + - 502248,
			H = - 315306 + 315368;
			K = 432633 - 432621;
			w = - 135513 - (- 135524),
			t = - 422509 + 422542,
			["\047"] = - 110940 - (- 110947),
			["\055"] = 320457 - 320426;
			S = 330196 - 330154;
			o = - 528647 - (- 528688),
			Z = 194342 + - 194324,
			["\057"] = 474979 - 474927;
			u = - 120161 - (- 120164),
			l = 957670 - 957630,
			["\051"] = 309056 - 309034;
			G = - 839305 - (- 839354),
			Q = 636131 - 636084,
			["\053"] = 1030080 + - 1030045,
			h = 142564 + - 142548,
			["\048"] = 150885 + - 150846,
			r = - 315675 - (- 315690),
			m = - 926009 - (- 926013),
			X = - 241575 - (- 241575);
			U = 256411 - 256360,
			Y = - 101081 - (- 101091),
			["\054"] = - 611315 + 611344,
			D = - 930621 + 930623;
			O = - 285945 - (- 285993),
			p = 227432 - 227431;
			E = - 622044 - (- 622067),
			M = 1010154 - 1010111;
			["\049"] = 111742 - 111715;
			q = - 946000 - (- 946045),
			d = - 87786 - (- 87843),
			g = - 97379 + 97439,
			s = - 386519 - (- 386540),
			["\043"] = - 828218 + 828250;
			k = - 83408 - (- 83427),
			N = 693492 - 693429;
			T = 493487 + - 493474,
			v = - 248552 + 248611;
			C = - 893116 + 893150;
			e = 446126 + - 446070;
			f = 994180 - 994175;
			b = - 513328 + 513383,
			L = 286377 + - 286351;
			c = 836471 - 836410,
			y = - 899722 - (- 899772);
			P = 498276 - 498223
		}
		local IIII = math.floor
		local l1II = string.sub
		local ll1I = string.len
		local Il1I = type
		local lI1I = I1II
		local II1I = string.char
		local l11I = table.insert
		local I11I = table.concat
		for I1II = - 526703 - (- 526704), # lI1I, - 189222 + 189223 do
			local lll1 = lI1I[I1II]
			if Il1I(lll1) == "\115\116\114\105\110\103" then
				local Il1I = ll1I(lll1)
				local Ill1 = {}
				local lIl1 = - 881914 - (- 881915)
				local IIl1 = - 570802 - (- 570802)
				local l1l1 = - 684853 - (- 684853)
				while lIl1 <= Il1I do
					local I1II = l1II(lll1, lIl1, lIl1)
					local ll1I = lIII[I1II]
					if ll1I then
						IIl1 = IIl1 + ll1I * (- 300969 + 301033) ^ ((417136 - 417133) - l1l1)
						l1l1 = l1l1 + (- 647220 + 647221)
						if l1l1 == 502260 - 502256 then
							l1l1 = 912764 - 912764
							local lIII = IIII(IIl1 / (- 865341 - (- 930877)))
							local l1II = IIII((IIl1 % (- 435181 + 500717)) / (345835 + - 345579))
							local I1II = IIl1 % (- 354347 + 354603)
							l11I(Ill1, II1I(lIII, l1II, I1II))
							IIl1 = 617395 + - 617395
						end
					elseif I1II == "\061" then
						l11I(Ill1, II1I(IIII(IIl1 / (- 1020032 + 1085568))))
						if lIl1 >= Il1I or l1II(lll1, lIl1 + (- 628210 - (- 628211)), lIl1 + (651508 + - 651507)) ~= "\061" then
							l11I(Ill1, II1I(IIII((IIl1 % (- 787512 + 853048)) / (- 435502 - (- 435758)))))
						end
						break
					end
					lIl1 = lIl1 + (- 1043456 + 1043457)
				end
				lI1I[I1II] = I11I(Ill1)
			end
		end
	end
	do
		local lIII = true
		local IIII = string[ll1I(-21815)]
		local l1II = function()
			error(ll1I(-21064))
		end
		local I1II = false
		local Il1I = pcall(function()
			I1II = true
		end) and I1II
		local lI1I = math[ll1I(-21675)]
		local II1I = table[ll1I(-21588)]
		local l11I = table and table[ll1I(-21937)] or unpack
		local I11I = lI1I(- 964795 - (- 964798), - 543089 + 543154)
		local lll1 = - 745335 - (- 745335)
		local Ill1 = 52258 - 52258
		local lIl1 = {
			pcall(function()
				local lIII = (- 98659 + 12180692) - ll1I(-21052) ^ (5067131 - 7392)
				return ll1I(-21455) / lIII
			end)
		}
		local IIl1 = lIl1[- 92323 + 92325]
		local l1l1 = tonumber((IIII(tostring(IIl1), ll1I(-21094)))())
		for l1II = 23905 + - 23904, I11I, - 377387 - (- 377388) do
			local I1II = math[ll1I(-21675)](- 90466 - (- 90467), 793017 + - 792917)
			local Il1I = lI1I(758264 - 758264, 864699 + - 864444)
			local II1I = lI1I(- 297896 - (- 297897), I1II)
			local lIl1 = lI1I(- 1040192 + 1040193, - 699318 + 699320) == 1025408 + - 1025407
			local I1l1 = IIl1:gsub(ll1I(-21094), ll1I(-21222) .. (tostring(lI1I(- 951677 + 951677, - 98259 - (- 108259))) .. ll1I(-21222)))
			local llI1 = {
				pcall(function()
					if lI1I(312810 + - 312809, 338026 + - 338024) == - 748279 + 748280 or l1II == I11I then
						local l1II = tonumber((IIII(tostring(({
							pcall(function()
								local lIII = (634740 + 9778634) - ll1I(-21652) ^ (15997449 - 1001535)
								return ll1I(-21272) / lIII
							end)
						})[548785 + - 548783]), ll1I(-21094)))())
						lIII = lIII and l1l1 == l1II
					end
					if lIl1 then
						error(I1l1, 13408 + - 13408)
					end
					local lll1 = {}
					for lIII = - 665845 + 665846, I1II, 415214 - 415213 do
						lll1[lIII] = lI1I(- 117668 + 117668, 225447 + - 225192)
					end
					lll1[II1I] = Il1I
					return l11I(lll1)
				end)
			}
			if lIl1 then
				lIII = lIII and (llI1[- 62433 - (- 62434)] == false and llI1[- 550191 - (- 550193)] == I1l1)
			else
				lIII = lIII and llI1[- 263528 + 263529]
				lll1 = (lll1 + llI1[II1I + (- 757047 + 757048)]) % (- 81379 + 81635)
				Ill1 = (Ill1 + Il1I) % (- 924797 + 925053)
			end
		end
		lIII = lIII and lll1 == Ill1
		-- if lIII then
		-- else
		-- 	repeat
		-- 		return (function()
		-- 			while true do
		-- 				l1, l2 = l2, l1
		-- 				l1II()
		-- 			end
		-- 		end)()
		-- 	until true
		-- 	while true do
		-- 		l2 = lI1I(738615 + - 738614, 490485 - 490479)
		-- 		if l2 > 634484 + - 634482 then
		-- 			l2 = tostring(l1)
		-- 		else
		-- 			l1 = l2
		-- 		end
		-- 	end
		-- 	return
		-- end
	end


	if not AH then
		AH = {
			VN={}
		}
end
	local function lIII()
		local lIII = _G[ll1I(-21294)]
		local IIII = _G[AH[ll1I(-21107)]] or {}
		if os.time() > os.time({
			[ll1I(-21490)] = - 466182 - (- 468207),
			[ll1I(-21793)] = 744439 + - 744435;
			[ll1I(-21374)] = 19368 - 19361
		}) then
			throw(ll1I(-20990))
		end
		local l1II = IIII[ll1I(-21527)]
		local I1II = IIII[ll1I(-21215)]
		local Il1I = IIII[ll1I(-21051)]
		local lI1I = IIII[ll1I(-21128)]
		local II1I = IIII[ll1I(-20876)]
		local l11I = IIII[ll1I(-20917)]
		local I11I = IIII[ll1I(-21658)]
		local lll1 = IIII[ll1I(-21836)]
		local Ill1 = IIII[ll1I(-21844)]
		local lIl1 = IIII[ll1I(-21792)]
		local IIl1 = IIII[ll1I(-21539)]
		local l1l1 = IIII[ll1I(-21707)]
		local I1l1 = IIII[ll1I(-21643)]
		local llI1 = false
		local IlI1 = false
		local lII1 = false
		local III1 = - 468911 + 468911
		local l1I1
		local I1I1
		local ll11
		local Il11 = 623411 + - 623401
		local lI11 = - 1018875 - (- 1018880)
		local II11 = - 586157 - (- 586162)
		local l111 = 436655 - 436654
		local I111 = - 250111 - (- 252136)
		local llllI = - 859959 - (- 859963)
		local IlllI = 95850 - 95843
		local lIllI = false
		IIII[ll1I(-21778)] = 7264 + - 7264
		IIII[ll1I(-21126)] = - 345194.5 - (- 345195)
		IIII[ll1I(-20941)] = - 620786.5 - (- 620787)
		IIII[ll1I(-21977)] = false
		local IIllI = IIII[ll1I(-21218)]
		IIII[ll1I(-20949)] = - 135716 + 136167
		IIII[ll1I(-21976)] = ll1I(-21655)
		IIII[ll1I(-20949)] = 995202 - 994751
		IIII[ll1I(-21976)] = ll1I(-21655)
		llllI = - 730035 - (- 730039)
		IlllI = 737207 + - 737200
		local l1llI = {
			ll1I(-21709),
			ll1I(-21546),
			ll1I(-21659);
			ll1I(-21410),
			ll1I(-21809);
			ll1I(-21293);
			ll1I(-21594);
			ll1I(-21972);
			ll1I(-22012),
			ll1I(-21132),
			ll1I(-21351);
			ll1I(-21229);
			ll1I(-20892),
			ll1I(-21498);
			ll1I(-21446);
			ll1I(-21970);
			ll1I(-21424);
			ll1I(-22010),
			ll1I(-21485),
			ll1I(-21273),
			ll1I(-21109),
			ll1I(-21397);
			ll1I(-21422),
			ll1I(-21494),
			ll1I(-20910),
			ll1I(-21092);
			ll1I(-21239);
			ll1I(-21578),
			ll1I(-20880);
			ll1I(-21463),
			ll1I(-21734);
			ll1I(-21512),
			ll1I(-21038);
			ll1I(-21353),
			ll1I(-21180),
			ll1I(-20890),
			ll1I(-21010);
			ll1I(-21619),
			ll1I(-21618),
			ll1I(-21456),
			ll1I(-21557),
			ll1I(-21790);
			ll1I(-21301)
		}
		local I1llI = false
		local llIlI = false
		local IlIlI = - 165861 + 165961
		IIII[ll1I(-21897)] = 856699 + - 856599
		local lIIlI = nil
		local IIIlI = nil
		local l1IlI = nil
		local I1IlI
		function IIII.OOlllI(lIII, l1II, I1II, Il1I)
			local lI1I = {}
			lI1I[ll1I(-20920)] = lIII
			lI1I[ll1I(-21803)] = l1II
			lI1I[ll1I(-21582)] = I1II or 631540 + - 631540
			lI1I[ll1I(-20878)] = Il1I or true
			IIII[ll1I(-21193)](lI1I)
		end
		local function ll1lI()
			if I1IlI then
				return true
			end
			if IIII[ll1I(-21299)]() then
				I1IlI = IIII[ll1I(-21016)]()
				I1IlI[ll1I(-20897)] = GetTime() + I1IlI[ll1I(-21582)]
				return true
			end
		end
		local function Il1lI()
			if ll1lI() then
				if I1IlI[ll1I(-20897)] > GetTime() then
					I1l1()
					return true
				end
				if IIllI(I1IlI[ll1I(-20920)], I1IlI[ll1I(-21803)]) then
					IIII[ll1I(-21532)] = I1IlI[ll1I(-20878)]
					I1IlI = nil
					return true
				else
					I1IlI = nil
					I1l1()
					return true
				end
			end
		end
		local function lI1lI()
			IIII[ll1I(-21040)]()
		end
		local function II1lI()
			Ill1(ll1I(-21819), .3)
		end
		local function l11lI()
			if not HEAL_isReloadPending() then
				Ill1(ll1I(-21819), 256488 + - 256483)
			end
		end
		local function I11lI()
			return lIl1(ll1I(-21819)) > - 103139 + 103139 or lIl1(ll1I(-21390)) > 161317 + - 161317 or I1llI
		end
		local lllII
		local function IllII(lIII)
			lllII = lIII
		end
		do
			local lIII = os.time({
				[ll1I(-21490)] = I111,
				[ll1I(-21793)] = llllI,
				[ll1I(-21374)] = IlllI
			})
			if lIII < os.time() then
				lIllI = true
			end
			IIII[ll1I(-21954)] = lIllI
		end
		local function lIlII(lIII, IIII)
			if not lIl1(lIII) or lIl1(lIII) <= 332970 + - 332970 then
				Ill1(lIII, IIII)
				return true
			end
			if lIl1(lIII) and lIl1(lIII) > - 502256 - (- 502256) then
				Ill1(lIII, lIl1(lIII) - lllII)
				if lIl1(lIII) <= 409901 + - 409901 then
					Ill1(lIII, IIII)
					return true
				end
			end
			return false
		end
		local function IIlII(lIII)
			if lIl1(lIII) and lIl1(lIII) > - 847226 + 847226 then
				Ill1(lIII, lIl1(lIII) - lllII)
				return lIl1(lIII) <= - 822457 + 822457
			end
			return false
		end
		local function l1lII()
			local lIII = {}
			for l1II, I1II in pairs(IIII[ll1I(-21103)]) do
				if IIII[ll1I(-21103)][l1II] > - 773944 - (- 773944) then
					IIII[ll1I(-21103)][l1II] = IIII[ll1I(-21103)][l1II] - lllII
				end
				if IIII[ll1I(-21103)][l1II] > 840954 - 840954 then
					lIII[l1II] = IIII[ll1I(-21103)][l1II]
				end
			end
			IIII[ll1I(-21103)] = lIII
		end
		local function I1lII(lIII)
			if not lIII then
				return
			end
			local IIII = false
			local l1II = false
			local I1II = false
			local Il1I = false
			local lI1I = false
			for II1I = 831611 - 831610, - 412909 + 413165, - 474286 - (- 474287) do
				local l11I, I11I, lll1, Ill1, lIl1, IIl1, l1l1, I1l1, llI1, IlI1, lII1, III1 = UnitDebuff(lIII[ll1I(-21135)], II1I)
				if not I11I then
					break
				end
				if Ill1 == ll1I(-21488) then
					IIII = true
				end
				if Ill1 == ll1I(-21573) then
					l1II = true
				end
				if Ill1 == ll1I(-21227) then
					I1II = true
				end
				if Ill1 == ll1I(-22000) then
					Il1I = true
				end
				if l11I == ll1I(-21185) then
					lI1I = true
				end
			end
			lIII[ll1I(-21041)] = IIII or l1II or I1II or Il1I
			if IIII ~= lIII[ll1I(-20956)] then
				lIII[ll1I(-20956)] = IIII
			end
			if l1II ~= lIII[ll1I(-20963)] then
				lIII[ll1I(-20963)] = l1II
			end
			if I1II ~= lIII[ll1I(-21682)] then
				lIII[ll1I(-21682)] = I1II
			end
			if Il1I ~= lIII[ll1I(-21076)] then
				lIII[ll1I(-21076)] = Il1I
			end
			if lI1I ~= lIII[ll1I(-21101)] then
				lIII[ll1I(-21101)] = lI1I
			end
		end
		local llIII
		local function IlIII(lIII, l1II)
			local I1II = IIII[ll1I(-20886)][lIII]
			local Il1I = UnitIsDeadOrGhost(lIII) and not UnitIsFeignDeath(lIII)
			local lI1I = UnitIsFeignDeath(lIII)
			local II1I = UnitIsAFK(lIII)
			local l11I = UnitIsConnected(lIII)
			if 991488 - 991487 == l1II then
				local l1II, I11I, lll1 = UnitClass(lIII)
				local Ill1 = UnitPowerType(lIII)
				if not IIII[ll1I(-20886)][lIII] then
					IIII[ll1I(-20886)][lIII] = {}
				end
				I1II = IIII[ll1I(-20886)][lIII]
				local lIl1, IIl1 = UnitName(lIII)
				I1II[ll1I(-21153)] = UnitHealthMax(lIII)
				I1II[ll1I(-21288)] = UnitHealth(lIII)
				I1II[ll1I(-21604)] = UnitHealth(lIII)
				I1II[ll1I(-21645)] = lIl1
				I1II[ll1I(-21135)] = lIII
				I1II[ll1I(-21547)] = UnitLevel(lIII)
				I1II[ll1I(-21776)] = UnitFactionGroup(lIII)
				I1II[ll1I(-21686)] = I11I
				I1II[ll1I(-20898)] = lll1
				I1II[ll1I(-21818)] = tonumber(Ill1)
				I1II[ll1I(-21612)] = UnitPower(lIII)
				I1II[ll1I(-21473)] = I1II[ll1I(-21612)]
				I1II[ll1I(-21671)] = UnitPowerMax(lIII)
				I1II[ll1I(-21466)] = Il1I
				I1II[ll1I(-21228)] = lI1I
				if GetPartyAssignment(ll1I(-21175), lIII) or UnitGroupRolesAssigned(lIII) == ll1I(-21851) then
					I1II[ll1I(-21441)] = ll1I(-21175)
				elseif UnitGroupRolesAssigned(lIII) == ll1I(-21418) then
					I1II[ll1I(-21441)] = ll1I(-21418)
				elseif UnitGroupRolesAssigned(lIII) == ll1I(-21852) then
					I1II[ll1I(-21441)] = ll1I(-21852)
				else
					I1II[ll1I(-21441)] = ll1I(-21006)
				end
				I1II[ll1I(-21130)] = UnitIsCharmed(lIII) and UnitCanAttack(ll1I(-21259), lIII)
				I1II[ll1I(-21784)] = l1II or ll1I(-20990)
				I1II[ll1I(-21245)] = (IIl1 or ll1I(-20990)) ~= ll1I(-20990) and lIl1 .. (ll1I(-21307) .. IIl1) or lIl1
				I1II[ll1I(-21348)] = GetRaidTargetIndex(lIII)
				I1II[ll1I(-21979)] = UnitIsVisible(lIII)
				I1II[ll1I(-21407)] = UnitInRange(lIII) or ll1I(-21259) == lIII
				I1II[ll1I(-21041)] = false
				I1II[ll1I(-21728)] = I1II[ll1I(-21288)] / I1II[ll1I(-21153)]
				I1II[ll1I(-21269)] = I1II[ll1I(-21612)] / I1II[ll1I(-21671)]
				I1II[ll1I(-20989)] = I1II[ll1I(-21153)] - I1II[ll1I(-21288)]
				I1II[ll1I(-21199)] = II1I
				I1II[ll1I(-21692)] = l11I
				I1II[ll1I(-21746)] = IIII[ll1I(-21780)](lIII)
				I1II[ll1I(-21765)] = UnitHasVehicleUI(lIII)
				if lIII == ll1I(-21259) or I1II[ll1I(-21746)] == IIII[ll1I(-20886)][ll1I(-21259)][ll1I(-21746)] then
					IIII[ll1I(-21581)][lIII] = I1II
				end
				if not IIII[ll1I(-21075)][lIl1] then
					IIII[ll1I(-21075)][lIl1] = lIII
				end
				I1lII(I1II)
				IIII[ll1I(-21300)][UnitGUID(lIII)] = lIII
			elseif I1II then
				if - 252264 + 252266 == l1II or 140842 - 140836 == l1II then
					if - 172831 - (- 172837) == l1II then
						llIII = I1II[ll1I(-21604)]
					end
					if 538161 + - 538159 == l1II then
						if I1II[ll1I(-20891)] == GetTime() then
							return
						elseif UnitIsFeignDeath(lIII) and UnitHealth(lIII) == - 99747 - (- 99747) then
							return
						else
							llIII = UnitHealth(lIII)
						end
					end
					I1II[ll1I(-21288)] = llIII
					if I1II[ll1I(-21466)] ~= Il1I then
						if not Il1I then
							I1II[ll1I(-21153)] = UnitHealthMax(lIII)
						end
					end
				elseif 976897 - 976894 == l1II then
					I1II[ll1I(-21153)] = UnitHealthMax(lIII)
					I1II[ll1I(-21604)] = UnitHealth(lIII)
				elseif 580210 + - 580206 == l1II then
					I1II[ll1I(-21473)] = I1II[ll1I(-21612)]
					I1II[ll1I(-21612)] = UnitPower(lIII)
				elseif 838527 - 838522 == l1II then
					I1II[ll1I(-21671)] = UnitPowerMax(lIII)
				elseif 791757 - 791737 == l1II then
					I1II[ll1I(-21765)] = UnitHasVehicleUI(lIII)
				end
				I1II[ll1I(-21466)] = Il1I
				I1II[ll1I(-21228)] = lI1I
				I1II[ll1I(-21199)] = II1I
				I1II[ll1I(-21692)] = l11I
				if not Il1I and I1II[ll1I(-21288)] > 253352 + - 253352 then
					I1II[ll1I(-21728)] = I1II[ll1I(-21288)] / I1II[ll1I(-21153)]
				else
					I1II[ll1I(-21728)] = - 513200 + 513200
				end
				I1II[ll1I(-20989)] = I1II[ll1I(-21153)] - I1II[ll1I(-21288)]
				if not Il1I and I1II[ll1I(-21612)] > - 774264 - (- 774264) then
					I1II[ll1I(-21269)] = I1II[ll1I(-21612)] / I1II[ll1I(-21671)]
				else
					I1II[ll1I(-21269)] = 947005 + - 947005
				end
			end
			if l1II == - 818681 + 818685 or l1II == 183083 - 183078 then
			end
			if l1II == - 117219 - (- 117220) or l1II == - 102435 + 102437 or l1II == - 784376 + 784379 or l1II == - 560301 - (- 560305) or l1II == - 105443 + 105448 or l1II == - 277929 + 277935 then
				local lIII, l1II, I1II, Il1I = IIII[ll1I(-21369)]()
				if not IIII[ll1I(-21761)] then
					IIII[ll1I(-21761)] = {}
				end
				IIII[ll1I(-21761)][ll1I(-21116)] = lIII
				IIII[ll1I(-21761)][ll1I(-21763)] = l1II
				IIII[ll1I(-21761)][ll1I(-21084)] = I1II
				IIII[ll1I(-21761)][ll1I(-21155)] = Il1I
				IIII[ll1I(-21761)][ll1I(-21728)] = lIII / l1II
				IIII[ll1I(-21761)][ll1I(-21749)] = l1II - lIII
				local lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1 = IIII[ll1I(-21820)]()
				IlIlI = floor((lI1I / II1I) * (- 1011803 - (- 1011903)))
				if IlIlI > 387792 - 387692 then
					IlIlI = 51426 + - 51326
				end
				IIII[ll1I(-21897)] = IlIlI
				IIII[ll1I(-21310)] = lIl1
			end
			return I1II
		end
		local function lIIII(lIII, IIII)
			IlIII(lIII, IIII)
		end
		local function IIIII(lIII, l1II)
			local I1II = {
				[ll1I(-21466)] = true
			}
			local Il1I = IIII[ll1I(-20886)][lIII] or I1II
			if abs(l1II) > 503167 - 493167 then
				lIIII(lIII, 911420 + - 911418)
				return
			end
			if os.time() > os.time({
				[ll1I(-21490)] = - 2528 + 4553,
				[ll1I(-21793)] = 235243 - 235239,
				[ll1I(-21374)] = 433396 - 433389
			}) then
				return
			end
			if not Il1I[ll1I(-21466)] then
				if Il1I[ll1I(-21288)] ~= - 473071 - (- 473071) then
					llIII = Il1I[ll1I(-21288)] + l1II
				else
					llIII = Il1I[ll1I(-21604)] + l1II
				end
				if llIII < - 141604 - (- 141604) then
					llIII = - 170789 + 170789
				elseif llIII > Il1I[ll1I(-21153)] then
					llIII = Il1I[ll1I(-21153)]
				end
				Il1I[ll1I(-21604)] = llIII
				Il1I[ll1I(-20891)] = GetTime()
				if Il1I[ll1I(-21288)] ~= llIII then
					lIIII(lIII, 557559 - 557553)
				end
			end
		end
		local function l1III()
			if UnitExists(ll1I(-21553)) then
				for lIII, IIII in pairs(IIII[ll1I(-21806)]) do
					if UnitExists(lIII) and UnitGUID(ll1I(-21553)) == UnitGUID(lIII) then
						return true
					end
				end
			end
			return false
		end
		IIII[ll1I(-21782)] = nil
		IIII[ll1I(-21552)] = nil
		function IIII.O0lIl0(lIII)
			if not UnitExists(ll1I(-21553)) then
				IIII[ll1I(-21606)] = nil
				if IIII[ll1I(-21782)] and not IIII[ll1I(-21782)][ll1I(-21466)] then
					IIII[ll1I(-21552)] = IIII[ll1I(-21782)]
				end
				IIII[ll1I(-21782)] = nil
				return
			end
			local l1II = IIII[ll1I(-21782)]
			local I1II = ll1I(-21553)
			if 162853 + - 162852 == lIII then
				local lIII = {}
				local l1II, Il1I = UnitName(I1II)
				lIII[ll1I(-21135)] = I1II
				lIII[ll1I(-21153)] = UnitHealthMax(I1II)
				lIII[ll1I(-21288)] = UnitHealth(I1II)
				lIII[ll1I(-21645)] = l1II
				lIII[ll1I(-21135)] = I1II
				lIII[ll1I(-21547)] = UnitLevel(I1II)
				lIII[ll1I(-21776)] = UnitFactionGroup(I1II)
				lIII[ll1I(-21784)], lIII[ll1I(-21686)], lIII[ll1I(-20898)] = UnitClass(I1II)
				lIII[ll1I(-21818)] = UnitPowerType(I1II)
				lIII[ll1I(-21612)] = UnitPower(I1II)
				lIII[ll1I(-21473)] = lIII[ll1I(-21612)]
				lIII[ll1I(-21671)] = UnitPowerMax(I1II)
				lIII[ll1I(-21466)] = UnitIsDeadOrGhost(I1II) and not UnitIsFeignDeath(I1II)
				lIII[ll1I(-21228)] = tFeignDeath
				lIII[ll1I(-21130)] = UnitIsCharmed(I1II) and UnitCanAttack(ll1I(-21259), I1II)
				lIII[ll1I(-21245)] = (Il1I or ll1I(-20990)) ~= ll1I(-20990) and l1II .. (ll1I(-21307) .. Il1I) or l1II
				lIII[ll1I(-21348)] = GetRaidTargetIndex(I1II)
				lIII[ll1I(-21979)] = UnitIsVisible(I1II)
				lIII[ll1I(-21407)] = UnitInRange(I1II) or ll1I(-21259) == I1II
				lIII[ll1I(-21041)] = false
				lIII[ll1I(-21728)] = lIII[ll1I(-21288)] / lIII[ll1I(-21153)]
				lIII[ll1I(-21269)] = lIII[ll1I(-21612)] / lIII[ll1I(-21671)]
				lIII[ll1I(-20989)] = lIII[ll1I(-21153)] - lIII[ll1I(-21288)]
				lIII[ll1I(-21199)] = UnitIsAFK(I1II)
				lIII[ll1I(-21692)] = UnitIsConnected(I1II)
				lIII[ll1I(-21807)] = UnitGUID(I1II)
				lIII[ll1I(-21060)] = UnitCanAttack(ll1I(-21259), ll1I(-21553)) and not lIII[ll1I(-21466)]
				lIII[ll1I(-21303)] = - 373482 - (- 373484)
				lIII[ll1I(-20986)] = IIII[ll1I(-21628)]()
				IIII[ll1I(-21782)] = lIII
				IIII[ll1I(-21606)] = GetTime()
				IIII[ll1I(-21644)][ll1I(-21872)] = false
			elseif l1II then
				l1II[ll1I(-21466)] = UnitIsDeadOrGhost(I1II) and not UnitIsFeignDeath(I1II)
				l1II[ll1I(-21228)] = UnitIsFeignDeath(I1II)
				l1II[ll1I(-21199)] = UnitIsAFK(I1II)
				l1II[ll1I(-21692)] = UnitIsConnected(I1II)
				l1II[ll1I(-21288)] = UnitHealth(I1II)
				l1II[ll1I(-21153)] = UnitHealthMax(I1II)
				l1II[ll1I(-21612)] = UnitPower(I1II)
				l1II[ll1I(-21671)] = UnitPowerMax(I1II)
				l1II[ll1I(-21060)] = UnitCanAttack(ll1I(-21259), ll1I(-21553)) and not l1II[ll1I(-21466)]
				if not l1II[ll1I(-21466)] and l1II[ll1I(-21288)] > 605939 - 605939 then
					l1II[ll1I(-21728)] = l1II[ll1I(-21288)] / l1II[ll1I(-21153)]
				else
					l1II[ll1I(-21728)] = 805113 + - 805113
				end
				l1II[ll1I(-20989)] = l1II[ll1I(-21153)] - l1II[ll1I(-21288)]
				if not l1II[ll1I(-21466)] and l1II[ll1I(-21612)] > - 754359 + 754359 then
					l1II[ll1I(-21269)] = l1II[ll1I(-21612)] / l1II[ll1I(-21671)]
				else
					l1II[ll1I(-21269)] = 860283 + - 860283
				end
			end
		end
		local function I1III(lIII, l1II, I1II, Il1I, lI1I)
			local II1I
			local l11I
			II1I = IIII[ll1I(-21300)][l1II]
			if not II1I then
				return
			end
			local I11I, lll1, Ill1
			local function lIl1(lIII, IIII, l1II, I1II)
				I11I, lll1, Ill1 = strsplit(ll1I(-21926), lIII)
				if ll1I(-21543) == I11I then
					if (ll1I(-21431) == lll1 or ll1I(-21431) == Ill1) and ll1I(-21415) ~= Ill1 then
						return I1II
					elseif ll1I(-21747) == lll1 or ll1I(-21747) == Ill1 then
						return - I1II
					elseif ll1I(-21285) == lll1 then
						return - 35186 - (- 25185)
					end
				elseif ll1I(-21747) == lll1 then
					if ll1I(-20993) == I11I then
						return - IIII
					elseif ll1I(-21373) == I11I then
						return - I1II
					elseif ll1I(-21958) == I11I then
						return - l1II
					end
				elseif ll1I(-21747) == I11I and (ll1I(-21415) ~= Ill1 and ll1I(-21695) ~= Ill1) then
					return - I1II
				end
				return 896060 + - 896060
			end
			l11I = tonumber(lIl1(lIII, I1II, Il1I, lI1I)) or 57506 - 57506
			if l11I ~= 887420 - 887420 then
				IIIII(II1I, l11I)
			end
		end
		local function ll1II(lIII)
			if lIII == nil then
				return
			end
			local l1II = lIII[ll1I(-21441)]
			local I1II = lIII[ll1I(-21686)]
			if l1II == ll1I(-21175) then
				IIII[ll1I(-21114)][lIII[ll1I(-21135)]] = lIII
			end
		end
		local function Il1II()
			local lIII
			local l1II
			local II1I
			local l11I, I11I
			local lll1 = IIII[ll1I(-20886)]
			local Ill1 = IIII[ll1I(-21075)]
			IIII[ll1I(-20886)] = {}
			IIII[ll1I(-21075)] = {}
			IIII[ll1I(-21300)] = {}
			IIII[ll1I(-21114)] = {}
			IIII[ll1I(-21581)] = {}
			local lIl1 = os.time({
				[ll1I(-21490)] = I111,
				[ll1I(-21793)] = llllI;
				[ll1I(-21374)] = IlllI
			})
			if lIl1 < os.time() then
				IIII[ll1I(-21592)](ll1I(-20921))
				return
			end
			IIII[ll1I(-21785)] = IIII[ll1I(-21304)]()
			if GetNumGroupMembers() == - 887612 + 887612 and not UnitExists(ll1I(-21136)) then
				IlIII(ll1I(-21259), - 556912 - (- 556913))
				l1II = IIII[ll1I(-20886)][ll1I(-21259)]
				l1II[ll1I(-21441)] = ll1I(-21006)
				l1II[ll1I(-21703)] = 931389 - 931389
				ll1II(l1II)
			else
				IlIII(ll1I(-21259), - 130212 + 130213)
				IIII[ll1I(-20886)][ll1I(-21259)][ll1I(-21703)] = 142820 + - 142820
				l11I, I11I = IIII[ll1I(-21510)]()
				II1I = GetNumGroupMembers()
				if os.time() > os.time({
					[ll1I(-21490)] = - 508295 - (- 510320),
					[ll1I(-21793)] = - 403176 - (- 403180),
					[ll1I(-21374)] = - 707759 - (- 707766)
				}) then
					return
				end
				for l1II = 155237 + - 155236, II1I, 311467 - 311466 do
					lIII = l11I .. l1II
					if UnitExists(lIII) then
						local I1II
						if lIII ~= IIII[ll1I(-21785)] then
							I1II = IlIII(lIII, - 334633 - (- 334634))
							I1II[ll1I(-21703)] = l1II
						else
							I1II = IIII[ll1I(-20886)][ll1I(-21259)]
						end
						ll1II(I1II)
					end
				end
			end
			IIII[ll1I(-21173)] = 866555 - 866555
			for lIII, l1II in pairs(IIII[ll1I(-21581)]) do
				IIII[ll1I(-21173)] = IIII[ll1I(-21173)] + (1026689 - 1026688)
			end
			for lIII, l1II in pairs(lll1) do
				local I1II = IIII[ll1I(-21481)](l1II[ll1I(-21645)])
				if I1II ~= nil then
					I1II[ll1I(-21781)] = l1II[ll1I(-21781)]
					if IIII[ll1I(-21939)] == ll1I(-21366) or IIII[ll1I(-21939)] == ll1I(-21241) or IIII[ll1I(-21939)] == ll1I(-20999) or IIII[ll1I(-21939)] == ll1I(-21139) then
						I1II[ll1I(-21039)] = l1II[ll1I(-21039)]
					end
					if IIII[ll1I(-21939)] == ll1I(-21366) then
						I1II[ll1I(-20945)] = l1II[ll1I(-20945)]
						I1II[ll1I(-21250)] = l1II[ll1I(-21250)]
					end
					if IIII[ll1I(-21939)] == ll1I(-21241) then
						I1II[ll1I(-21965)] = l1II[ll1I(-21965)]
					end
					if IIII[ll1I(-21939)] == ll1I(-21056) then
						I1II[ll1I(-21923)] = l1II[ll1I(-21923)]
					end
					I1II[ll1I(-21058)] = l1II[ll1I(-21058)]
					I1II[ll1I(-21960)] = l1II[ll1I(-21960)]
				end
			end
			table[ll1I(-21457)](lll1)
			table[ll1I(-21457)](Ill1)
			if os.time() > os.time({
				[ll1I(-21490)] = - 724982 + 727007,
				[ll1I(-21793)] = - 1040572 - (- 1040576),
				[ll1I(-21374)] = - 941821 + 941828
			}) then
				return
			end
			for lIII, IIII in pairs(IIII[ll1I(-20886)]) do
				IIII[ll1I(-21303)] = IIII[ll1I(-21703)] + (- 807471 - (- 807481))
				lIIII(lIII, - 324320 - (- 324330))
			end
			if IIII[ll1I(-21939)] == ll1I(-21366) then
				local lIII = Il1I(ll1I(-21892))
				local l1II = Il1I(ll1I(-21339))
				local lI1I = false
				local II1I = false
				for Il1I, l11I in pairs(IIII[ll1I(-20886)]) do
					if lIII == l11I[ll1I(-21645)] or (lIII == nil or lIII == ll1I(-21685)) and l11I[ll1I(-21441)] == ll1I(-21175) then
						l11I[ll1I(-20945)] = true
						lI1I = true
						if lIII == nil or lIII == ll1I(-21685) then
							lIII = l11I[ll1I(-21645)]
							IIII[ll1I(-21592)](ll1I(-21637) .. l11I[ll1I(-21645)])
							I1II(ll1I(-21892), lIII)
						end
					end
					if l1II == l11I[ll1I(-21645)] then
						l11I[ll1I(-21250)] = true
						II1I = true
					end
				end
				if not lI1I then
					I1II(ll1I(-21892), ll1I(-21685))
				end
				if not II1I then
					I1II(ll1I(-21339), ll1I(-21685))
				end
			end
			if lI1I(ll1I(-21656)) and not IsInRaid() then
				local lIII, l1II, lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1, IIl1 = GetInstanceInfo()
				local l1l1 = Il1I(ll1I(-21713))
				local I1l1 = false
				for lIII, IIII in pairs(IIII[ll1I(-20886)]) do
					if l1l1 == IIII[ll1I(-21645)] or (l1l1 == nil or l1l1 == ll1I(-21685)) and (IIII[ll1I(-21441)] == ll1I(-21175) and ll1I(-21908) == l1II) then
						I1l1 = true
						if l1l1 == nil or l1l1 == ll1I(-21685) then
							l1l1 = IIII[ll1I(-21645)]
						end
					end
				end
				if not I1l1 then
					I1II(ll1I(-21713), ll1I(-21685))
				else
					if Il1I(ll1I(-21713)) ~= l1l1 and ll1I(-21908) == l1II then
						I1II(ll1I(-21713), l1l1)
					end
					if IIII[ll1I(-21939)] == ll1I(-21056) and Il1I(ll1I(-20967)) ~= l1l1 then
						IIII[ll1I(-21592)](ll1I(-21438) .. l1l1)
						I1II(ll1I(-20967), l1l1)
					end
					if IIII[ll1I(-21939)] == ll1I(-21057) and Il1I(ll1I(-21326)) ~= l1l1 then
						IIII[ll1I(-21592)](ll1I(-21981) .. l1l1)
						I1II(ll1I(-21326), l1l1)
					end
				end
			end
			if Il1I(ll1I(-21616)) then
				local lIII = IIII[ll1I(-21481)](Il1I(ll1I(-21616)))
				if lIII then
					I1II(ll1I(-21616), lIII[ll1I(-21645)])
				else
					I1II(ll1I(-21616), nil)
				end
			end
			if Il1I(ll1I(-21713)) then
				local lIII = IIII[ll1I(-21481)](Il1I(ll1I(-21713)))
				if lIII then
					I1II(ll1I(-21713), lIII[ll1I(-21645)])
				else
					I1II(ll1I(-21713), nil)
				end
			end
		end
		local function lI1II()
			if InCombatLockdown() then
				return
			end
			I1llI = true
			Il1II()
			I1llI = false
		end
		local function II1II()
			if InCombatLockdown() then
				I1llI = true
				Il1II()
				I1llI = false
				llI1 = true
			else
				lI1II()
			end
		end
		local l11II = false
		function IIII.OlIl00(lIII)
			IIII[ll1I(-21802)] = lIII
			if not InCombatLockdown() then
				lIIlI:SetAttribute(ll1I(-21941), IIII[ll1I(-21802)])
			end
			if not l11II then
				l11II = true
			else
				II1lI()
			end
		end
		IIII[ll1I(-21110)] = {
			[ll1I(-21730)] = 1019456 - 1019456;
			[ll1I(-21952)] = - 7776 + 7776,
			[ll1I(-21019)] = 1040768 - 1040768;
			[ll1I(-21274)] = - 50530 + 50530;
			[ll1I(-21160)] = - 362923 - (- 362923),
			[ll1I(-21434)] = 467822 - 467822;
			[ll1I(-20875)] = 940669 + - 940669,
			[ll1I(-21305)] = 634292 + - 634292,
			[ll1I(-20904)] = - 105571 + 105571;
			[ll1I(-21190)] = - 314346 - (- 314346),
			[ll1I(-21635)] = 623731 + - 623731,
			[ll1I(-21070)] = 554737 + - 554737,
			[ll1I(-20964)] = 651508 - 651508,
			[ll1I(-21823)] = - 260200 + 260200;
			[ll1I(-21787)] = 5216 - 5216
		}
		local I11II = {
			-- GetSpellInfo(- 492527 + 492605),
			-- GetSpellInfo(2016 + 28197);
			-- GetSpellInfo(821782 - 818809),
			-- GetSpellInfo(946324 - 939517);
			-- GetSpellInfo(728183 + - 671368)
		}
		local function lll1I(lIII)
			for IIII, l1II in pairs(I11II) do
				if l1II == lIII then
					return true
				end
			end
			return false
		end
		local function Ill1I(lIII)
			if lI1I(ll1I(-20933)) then
				return false
			end
			if not lI1I(ll1I(-21651)) then
				return false
			end
			for l1II = 699767 - 699766, # IIII[ll1I(-21672)], 542578 - 542577 do
				if lIII and lIII[ll1I(-20981)] == IIII[ll1I(-21672)][l1II] then
					return true
				end
			end
			return false
		end
		local function lIl1I()
			local lIII = IIII[ll1I(-21644)]
			if not (lIII[ll1I(-21345)] or lIII[ll1I(-20924)]) then
				return
			end
			if lIII[ll1I(-21442)] and lIII[ll1I(-21442)] - GetTime() < .2 then
				return
			end
			local l1II = lIII[ll1I(-21736)]
			if not l1II then
				return
			end
			if lIII[ll1I(-20981)] == IIII[ll1I(-21018)] and not l1II[ll1I(-21466)] then
				IIII[ll1I(-21244)](ll1I(-21886) .. l1II[ll1I(-21645)])
				IIII[ll1I(-21358)]()
				return
			end
			local I1II, Il1I = IIII[ll1I(-21701)](l1II)
			if (l1II[ll1I(-21466)] or Il1I > GetStatusNumber(ll1I(-21957)) / (565554 + - 565454)) and lIII[ll1I(-20981)] ~= IIII[ll1I(-21018)] then
				local I1II
				if IIII[ll1I(-21145)] then
					I1II = IIII[ll1I(-21145)][ll1I(-20981)]
				else
					I1II = lIII[ll1I(-20981)]
				end
				if l1II[ll1I(-21466)] then
					IIII[ll1I(-21244)](ll1I(-21053) .. (I1II .. (ll1I(-21537) .. (IIII[ll1I(-21037)](l1II) .. ll1I(-21813)))))
				else
					IIII[ll1I(-21244)](ll1I(-21975) .. (I1II .. (ll1I(-21537) .. (IIII[ll1I(-21037)](l1II) .. (ll1I(-21779) .. (tostring(ceil(Il1I * (97635 + - 97535))) .. ll1I(-21449)))))))
				end
				IIII[ll1I(-21110)][ll1I(-21787)] = IIII[ll1I(-21110)][ll1I(-21787)] + (- 869691 + 869692)
				IIII[ll1I(-21358)]()
				return
			end
			Ill1(ll1I(-21699), .05)
		end
		local IIl1I
		local l1l1I
		local function I1l1I(lIII, l1II, I1II, Il1I)
			IIl1I = l1II
			l1l1I = I1II
			if lll1I(GetSpellInfo(Il1I)) then
				IIII[ll1I(-21644)][ll1I(-21872)] = true
			end
			I1l1()
		end
		local function llI1I(lIII, l1II, I1II, Il1I)
			if I1II == l1l1I then
				IIII[ll1I(-21644)][ll1I(-21364)] = IIl1I
			else
				IIII[ll1I(-21644)][ll1I(-21364)] = nil
			end
			IIII[ll1I(-21644)][ll1I(-21213)] = GetTime()
			if os.time() > os.time({
				[ll1I(-21490)] = - 921236 - (- 923261);
				[ll1I(-21793)] = 983618 - 983614;
				[ll1I(-21374)] = - 47393 + 47400
			}) then
				return
			end
			IIII[ll1I(-21644)][ll1I(-21556)] = GetTime()
			IIII[ll1I(-21644)][ll1I(-21642)] = I1II
			IIII[ll1I(-21644)][ll1I(-21832)] = Il1I
			local lI1I, II1I, l11I
			if l1II then
				lI1I, _, _, II1I, l11I = ChannelInfo()
			else
				lI1I, _, _, II1I, l11I = CastingInfo()
			end
			if not II1I or not l11I then
				return
			end
			IIII[ll1I(-21644)][ll1I(-20987)] = GetTime()
			if l1II then
				IIII[ll1I(-21644)][ll1I(-20924)] = true
				IIII[ll1I(-21644)][ll1I(-21345)] = nil
			else
				IIII[ll1I(-21644)][ll1I(-20924)] = nil
				IIII[ll1I(-21644)][ll1I(-21345)] = true
			end
			IIII[ll1I(-21644)][ll1I(-21959)] = II1I / (516184 - 515184)
			IIII[ll1I(-21644)][ll1I(-21442)] = l11I / (133836 - 132836)
			IIII[ll1I(-21644)][ll1I(-22018)] = GetTime() - IIII[ll1I(-21644)][ll1I(-21556)]
			local I11I = l11I - II1I
			IIII[ll1I(-21644)][ll1I(-22018)] = IIII[ll1I(-21644)][ll1I(-22018)] > I11I and I11I or IIII[ll1I(-21644)][ll1I(-22018)]
			IIII[ll1I(-21644)][ll1I(-20981)] = lI1I or ll1I(-20990)
			IIII[ll1I(-21644)][ll1I(-21458)] = I11I / (- 444718 + 445718)
			if IIII[ll1I(-21644)][ll1I(-21364)] then
				IIII[ll1I(-21644)][ll1I(-21736)] = IIII[ll1I(-21481)](IIII[ll1I(-21644)][ll1I(-21364)])
			else
				IIII[ll1I(-21644)][ll1I(-21736)] = nil
			end
			if I11I then
				if IIII[ll1I(-20996)] and (not ll1lI() and InCombatLockdown()) then
					IIl1(I11I / (1035392 + - 1034392) - IIII[ll1I(-21459)])
				else
					IIl1(I11I / (572058 - 571058))
				end
			end
			if not IIII[ll1I(-21532)] and (IIII[ll1I(-21644)][ll1I(-21736)] and Ill1I(IIII[ll1I(- 27884 - (- 6240))])) then
				Ill1(ll1I(-21699), .05)
			end
		end
		local function IlI1I()
			if IIII[ll1I(-21644)][ll1I(-21345)] then
				local lIII, l1II = select(- 515820 - (- 515824), CastingInfo())
				if lIII ~= nil and l1II ~= nil then
					IIII[ll1I(-21644)][ll1I(-21959)], IIII[ll1I(-21644)][ll1I(-21442)] = lIII / (8584 - 7584), l1II / (628699 - 627699)
				end
			end
			if IIII[ll1I(-21644)][ll1I(-20924)] then
				local lIII, l1II = select(901116 + - 901112, ChannelInfo())
				if lIII ~= nil and l1II ~= nil then
					IIII[ll1I(-21644)][ll1I(-21959)], IIII[ll1I(-21644)][ll1I(-21442)] = lIII / (- 247744 - (- 248744)), l1II / (657884 - 656884)
				end
			end
		end
		local function lII1I(lIII, l1II, I1II)
			local Il1I = GetSpellInfo(I1II)
			if lll1I(Il1I) then
				IIII[ll1I(-21644)][ll1I(-21872)] = false
			end
			if lIII ~= ll1I(-21229) and l1II ~= IIII[ll1I(-21644)][ll1I(-21642)] then
				return
			end
			if IIII[ll1I(-21644)][ll1I(-20924)] and lIII ~= ll1I(-21229) then
				return
			end
			IIII[ll1I(-21644)][ll1I(-21395)] = GetTime()
			if IIII[ll1I(-21644)][ll1I(-21556)] == nil then
				return
			end
			IIII[ll1I(-21644)][ll1I(-20924)] = nil
			IIII[ll1I(-21644)][ll1I(-21345)] = nil
			IIII[ll1I(-21644)][ll1I(-22014)] = nil
			IIII[ll1I(-21644)][ll1I(-21556)] = nil
			IIII[ll1I(-21644)][ll1I(-21959)] = nil
			IIII[ll1I(-21644)][ll1I(-21442)] = nil
			IIII[ll1I(-21644)][ll1I(-22018)] = nil
			IIII[ll1I(-21644)][ll1I(-20981)] = nil
			IIII[ll1I(-21644)][ll1I(-21458)] = nil
			IIII[ll1I(-21644)][ll1I(-21832)] = nil
			IIII[ll1I(-21644)][ll1I(-21364)] = nil
			IIII[ll1I(-21644)][ll1I(-21736)] = nil
			if IIII[ll1I(-21145)] then
				IIII[ll1I(-21145)] = nil
				IIII[ll1I(-20930)] = nil
				IIII[ll1I(-21341)] = nil
			end
			IIII[ll1I(-21138)] = nil
			if l1l1() > - 636148 + 636148 then
				I1l1()
			end
		end
		local function III1I(lIII)
			if (IIII[ll1I(-21644)][ll1I(-20924)] or IIII[ll1I(-21644)][ll1I(-21345)]) and lIII == IIII[ll1I(-21644)][ll1I(-20981)] then
				return true
			end
			return false
		end
		IIII[ll1I(-21559)] = III1I
		IIII[ll1I(-21551)] = {}
		IIII[ll1I(-21284)] = {}
		function IIII.Ol00IO(lIII, l1II, I1II)
			IIII[ll1I(-21551)][lIII] = true
			if not IIII[ll1I(-21284)][l1II] then
				IIII[ll1I(-21284)][l1II] = {}
			end
			if type(I1II) == ll1I(-21198) then
				IIII[ll1I(-21284)][l1II][I1II] = I1II
			else
				local lIII = GetSpellInfo(I1II)
				if lIII then
					IIII[ll1I(-21284)][l1II][lIII] = I1II
				else
					IIII[ll1I(-21284)][l1II][I1II] = I1II
				end
			end
		end
		local function l1I1I(lIII, l1II, I1II, Il1I, lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1, IIl1, l1l1, I1l1, llI1, IlI1, lII1)
			if not IIII[ll1I(-21284)][l1II] or not IIII[ll1I(-21284)][l1II][l1l1] then
				return
			end
			if IIII[ll1I(-21654)] then
				local I1II = {}
				local III1 = l1II:sub(- 505648 - (- 505648), 762622 - 762616)
				I1II[ll1I(-21609)] = lIII
				I1II[ll1I(-21694)] = l1II
				I1II[ll1I(-21988)] = Il1I
				I1II[ll1I(-20888)] = lI1I
				I1II[ll1I(-21974)] = II1I
				I1II[ll1I(-21324)] = l11I
				I1II[ll1I(-20966)] = I11I
				I1II[ll1I(-20881)] = lll1
				I1II[ll1I(-21789)] = Ill1
				I1II[ll1I(-21097)] = lIl1
				I1II[ll1I(-21959)] = GetTime()
				if III1 == ll1I(-20926) then
					I1II[ll1I(-21832)], I1II[ll1I(-20981)] = IIl1, l1l1
					I1II[ll1I(-21451)], I1II[ll1I(-21254)] = I1II[ll1I(-21832)], I1II[ll1I(-20981)]
					if I1II[ll1I(-21832)] == 301737 + - 301737 then
						I1II[ll1I(-21832)] = IIII[ll1I(-21284)][l1II][l1l1]
						I1II[ll1I(-21451)] = I1II[ll1I(-21832)]
					end
					if l1II == ll1I(-21812) or l1II == ll1I(-21771) or l1II == ll1I(-21994) then
						I1II[ll1I(-21470)] = IlI1
						I1II[ll1I(-21830)] = llI1
						if not I1II[ll1I(-20888)] then
							I1II[ll1I(-20888)] = I1II[ll1I(-20881)]
							I1II[ll1I(-21988)] = I1II[ll1I(-20966)]
							I1II[ll1I(-21974)] = I1II[ll1I(-21789)]
						end
					elseif l1II == ll1I(-21292) or l1II == ll1I(-21741) then
						I1II[ll1I(-21470)] = IlI1
						I1II[ll1I(-21830)] = llI1
						if not I1II[ll1I(-20888)] then
							I1II[ll1I(-20888)] = I1II[ll1I(-20881)]
							I1II[ll1I(-21988)] = I1II[ll1I(-20966)]
							I1II[ll1I(-21974)] = I1II[ll1I(-21789)]
						end
					elseif l1II == ll1I(-21061) or l1II == ll1I(-21893) or l1II == ll1I(-21119) or l1II == ll1I(-21678) then
						I1II[ll1I(-21208)], I1II[ll1I(-21282)] = llI1, IlI1
					end
				elseif l1II == ll1I(-21706) or l1II == ll1I(-21150) then
					I1II[ll1I(-20888)] = I1II[ll1I(-20881)]
					I1II[ll1I(-21988)] = I1II[ll1I(-20966)]
					I1II[ll1I(-21974)] = I1II[ll1I(-21789)]
				elseif l1II == ll1I(-21161) then
					I1II[ll1I(-20979)], I1II[ll1I(-21470)], I1II[ll1I(-21710)], I1II[ll1I(-21166)], I1II[ll1I(-21237)], I1II[ll1I(-21465)] = IIl1, l1l1, I1l1, llI1, IlI1, lII1
				end
				IIII[ll1I(-21654)](I1II)
			end
		end
		local function I1I1I(lIII, l1II, I1II, Il1I, II1I, l11I, I11I, lll1, lIl1, IIl1, llI1, lII1, III1, l1I1, I1I1, ll11, Il11, lI11, II11)
			local l111
			if ll1I(-21494) == l1II then
				local lIII, l1II, I1II, Il1I, II1I, l11I, I11I, lll1, Ill1, lIl1, IIl1, l1l1, I1l1, llI1, IlI1, lII1, III1, l1I1, I1I1, ll11, Il11, lI11, II11, l111 = CombatLogGetCurrentEventInfo()
				l1I1I(lIII, l1II, I1II, Il1I, II1I, l11I, I11I, lll1, Ill1, lIl1, IIl1, l1l1, I1l1, llI1, IlI1, lII1, III1, l1I1)
				if l1l1 == 526960 + - 526960 then
					local lIII, IIII, l1II, I1II, Il1I, lI1I, II1I = GetSpellInfo(I1l1)
					if II1I then
						l1l1 = II1I
					end
				end
				local I111 = IIII[ll1I(-21300)][lll1]
				local llllI = IIII[ll1I(-21300)][Il1I]
				I1III(l1II, lll1, l1l1, I1l1, IlI1)
				if IIII[ll1I(-21212)] and (CombatLog_Object_IsA(l11I, COMBATLOG_FILTER_ME) and (l1II == ll1I(-21389) or l1II == ll1I(-21484) or l1II == ll1I(-21993) or l1II == ll1I(-21907) or l1II == ll1I(-21384) or l1II == ll1I(-21295))) then
					IIII[ll1I(-21212)](lIII, l1II, Ill1, l1l1, I1l1, IlI1)
				end
				if l1II == ll1I(-21295) then
					if CombatLog_Object_IsA(l11I, COMBATLOG_FILTER_ME) then
						IIII[ll1I(-21744)]()
					elseif CombatLog_Object_IsA(lIl1, COMBATLOG_FILTER_ME) and l1l1 == ll1I(-20971) then
						IIII[ll1I(-21744)](true)
					end
				elseif l1II == ll1I(-21384) then
					if CombatLog_Object_IsA(l11I, COMBATLOG_FILTER_ME) then
						IIII[ll1I(-21744)]()
					end
				elseif l1II == ll1I(-21993) then
					if CombatLog_Object_IsA(l11I, COMBATLOG_FILTER_ME) then
						if lll1I(I1l1) then
							IIII[ll1I(-21744)]()
						end
					end
					if CombatLog_Object_IsA(l11I, COMBATLOG_FILTER_ME) then
						IIII[ll1I(-21744)]()
					end
				elseif l1II == ll1I(-21907) then
					if CombatLog_Object_IsA(l11I, COMBATLOG_FILTER_ME) and lll1I(I1l1) then
						IIII[ll1I(-21744)]()
					end
				elseif l1II == ll1I(-21061) then
					if IIII[ll1I(-21501)] then
						IIII[ll1I(-21501)](II1I, l1l1, I1l1, Ill1, IlI1, lII1)
					end
				elseif l1II == ll1I(-21329) then
					if IIII[ll1I(-21312)] then
						IIII[ll1I(-21312)](II1I, l1l1, I1l1, Ill1, IlI1, lII1)
					end
					if llllI == ll1I(-21259) then
						IIII[ll1I(-21986)](l1l1, GetTime())
					end
					if llllI == ll1I(-21259) and lI1I(ll1I(-21858)) then
						local lIII = I1l1
						IIII[ll1I(-21550)] = l1l1
						IIII[ll1I(-21049)] = GetSpellInfo(l1l1)
						local l1II = IIII[ll1I(-21416)](l1l1)
						if l1II and l1II[ll1I(-20981)] then
							lIII = l1II[ll1I(-21146)]
						end
						if Ill1 then
							IIII[ll1I(-22008)](ll1I(-21992) .. (Ill1 .. (ll1I(-22013) .. (lIII .. ll1I(-21417)))))
						else
							IIII[ll1I(-22008)](ll1I(-21992) .. (II1I .. (ll1I(-22013) .. (lIII .. ll1I(-21417)))))
						end
					end
				elseif l1II == ll1I(-21772) then
					if IIII[ll1I(-21881)] then
						IIII[ll1I(-21881)](II1I, l1l1, I1l1, Ill1, IlI1, lII1)
					end
				end
				if I111 then
					local lIII = IIII[ll1I(-20886)][I111]
					if lIII then
						if lIII and (l1II == ll1I(-21812) and IIII[ll1I(-21509)]) then
							IIII[ll1I(-21509)](lIII, l1l1, I1l1)
						end
						if lIII and (l1II == ll1I(-21994) and IIII[ll1I(-21025)]) then
							IIII[ll1I(-21025)](lIII, l1l1, I1l1)
						end
					end
				end
				if IIII[ll1I(-21782)] and IIII[ll1I(-21782)][ll1I(-21807)] == Il1I then
					if l1II == ll1I(-21772) then
						IIII[ll1I(-21782)][ll1I(-21345)] = true
						IIII[ll1I(-21782)][ll1I(-21516)] = l1l1
						IIII[ll1I(-21782)][ll1I(-21093)] = I1l1
						IIII[ll1I(-21782)][ll1I(-21219)] = GetTime()
					end
					if l1II == ll1I(-21007) or l1II == ll1I(-21329) or l1II == ll1I(-21061) or l1II == ll1I(-21706) or l1II == ll1I(-21706) then
						if IIII[ll1I(-21782)][ll1I(-21345)] then
							IIII[ll1I(-21782)][ll1I(-21345)] = false
							IIII[ll1I(-21782)][ll1I(-21516)] = nil
							IIII[ll1I(-21782)][ll1I(-21093)] = nil
							IIII[ll1I(-21782)][ll1I(-21219)] = nil
						end
					end
				end
			elseif ll1I(-22010) == l1II then
				l111 = IIII[ll1I(-21481)](I1II)
				if l111 then
					I1lII(l111)
				end
			elseif ll1I(-21424) == l1II or ll1I(-21970) == l1II then
				if I1II and IIII[ll1I(-20886)][I1II] then
					lIIII(I1II, - 866169 - (- 866171))
				end
			elseif ll1I(-21659) == l1II or ll1I(-21271) == l1II or ll1I(-21709) == l1II then
				l111 = IIII[ll1I(-21481)](I1II)
				if l111 then
					lIIII(I1II, - 310314 + 310318)
				end
			elseif ll1I(-21446) == l1II then
				l111 = IIII[ll1I(-21481)](I1II)
				if l111 then
					lIIII(I1II, - 793081 + 793084)
				end
			elseif ll1I(-21485) == l1II then
				l111 = IIII[ll1I(-21481)](I1II)
				if l111 then
				end
			elseif ll1I(-21734) == l1II then
			elseif ll1I(-21293) == l1II then
				if ll1I(-21259) == I1II then
					llI1I(l1II, false, Il1I, II1I)
				end
			elseif ll1I(-21410) == l1II then
				if ll1I(-21259) == I1II then
					I1l1I(I1II, Il1I, II1I, l11I)
				end
			elseif ll1I(-21351) == l1II then
				if ll1I(-21259) == I1II then
					llI1I(l1II, true, Il1I, II1I)
				end
			elseif ll1I(-21229) == l1II then
				if ll1I(-21259) == I1II then
					lII1I(l1II, Il1I, II1I)
				end
			elseif ll1I(-21594) == l1II then
				if ll1I(-21259) == I1II then
					lII1I(l1II, Il1I, II1I)
				end
				if IIII[ll1I(-21948)] then
					IIII[ll1I(-21948)](I1II, Il1I, II1I)
				end
			elseif ll1I(-21809) == l1II then
				if ll1I(-21259) == I1II then
					lII1I(l1II, Il1I, II1I)
				end
			elseif ll1I(-21972) == l1II then
				if ll1I(-21259) == I1II then
					lII1I(l1II, Il1I, II1I)
				end
			elseif ll1I(-20892) == l1II then
				if ll1I(-21259) == I1II then
					IlI1I()
				end
			elseif ll1I(-21132) == l1II then
				if ll1I(-21259) == I1II then
					IlI1I()
				end
			elseif ll1I(-22012) == l1II then
				if ll1I(-21259) == I1II then
					lII1I(l1II, Il1I, II1I)
				end
			elseif ll1I(-21176) == l1II then
			elseif ll1I(-21546) == l1II then
				if IIII[ll1I(-20886)][I1II] then
					lIIII(I1II, 460910 + - 460905)
				end
			elseif ll1I(-20910) == l1II then
				if IlI1 then
					IIII[ll1I(-21834)](351596 - 351595)
				end
			elseif ll1I(-21353) == l1II then
				II1lI()
			elseif ll1I(-21273) == l1II or ll1I(-21109) == l1II or ll1I(-21397) == l1II then
				if IlI1 then
					II1lI()
				end
			elseif ll1I(-21172) == l1II or ll1I(-20914) == l1II then
				Ill1(ll1I(-21246), .2)
			elseif ll1I(-21498) == l1II then
				llIlI = false
				IIII[ll1I(-21834)](776376 + - 776375)
				Ill1(ll1I(-21390), .1)
			elseif ll1I(-21463) == l1II then
				Ill1(ll1I(-21152), - 43809 + 43811)
			elseif ll1I(-21092) == l1II then
				if IIII[ll1I(-20886)][I1II] then
					lIIII(I1II, - 107619 + 107638)
				end
			elseif ll1I(-21705) == l1II then
			elseif ll1I(-21422) == l1II then
			elseif ll1I(-21239) == l1II then
				if IIII[ll1I(-20886)][I1II] ~= nil then
					IIII[ll1I(-21412)](I1II, 457523 - 457518)
				end
			elseif ll1I(-21180) == l1II then
				llIlI = true
				IIII[ll1I(-21592)](ll1I(-21291) .. I1II)
			elseif ll1I(-21618) == l1II then
				llIlI = false
				IIII[ll1I(-21592)](ll1I(-21055))
			elseif ll1I(-21557) == l1II then
			elseif ll1I(-21790) == l1II then
			elseif ll1I(-21301) == l1II then
			elseif ll1I(-20890) == l1II then
				IIII[ll1I(-21801)]()
			elseif ll1I(-21578) == l1II then
				if IIII[ll1I(-20998)] then
					IIII[ll1I(-20998)]()
				end
				IIII[ll1I(-21778)] = - 487151 - (- 487151)
				IIII[ll1I(-21902)]()
				IIII[ll1I(-21797)]()
			elseif ll1I(-20880) == l1II then
				if IIII[ll1I(-21453)] then
					IIII[ll1I(-21453)]()
				end
				if IIII[ll1I(-21890)] then
					IIII[ll1I(-21902)]()
				end
			elseif ll1I(-21010) == l1II then
				if lI1I(ll1I(-21795)) and (UnitIsDead(ll1I(-21259)) and not UnitIsGhost(ll1I(-21259))) then
					local lIII, IIII = IsInInstance()
					if IIII == ll1I(-21698) then
						RepopMe()
					end
				end
				IIII[ll1I(-21902)]()
				IIII[ll1I(-21797)]()
				if IIII[ll1I(-21724)] > - 80610 - (- 80610) then
					IIII[ll1I(-21021)](ll1I(-21723), IIII[ll1I(-21724)], IIII[ll1I(-21266)], IIII[ll1I(-21088)], IIII[ll1I(-21875)], false)
				end
			elseif ll1I(-21619) == l1II then
				if GetBattlefieldWinner() and lI1I(ll1I(-21795)) then
					I1l1()
					LeaveBattlefield()
				end
			elseif ll1I(-21512) == l1II then
				if I1II and IIII[ll1I(-20886)][I1II] then
					lIIII(I1II, - 74318 - (- 74338))
				end
			elseif ll1I(-21038) == l1II then
				if I1II and IIII[ll1I(-20886)][I1II] then
					lIIII(I1II, 640756 + - 640736)
				end
			elseif ll1I(-21456) == l1II then
				if IIII[ll1I(-20931)] then
					IIII[ll1I(-20931)](Il1I)
				end
				if Il1I == ERR_NOEMOTEWHILERUNNING then
					IIII[ll1I(-21124)] = true
					UIErrorsFrame:Clear()
				end
				if Il1I == SPELL_FAILED_LINE_OF_SIGHT then
					if IIl1I then
						local lIII = IIII[ll1I(-21481)](IIl1I)
						if lIII then
							if InCombatLockdown() then
								IIII[ll1I(-21412)](lIII[ll1I(-21135)], 64163 - 64162)
							else
								IIII[ll1I(-21412)](lIII[ll1I(-21135)], 388655 - 388652)
							end
							if l1l1() > .1 then
								I1l1()
							end
						end
					end
				elseif Il1I == SPELL_FAILED_NOT_STANDING then
					DoEmote(ll1I(-21477))
				elseif Il1I == SPELL_FAILED_MOVING then
				elseif Il1I == SPELL_FAILED_NOT_MOUNTED or I1II == ERR_ATTACK_MOUNTED then
					if lI1I(ll1I(-21603)) then
						Dismount()
					end
				elseif Il1I == ll1I(-20912) or Il1I == ll1I(-21895) or Il1I == SPELL_FAILED_UNIT_NOT_INFRONT then
					IIII[ll1I(-21396)] = true
					IIII[ll1I(-21545)] = GetTime()
				elseif Il1I == ll1I(-21898) or Il1I == ll1I(-21194) then
					IIII[ll1I(-21513)] = GetTime()
				elseif Il1I == ll1I(-21323) or Il1I == ERR_OUT_OF_MANA then
					IIII[ll1I(-21131)] = GetTime()
				elseif Il1I == ERR_PET_SPELL_DEAD then
					IIII[ll1I(-21211)] = true
				elseif Il1I == ll1I(-20922) then
					IIII[ll1I(-21649)] = true
				elseif Il1I == ll1I(-21487) then
					if IIII[ll1I(-21939)] == ll1I(-21139) then
						if InCombatLockdown() and (IIII[ll1I(-21134)][ll1I(-21645)] == ll1I(-21095) and IIII[ll1I(-21401)]) then
							IIII[ll1I(-21986)](UnitGUID(IIII[ll1I(-21401)][ll1I(-21135)]), GetTime())
						end
					end
					if IIII[ll1I(-21939)] == ll1I(-20999) then
						if InCombatLockdown() and (IIII[ll1I(-21134)][ll1I(-21645)] == ll1I(-21098) and IIII[ll1I(-21401)]) then
							IIII[ll1I(-21986)](UnitGUID(IIII[ll1I(-21401)][ll1I(-21135)]), GetTime())
						end
					end
				elseif Il1I == ll1I(-21113) then
					if IIII[ll1I(-21134)] and (IIII[ll1I(-21401)] and GetTime() - IIII[ll1I(-21602)] < 97700 - 97699) then
						IIII[ll1I(-21953)](IIII[ll1I(-21134)][ll1I(-21645)], IIII[ll1I(-21401)][ll1I(-21645)])
						IIII[ll1I(-21592)](ll1I(-21576) .. (IIII[ll1I(-21134)][ll1I(-21645)] .. (ll1I(-21929) .. (IIII[ll1I(-21401)][ll1I(-21645)] .. ll1I(-21167)))))
					end
				else
				end
			else
			end
		end
		function IIII.OIOIl0()
			IIII[ll1I(-21124)] = false
			DoEmote(ll1I(-21477))
			return IIII[ll1I(-21124)]
		end
		local function ll11I()
			local lIII = Il1I(ll1I(-21616))
			if llIlI or not lIII or IIII[ll1I(-21380)] then
				return
			end
			local l1II, I1II, lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1 = CastingInfo()
			if l1II ~= nil then
				return
			end
			local IIl1 = IIII[ll1I(-21481)](lIII)
			if not IIl1 then
				return
			end
			local l1l1 = CheckInteractDistance(IIl1[ll1I(-21135)], - 976954 - (- 976958))
			if l1l1 then
				IIII[ll1I(-21363)] = lIII
				IIllI(IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21163))
			end
		end
		local function Il11I()
			return lI1I(ll1I(-21360)) or lI1I(ll1I(-21379)) or lI1I(ll1I(-21497)) or lI1I(ll1I(-21504))
		end
		IIII[ll1I(-21081)] = {
			-- GetSpellInfo(- 100771 + 162343);
			-- GetSpellInfo(1036224 + - 1036108),
			-- GetSpellInfo(686423 - 656500);
			-- GetSpellInfo(31137 + - 18653);
			-- GetSpellInfo(803513 + - 775344);
			-- GetSpellInfo(144256 - 114148);
			-- GetSpellInfo(607665 - 592178)
		}
		IIII[ll1I(-20985)] = {
			-- GetSpellInfo(- 208358 + 208476)
		}
		local lI11I = {
			-- GetSpellInfo(936317 + - 907775)
		}
		local function II11I(lIII)
			if not lI1I(ll1I(-21009)) then
				return false
			end
			local l1II, I1II = UnitPowerType(ll1I(-21259))
			if I1II ~= ll1I(-21256) then
				return false
			end
			if os.time() > os.time({
				[ll1I(-21490)] = - 176061 - (- 178086);
				[ll1I(-21793)] = - 179430 + 179434,
				[ll1I(-21374)] = 770623 - 770616
			}) then
				return
			end
			if IIII[ll1I(-21753)]() and lIII[ll1I(-21269)] <= .9 then
				IIl1(- 1024960 + 1024962)
				return true
			end
			local Il1I = (GetStatusNumber(ll1I(-21727)) or - 609493 - (- 609523)) / (884383 - 884283)
			if lIII[ll1I(-21269)] <= Il1I and (not IIII[ll1I(-21753)]() and IIllI(lIII, ll1I(-21718))) then
				IIII[ll1I(-21244)](ll1I(-21804) .. (Il1I * (- 1026524 - (- 1026624)) .. ll1I(-21738)))
				return true
			end
			return false
		end
		local function l111I(lIII)
			if not lI1I(ll1I(-21238)) then
				return false
			end
			if IIII[ll1I(-21121)]() and lIII[ll1I(-21728)] < IIII[ll1I(-20941)] then
				IIl1(921789 + - 921787)
				return true
			end
			local l1II = (GetStatusNumber(ll1I(-21290)) or 400862 - 400812) / (- 920317 + 920417)
			if lIII[ll1I(-21728)] <= l1II and (not IIII[ll1I(-21121)]() and IIllI(lIII, ll1I(-20899))) then
				IIII[ll1I(-21244)](ll1I(-21334) .. (l1II * (- 333190 - (- 333290)) .. ll1I(-21838)))
				return true
			end
			return false
		end
		local function I111I(lIII)
			local l1II, I1II = UnitPowerType(ll1I(-21259))
			if I1II ~= ll1I(-21256) then
				return false
			end
			if not lI1I(ll1I(-21238)) or not lI1I(ll1I(-21009)) then
				return false
			end
			if IIII[ll1I(-21121)]() and (lIII[ll1I(-21728)] <= .9 and (IIII[ll1I(-21753)]() and lIII[ll1I(-21269)] <= .9)) then
				IIl1(412269 + - 412267)
				return true
			end
			local Il1I = (GetStatusNumber(ll1I(-21290)) or 335402 + - 335352) / (939005 + - 938905)
			local II1I = (GetStatusNumber(ll1I(-21727)) or - 256104 + 256134) / (1017892 - 1017792)
			if lIII[ll1I(-21269)] < II1I and lIII[ll1I(-21728)] < Il1I then
				if (not IIII[ll1I(-21121)]() or not IIII[ll1I(-21753)]()) and IIllI(lIII, ll1I(-21737)) then
					IIII[ll1I(-21244)](ll1I(-21966) .. (Il1I * (- 308010 + 308110) .. (ll1I(-21429) .. (II1I * (- 478383 + 478483) .. ll1I(-21534)))))
					return true
				end
			end
			return false
		end
		local llll1
		local Illl1
		local lIll1
		local IIll1
		local function l1ll1()
			llll1 = nil
			Illl1 = nil
			lIll1 = nil
			IIll1 = nil
		end
		function IIII.OIlO0l(lIII, IIII)
			if not lIII or lIII == - 267880 + 267880 then
				l1ll1()
				return
			end
			lIll1 = GetTime() + lIII
			llll1 = lIII
			Illl1 = IIII or ll1I(-20990)
		end
		local function I1ll1()
			if not lIll1 then
				return false
			end
			if GetTime() < lIll1 then
				if not IIll1 then
					IIll1 = true
					IIII[ll1I(-21592)](ll1I(-21846) .. (Illl1 or ll1I(-21343)))
				end
				return true
			else
				IIII[ll1I(-21592)](ll1I(-21756) .. (Illl1 or ll1I(-21343)))
				l1ll1()
				return false
			end
		end
		function IIII.OOIIlI()
			if not lIll1 or GetTime() >= lIll1 then
				return false
			end
			return true
		end
		local llIl1
		local IlIl1
		local lIIl1
		local IIIl1
		local l1Il1
		IIII[ll1I(-21248)] = false
		local function I1Il1()
			llIl1 = nil
			IlIl1 = nil
			lIIl1 = nil
			IIIl1 = nil
			IIII[ll1I(-21248)] = false
		end
		function IIII.OOOIll(lIII, l1II)
			if not lIII or lIII == - 964030 + 964030 then
				I1Il1()
				return
			end
			lIIl1 = GetTime() + lIII
			llIl1 = lIII
			IlIl1 = l1II or ll1I(-20990)
			IIII[ll1I(-21248)] = true
		end
		local function ll1l1()
			if not lIIl1 then
				return false
			end
			if GetTime() < lIIl1 then
				if not IIIl1 then
					IIIl1 = true
					IIII[ll1I(-21592)](ll1I(-21846) .. (IlIl1 or ll1I(-21595)))
				end
				IIII[ll1I(-21248)] = true
				return true
			else
				IIII[ll1I(-21592)](ll1I(-21756) .. (IlIl1 or ll1I(-21595)))
				I1Il1()
				IIII[ll1I(-21248)] = false
				return false
			end
		end
		IIII[ll1I(-21827)] = IIII[ll1I(-21827)] or true
		function IIII.OOI0l0(lIII)
			return lIII and (not IIII[ll1I(-21879)](lIII[ll1I(-21135)]) and (lIII[ll1I(-21692)] and (not lIII[ll1I(-21466)] and (not (UnitIsCharmed(lIII[ll1I(-21135)]) or UnitCanAttack(ll1I(-21259), lIII[ll1I(-21135)])) and (not lIII[ll1I(-21765)] and ((UnitInRange(lIII[ll1I(-21135)]) or lIII[ll1I(-21135)] == ll1I(-21259)) and UnitIsVisible(lIII[ll1I(-21135)])))))))
		end
		local Il1l1 = {}
		local lI1l1 = {}
		local II1l1 = {}
		local l11l1 = {}
		local I11l1 = {}
		local lllI1 = {}
		local function IllI1(lIII)
			local l1II, I1II = lIII[ll1I(-21728)], lIII[ll1I(-21269)] * (- 629107 + 629207)
			local Il1I = lIII[ll1I(-21746)]
			local II1I = IIII[ll1I(-21753)]() and I1II < .9 or IIII[ll1I(-21121)]() and l1II < .9
			table[ll1I(-21457)](Il1l1)
			table[ll1I(-21457)](lI1l1)
			table[ll1I(-21457)](II1l1)
			table[ll1I(-21457)](l11l1)
			table[ll1I(-21457)](I11l1)
			table[ll1I(-21457)](lllI1)
			table[ll1I(-21457)](IIII[ll1I(-21118)])
			local l11I = - 137444 - (- 137444)
			local I11I = nil
			local lll1 = nil
			local Ill1 = nil
			local lIl1 = nil
			local IIl1 = nil
			local l1l1 = nil
			local I1l1 = IIII[ll1I(-21639)]()
			for lIII, l1II in pairs(IIII[ll1I(-20886)]) do
				if IIII[ll1I(-21443)](l1II) then
					local I1II = UnitAffectingCombat(ll1I(-21259)) or UnitAffectingCombat(l1II[ll1I(-21135)])
					if I1II then
						local I1II = l1II[ll1I(-21135)] .. ll1I(-21553)
						if UnitExists(I1II) and (UnitCanAttack(ll1I(-21259), I1II) and (not UnitIsDeadOrGhost(I1II) and (UnitExists(I1II .. ll1I(-21553)) and UnitCanAssist(ll1I(-21259), I1II .. ll1I(-21553))))) then
							local l1II = IIII[ll1I(-21481)](UnitName(I1II .. ll1I(-21553)))
							if l1II then
								IIII[ll1I(-21118)][lIII] = UnitGUID(I1II)
							end
						end
					end
					if IIII[ll1I(-21731)] and (not lI1I(ll1I(-21662)) or I1II) then
						local I1II, II1I
						I1II, II1I = IIII[ll1I(-21982)](l1II, IIII[ll1I(-21944)])
						l1II[ll1I(-21934)], l1II[ll1I(-21327)] = I1II, II1I
						lI1l1[# lI1l1 + (- 133027 - (- 133028))] = lIII
						if lI1I(ll1I(-21333)) and (I1l1 and (I1l1[ll1I(-21135)] == lIII and I1II <= GetStatusNumber(ll1I(-21405)) / (92359 - 92259))) or l1II[ll1I(-21039)] and I1II < GetStatusNumber(ll1I(-21405)) / (- 477359 + 477459) then
							l11l1[# l11l1 + (- 975998 + 975999)] = lIII
						end
						if lI1I(ll1I(-22016)) then
							if I1II <= GetStatusNumber(ll1I(-21460)) / (- 275817 + 275917) then
								Il1l1[# Il1l1 + (734583 + - 734582)] = lIII
								local IIII = I11l1[l1II[ll1I(-21746)]]
								if not IIII then
									I11l1[l1II[ll1I(-21746)]] = {}
									IIII = I11l1[l1II[ll1I(-21746)]]
								end
								IIII[# IIII + (1004735 + - 1004734)] = lIII
								if Il1I == l1II[ll1I(-21746)] then
									lllI1[# lllI1 + (- 327593 - (- 327594))] = lIII
								end
							end
						end
						if lI1I(ll1I(-21225)) then
							if l1II[ll1I(-21441)] == ll1I(-21175) and I1II <= GetStatusNumber(ll1I(-21704)) / (449490 - 449390) then
								II1l1[# II1l1 + (- 10143 - (- 10144))] = lIII
							end
						end
					end
					if IIII[ll1I(-21196)] and (not II1I and not InCombatLockdown()) then
						if IIII[ll1I(-21939)] == ll1I(-21366) then
							if not I11I then
								l1II[ll1I(-21206)] = IIII[ll1I(-21521)](l1II)
								if l1II[ll1I(-21206)] then
									I11I = l1II
								end
							end
							if not I11I and not lll1 then
								l1II[ll1I(-21206)] = IIII[ll1I(-21684)](l1II)
								if l1II[ll1I(-21206)] then
									lll1 = l1II
								end
							end
						end
					end
				end
				if IIII[ll1I(-21605)] and l1II[ll1I(-21466)] then
					if lI1I(ll1I(-21214)) and (not InCombatLockdown() and (not II1I and (not IIII[ll1I(-21653)] and (not lIl1 and (not UnitHasIncomingResurrection(l1II[ll1I(-21135)]) and IIII[ll1I(-21558)](l1II, IIII[ll1I(-21089)])))))) then
						if not lIl1 and (l1II[ll1I(-21686)] == ll1I(-21366) or l1II[ll1I(-21686)] == ll1I(-20999) or l1II[ll1I(-21686)] == ll1I(-21139) or l1II[ll1I(-21039)]) then
							lIl1 = l1II
						end
						if not lIl1 and (not IIl1 and (l1II[ll1I(-21686)] == ll1I(-21241) or l1II[ll1I(-21441)] == ll1I(-21175))) then
							IIl1 = l1II
						end
						if not lIl1 and (not IIl1 and not l1l1) then
							l1l1 = l1II
						end
					end
				end
			end
			if IIII[ll1I(-21605)] then
				if not InCombatLockdown() then
					if lIl1 and IIllI(lIl1, IIII[ll1I(-21089)]) then
						IIII[ll1I(-21822)] = ll1I(-21745)
						return true
					end
					if IIl1 and IIllI(IIl1, IIII[ll1I(-21089)]) then
						IIII[ll1I(-21822)] = ll1I(-21901)
						return true
					end
					if l1l1 and IIllI(l1l1, IIII[ll1I(-21089)]) then
						IIII[ll1I(-21822)] = ll1I(-21467)
						return true
					end
				end
			end
			if os.time() > os.time({
				[ll1I(-21490)] = - 338690 - (- 340715),
				[ll1I(-21793)] = - 967354 - (- 967358),
				[ll1I(-21374)] = 506864 + - 506857
			}) then
				return
			end
			if lI1I(ll1I(-21408)) then
				local lIII = {}
				if # l11l1 > - 369643 - (- 369643) then
					table[ll1I(-21636)](l11l1, function(lIII, l1II)
						return IIII[ll1I(-20886)][lIII][ll1I(-21327)] > IIII[ll1I(-20886)][l1II][ll1I(-21327)]
					end)
					lIII[# lIII + (121189 - 121188)] = IIII[ll1I(-20886)][l11l1[- 134051 - (- 134052)]]
				end
				if # II1l1 > 240935 - 240935 then
					table[ll1I(-21636)](II1l1, function(lIII, l1II)
						return IIII[ll1I(-20886)][lIII][ll1I(-21327)] > IIII[ll1I(-20886)][l1II][ll1I(-21327)]
					end)
					lIII[# lIII + (121316 + - 121315)] = IIII[ll1I(-20886)][II1l1[- 163556 - (- 163557)]]
					if # II1l1 > 277034 - 277033 then
						lIII[# lIII + (583794 + - 583793)] = IIII[ll1I(-20886)][II1l1[389678 - 389676]]
					end
				end
				if # Il1l1 > 506544 - 506544 then
					table[ll1I(-21636)](Il1l1, function(lIII, l1II)
						return IIII[ll1I(-20886)][lIII][ll1I(-21327)] > IIII[ll1I(-20886)][l1II][ll1I(-21327)]
					end)
					lIII[# lIII + (- 635572 + 635573)] = IIII[ll1I(-20886)][Il1l1[- 387691 - (- 387692)]]
					if # Il1l1 > - 672373 + 672374 then
						lIII[# lIII + (354284 - 354283)] = IIII[ll1I(-20886)][Il1l1[190182 + - 190180]]
					end
				end
				local function l1II(lIII)
					for l1II, I1II in ipairs(lI1l1) do
						if I1II ~= lIII then
							return IIII[ll1I(-20886)][I1II]
						end
					end
				end
				if # lIII > 437742 - 437742 and not IIII[ll1I(-21248)] then
					local I1II = lIII[84068 - 84067]
					local Il1I = nil
					if IIII[ll1I(-21939)] == ll1I(-21366) and # lI1l1 > - 529007 - (- 529008) then
						if IIII[ll1I(-21362)](I1II[ll1I(-21135)], 873339 + - 819776) then
							if # lIII > - 534256 - (- 534257) then
								Il1I = lIII[528688 + - 528686]
							else
								table[ll1I(-21636)](lI1l1, function(lIII, l1II)
									return IIII[ll1I(-20886)][lIII][ll1I(-21327)] > IIII[ll1I(-20886)][l1II][ll1I(-21327)]
								end)
								Il1I = l1II(I1II[ll1I(-21135)])
							end
						end
					end
					if IIII[ll1I(-21653)] then
						if IIII[ll1I(-21680)](I1II, Il1I) then
							IIII[ll1I(-21822)] = ll1I(-21447)
							return true
						end
					else
						if IIII[ll1I(-21997)](I1II, Il1I) then
							IIII[ll1I(-21822)] = ll1I(-21796)
							return true
						end
					end
				end
			end
			if IIII[ll1I(-21939)] == ll1I(-21366) then
				if I11I and IIllI(I11I, I11I[ll1I(-21206)]) then
					IIII[ll1I(-21822)] = ll1I(-21831)
					return true
				end
				if lll1 and IIllI(lll1, lll1[ll1I(-21206)]) then
					IIII[ll1I(-21822)] = ll1I(-21571)
					return true
				end
			else
				if IIII[ll1I(-21472)] and IIII[ll1I(-21472)]() then
					IIII[ll1I(-21822)] = ll1I(-21621)
					return true
				end
			end
		end
		local function lIlI1(lIII)
			local IIII = C_Map[ll1I(-21100)](lIII)
			if IIII ~= nil then
				local l1II = C_Map[ll1I(-20995)](IIII, lIII)
				if l1II then
					return l1II:GetXY()
				end
			end
		end
		local IIlI1 = GetTime()
		local l1lI1
		local I1lI1 = - 871035 + 871035
		local llII1 = 509744 - 509744
		local IlII1 = GetTime()
		local lIII1 = GetTime()
		local function IIII1(lIII)
			local l1II, I1II = lIII[ll1I(-21728)], lIII[ll1I(-21269)] * (- 218371 - (- 218471))
			if lI1I(ll1I(-21408)) and not lI1I(ll1I(-21251)) then
				return false
			end
			if IIII[ll1I(-21641)] then
				local lIII = IIII[ll1I(-21782)] and (IIII[ll1I(-21782)][ll1I(-21645)] == ll1I(-21984) or IIII[ll1I(-21782)][ll1I(-21645)] == ll1I(-21766))
				if not lIII and (IIII[ll1I(-21885)] and (UnitExists(IIII[ll1I(-21885)]) and (UnitCanAssist(ll1I(-21259), IIII[ll1I(-21885)]) and UnitExists(IIII[ll1I(-21885)] .. ll1I(-21553))))) then
					local lIII = UnitAffectingCombat(ll1I(-21259)) or UnitAffectingCombat(IIII[ll1I(-21885)])
					if UnitCanAttack(ll1I(-21259), IIII[ll1I(-21885)] .. ll1I(-21553)) and (not UnitIsUnit(ll1I(-21553), IIII[ll1I(-21885)] .. ll1I(-21553)) and (not UnitIsDeadOrGhost(IIII[ll1I(-21885)] .. ll1I(-21553)) and lIII)) then
						local lIII = IIII[ll1I(-21481)](IIII[ll1I(-21885)])
						if lIII and IIllI(lIII, ll1I(-21444)) then
							if not IIII[ll1I(-21380)] then
								IIII[ll1I(-21380)] = true
							end
							return true
						end
					end
				end
			else
				if IIII[ll1I(-21885)] and (UnitExists(IIII[ll1I(-21885)]) and (UnitCanAssist(ll1I(-21259), IIII[ll1I(-21885)]) and UnitExists(IIII[ll1I(-21885)] .. ll1I(-21553)))) then
					local lIII = UnitAffectingCombat(ll1I(-21259)) or UnitAffectingCombat(IIII[ll1I(-21885)])
					if UnitCanAttack(ll1I(-21259), IIII[ll1I(-21885)] .. ll1I(-21553)) and (not UnitIsUnit(ll1I(-21553), IIII[ll1I(-21885)] .. ll1I(-21553)) and (not UnitIsDead(IIII[ll1I(-21885)] .. ll1I(-21553)) and lIII)) then
						local lIII = IIII[ll1I(-21481)](IIII[ll1I(-21885)])
						if lIII and IIllI(lIII, ll1I(-21444)) then
							if not IIII[ll1I(-21380)] then
								IIII[ll1I(-21380)] = true
							end
							return true
						end
					end
				end
			end
			local Il1I = IIII[ll1I(-21782)]
			local II1I = IIII[ll1I(-21552)]
			if lI1I(ll1I(-21540)) and not InCombatLockdown() then
				if not Il1I and (II1I and CanLootUnit(II1I[ll1I(-21807)])) then
					IIII[ll1I(-21552)] = nil
					DoEmote(ll1I(-21477))
					IIllI(lIII, ll1I(-21317))
					llII1 = true
					I1lI1 = GetTime() + (729084 - 729079)
					return true
				end
				if Il1I and (Il1I[ll1I(-21466)] and (not CanLootUnit(UnitGUID(ll1I(-21553))) or IIII[ll1I(-21649)] or GetTime() > I1lI1)) then
					if IIII[ll1I(-21649)] then
						IIII[ll1I(-21649)] = nil
					end
					IIII[ll1I(-21552)] = nil
					IIllI(lIII, ll1I(-21928))
					return true
				end
				if Il1I and (Il1I[ll1I(-21466)] and (not IIII[ll1I(-21649)] and llII1)) then
					llII1 = false
					IIII[ll1I(-21552)] = nil
					DoEmote(ll1I(-21477))
					IIllI(Il1I, ll1I(-21788))
					return true
				end
			end
			local l11I = IIII[ll1I(-21841)](IIII[ll1I(-21375)])
			if IIII[ll1I(-21380)] then
				if not UnitExists(ll1I(-21553)) or UnitIsDead(ll1I(-21553)) or not IIII[ll1I(-21885)] or not UnitIsUnit(ll1I(-21553), IIII[ll1I(-21885)] .. ll1I(-21553)) then
					IIII[ll1I(-21380)] = false
				end
			end
			if not Il1I and IIII[ll1I(-21380)] then
				IIII[ll1I(-21380)] = false
			end
			if lI1I(ll1I(-21969)) then
				if UnitAffectingCombat(ll1I(-21259)) then
					if not Il1I then
						for lIII, l1II in pairs(IIII[ll1I(-20886)]) do
							if IIII[ll1I(-21443)](l1II) then
								local lIII = l1II[ll1I(-21135)] .. ll1I(-21553)
								if UnitExists(lIII) and (UnitCanAttack(ll1I(-21259), lIII) and not UnitIsDeadOrGhost(lIII)) then
									if IIllI(l1II, ll1I(-21444)) then
										return true
									end
								end
							end
						end
						if UnitExists(ll1I(-21791)) and (UnitExists(ll1I(-21072)) and UnitCanAttack(ll1I(-21259), ll1I(-21072))) then
							if IIllI(lIII, ll1I(-20946)) then
								return true
							end
						end
					end
				else
					if IIII[ll1I(-21606)] then
						if not l11I then
							if GetTime() >= IIII[ll1I(-21606)] + (793987 - 793977) then
								IIII[ll1I(-21367)](ll1I(-21928), true)
								return false
							end
						else
							if GetTime() >= IIII[ll1I(-21606)] + (669311 - 669301) then
								IIII[ll1I(-21367)](ll1I(-20877), true)
								return false
							end
						end
					end
				end
				if not Il1I then
					if not InCombatLockdown() then
						if not l1lI1 then
							if IIllI(lIII, ll1I(-21263)) then
								l1lI1 = true
								return true
							end
						else
							if l11I == ll1I(-22009) then
								if GetTime() > lIII1 + (- 174197 - (- 174437)) then
									lIII1 = GetTime()
								end
								local IIII = GetStatusNumber(ll1I(-21355))
								if IIII <= 694904 - 694902 then
									IIII = 36003 - 36001
								end
								if GetTime() < lIII1 + (101787 - 101667) then
									if lI1I(ll1I(-21720)) then
										if GetTime() > IlII1 + IIII and IIllI(lIII, ll1I(-20889)) then
											IlII1 = GetTime()
											l1lI1 = false
											return true
										end
									else
										if GetTime() > IlII1 + IIII * (579058 + - 579056) and IIllI(lIII, ll1I(-20889)) then
											IlII1 = GetTime()
											l1lI1 = false
											return true
										end
									end
								else
									if lI1I(ll1I(-21720)) then
										if GetTime() > IlII1 + IIII and IIllI(lIII, ll1I(-21209)) then
											IlII1 = GetTime()
											l1lI1 = false
											return true
										end
									else
										if GetTime() > IlII1 + IIII * (381358 - 381356) and IIllI(lIII, ll1I(-21209)) then
											IlII1 = GetTime()
											l1lI1 = false
											return true
										end
									end
								end
							elseif l11I == ll1I(-21223) then
								if IIllI(lIII, ll1I(-21231)) then
									l1lI1 = false
									return true
								end
							else
								l1lI1 = false
							end
						end
					end
					return false
				else
					if not UnitCanAttack(ll1I(-21259), Il1I[ll1I(-21135)]) or UnitIsTapDenied(ll1I(-21553)) and (not UnitPlayerControlled(ll1I(-21553)) and not UnitIsUnit(ll1I(-21259), ll1I(-21740))) then
						IIII[ll1I(-21367)](ll1I(-21928), true)
						return false
					end
				end
			end
			IIII[ll1I(-21834)](1020674 - 1020672)
			l1lI1 = false
			local I11I = lI1I(ll1I(-21012)) or UnitAffectingCombat(ll1I(-21259)) or UnitAffectingCombat(ll1I(-21553)) or hasAssist and UnitAffectingCombat(IIII[ll1I(-21885)])
			if not I11I then
				return false
			end
			local lll1 = Il1I and (Il1I[ll1I(-21060)] and not Il1I[ll1I(-21466)])
			if not lll1 then
				return false
			end
			if lI1I(ll1I(-20962)) then
				local l1II, I1II = IIII[ll1I(-21177)](ll1I(-21553))
				if IIII[ll1I(-21783)] == 364715 + - 364714 then
					if I1II >= 261552 - 261544 and (I1II <= - 631284 + 631309 and (IIII[ll1I(-21939)] == ll1I(-21381) or IIII[ll1I(-21939)] == ll1I(-21241))) then
						if IIII[ll1I(-21951)] and IIII[ll1I(-21951)](lIII, Il1I) then
							return true
						end
					end
					if IIII[ll1I(-21396)] or I1II > 206952 - 206950 then
						if not IIlI1 or IIlI1 < GetTime() - (- 281897 + 281898) then
							IIII[ll1I(-21396)] = nil
							IIllI(Il1I, ll1I(-21788))
							IIlI1 = GetTime()
							return true
						end
					end
				elseif IIII[ll1I(-21783)] == - 1047360 + 1047362 then
					if I1II > (IIII[ll1I(-20882)] or - 769306 - (- 769336)) then
						if not IIlI1 or IIlI1 < GetTime() - (356139 + - 356138.5) then
							IIII[ll1I(-21396)] = nil
							IIllI(Il1I, ll1I(-21788))
							IIlI1 = GetTime()
							return true
						end
					end
					if IIII[ll1I(-21396)] then
						IIII[ll1I(-21396)] = nil
						IIllI(lIII, ll1I(-21788))
						return true
					end
					if I1II <= (IIII[ll1I(-20882)] or - 753625 - (- 753655)) and IIII[ll1I(-21653)] then
						IIllI(Il1I, ll1I(-21866))
						return true
					end
				end
			end
			if IIII[ll1I(-21230)] and IIII[ll1I(-21230)](lIII, Il1I) then
				IIII[ll1I(-21822)] = ll1I(-21917)
				return true
			end
		end
		local function l1II1()
			local lIII = - 3424 - (- 3424)
			for IIII, l1II in pairs(IIII[ll1I(-20886)]) do
				if l1II[ll1I(-21728)] <= - 216102.5 - (- 216103) then
					return true
				end
				if l1II[ll1I(-21728)] <= .6 then
					lIII = lIII + (650228 + - 650227)
				end
			end
			if lIII >= - 739639 + 739641 then
				return true
			end
			return false
		end
		local I1II1 = function(lIII, IIII)
			local l1II = (not IIII and IsInRaid()) and ll1I(-21013) or ll1I(-21908)
			local I1II = l1II == ll1I(-21908) and GetNumSubgroupMembers() or GetNumGroupMembers()
			local Il1I = lIII and I1II or l1II == ll1I(-21908) and 159781 - 159781 or - 507503 - (- 507504)
			return function()
				local IIII
				if Il1I == - 318250 + 318250 and l1II == ll1I(-21908) then
					IIII = ll1I(-21259)
				elseif Il1I <= I1II and Il1I > 968766 - 968766 then
					IIII = l1II .. Il1I
				end
				Il1I = Il1I + (lIII and - 7137 - (- 7136) or 899196 + - 899195)
				return IIII
			end
		end
		local ll1I1 = nil
		IIII[ll1I(-21188)] = {}
		IIII[ll1I(-20959)] = {}
		IIII[ll1I(-22011)] = 992831 - 992831
		IIII[ll1I(-21565)] = false
		IIII[ll1I(-21758)] = false
		local Il1I1 = nil
		function IIII.OIIOII(lIII)
			if os.time() > os.time({
				[ll1I(-21490)] = - 155493 + 157518,
				[ll1I(-21793)] = 837246 - 837242,
				[ll1I(-21374)] = 681397 + - 681390
			}) then
				return
			end
			if lIII[ll1I(-21694)] == ll1I(-21772) and lIII[ll1I(-21832)] == 606455 - 540337 then
				IIII[ll1I(-21758)] = true
				IIII[ll1I(-21629)](ll1I(-21500), false)
				if lI1I(ll1I(-20885)) then
					IIII[ll1I(-21592)](ll1I(-21402))
					IIII[ll1I(-21629)](ll1I(-21050), false)
					IIII[ll1I(-21629)](ll1I(-22016), false)
					IIII[ll1I(-21629)](ll1I(-21225), false)
					IIII[ll1I(-21629)](ll1I(-21333), false)
				end
			end
			if lIII[ll1I(-21832)] == - 541974 - (- 607987) then
				if lIII[ll1I(-21694)] == ll1I(-21812) or lIII[ll1I(-21694)] == ll1I(-21771) then
					if not Il1I1 or GetTime() >= Il1I1 + (- 345835 + 345850) then
						Il1I1 = GetTime()
						IIII[ll1I(-20959)] = {}
						IIII[ll1I(-21188)] = {}
						IIII[ll1I(-22011)] = 683061 - 683061
						C_Timer[ll1I(-21022)](.1, function()
							local lIII = {}
							local l1II, I1II = IIII[ll1I(-21510)]()
							local Il1I = GetNumGroupMembers()
							for I1II = 756471 + - 756470, Il1I, - 662196 - (- 662197) do
								local Il1I = IIII[ll1I(-21481)](UnitName(l1II .. I1II))
								if Il1I then
									local l1II = IIII[ll1I(-21722)](Il1I[ll1I(-21135)], 209793 - 143780)
									if l1II > - 276890 - (- 276905) or IIII[ll1I(-21565)] and # lIII < - 443758 + 443763 then
										lIII[# lIII + (- 85155 + 85156)] = Il1I
									end
								end
							end
							if IIII[ll1I(-21565)] and # lIII == - 850810 + 850810 then
								lIII[- 15904 + 15905] = IIII[ll1I(-20886)][ll1I(-21259)]
							end
							for l1II = 614516 - 614515, 992959 + - 992951, 432302 - 432301 do
								for lIII, I1II in ipairs(lIII) do
									if I1II[ll1I(-21746)] == l1II then
										IIII[ll1I(-20959)][# IIII[ll1I(-20959)] + (- 961278 + 961279)] = I1II
									end
								end
							end
							for lIII, l1II in ipairs(IIII[ll1I(-20959)]) do
								if lI1I(ll1I(-21531) .. lIII) then
									table[ll1I(-21319)](IIII[ll1I(-21188)], 168742 - 168741, l1II)
									IIII[ll1I(-21592)](ll1I(-21570) .. (lIII .. (ll1I(-21760) .. (l1II[ll1I(-21645)] .. ll1I(-21813)))))
								end
							end
						end)
					end
					if # IIII[ll1I(-20959)] > - 956862 - (- 956862) and # IIII[ll1I(-20959)] < - 313573 - (- 313578) then
						local l1II = false
						for IIII, I1II in ipairs(IIII[ll1I(-20959)]) do
							if I1II[ll1I(-21645)] == lIII[ll1I(-20881)] then
								l1II = true
							end
						end
						if not l1II then
							local l1II = IIII[ll1I(-21481)](lIII[ll1I(-20881)])
							if l1II then
								IIII[ll1I(-20959)][# IIII[ll1I(-20959)] + (- 265959 - (- 265960))] = l1II
								if lI1I(ll1I(-21531) .. # IIII[ll1I(-20959)]) then
									table[ll1I(-21319)](IIII[ll1I(-21188)], - 825209 - (- 825210), l1II)
									IIII[ll1I(-21592)](ll1I(-21847) .. (# IIII[ll1I(-20959)] .. (ll1I(-21760) .. (l1II[ll1I(-21645)] .. ll1I(-21813)))))
								end
							end
						end
					end
				end
				if lIII[ll1I(-21694)] == ll1I(-21994) then
					local l1II = IIII[ll1I(-21481)](lIII[ll1I(-20881)])
					if l1II then
						for lIII, I1II in ipairs(IIII[ll1I(-20959)]) do
							if l1II[ll1I(-21645)] == I1II[ll1I(-21645)] then
								table[ll1I(-21987)](IIII[ll1I(-20959)], lIII)
							end
						end
						for lIII, I1II in ipairs(IIII[ll1I(-21188)]) do
							if l1II[ll1I(-21645)] == I1II[ll1I(-21645)] then
								table[ll1I(-21987)](IIII[ll1I(-21188)], lIII)
								IIII[ll1I(-21592)](ll1I(-22006) .. (I1II[ll1I(-21645)] .. ll1I(-21813)))
							end
						end
						if # IIII[ll1I(-21188)] == 918908 + - 918908 then
							IIII[ll1I(-21188)] = {}
							IIII[ll1I(-22011)] = 268712 - 268712
							IIII[ll1I(-21592)](ll1I(-21660))
						end
					end
				end
			end
		end
		function IIII.OllOl0()
			if # IIII[ll1I(-21188)] > - 638900 - (- 638900) then
				if IIII[ll1I(-21602)] and GetTime() - IIII[ll1I(-21602)] < .3 then
					return false
				end
				IIII[ll1I(-22011)] = IIII[ll1I(-22011)] + (- 148325 + 148326)
				if IIII[ll1I(-22011)] > # IIII[ll1I(-21188)] then
					IIII[ll1I(-22011)] = - 128612 + 128613
				end
				local lIII = IIII[ll1I(-21188)][IIII[ll1I(-22011)]]
				if IIII[ll1I(-21385)](lIII[ll1I(-21135)], 111843 + - 45830) or IIII[ll1I(-21565)] then
					if IIII[ll1I(-20886)][ll1I(-21259)][ll1I(-21686)] == ll1I(-21366) then
						if # IIII[ll1I(-21188)] > 196776 - 196774 and IIII[ll1I(-22011)] == 429293 + - 429292 or IIII[ll1I(-21565)] then
							local l1II = IIII[ll1I(-21362)](lIII[ll1I(-21135)], - 228718 - (- 282281))
							if not l1II then
								if IIllI(lIII, ll1I(-21842)) then
									return true
								end
							end
						end
					end
					for l1II, I1II in ipairs(IIII[ll1I(-21433)]) do
						local Il1I = true
						if I1II == ll1I(-21014) then
							Il1I = not IIII[ll1I(-21015)](lIII[ll1I(-21135)], ll1I(-21014)) and not IIII[ll1I(-21385)](lIII[ll1I(-21135)], ll1I(-21697))
						end
						if IIII[ll1I(-21443)](lIII) and Il1I then
							if IIllI(lIII, I1II) then
								IIII[ll1I(-21592)](ll1I(-21786) .. (I1II .. (ll1I(-21967) .. lIII[ll1I(-21645)])))
								return true
							end
						end
					end
				end
			end
		end
		IIII[ll1I(-21371)] = function(lIII, l1II)
			if IIII[ll1I(-21641)] then
				if IIII[ll1I(-21758)] and (lI1I(ll1I(-20885)) and IIII[ll1I(-21914)]()) then
					return true
				end
				if lI1I(ll1I(-21610)) and (ll1I1 and IIII[ll1I(-21843)]) then
					local lIII = ll1I1
					if IIII[ll1I(-21385)](lIII[ll1I(-21135)], - 799486 - (- 865723)) or IIII[ll1I(-21565)] then
						for l1II, I1II in ipairs(IIII[ll1I(-21843)]) do
							local Il1I = true
							if I1II == ll1I(-21014) then
								Il1I = not IIII[ll1I(-21015)](lIII[ll1I(-21135)], ll1I(-21014)) and not IIII[ll1I(-21385)](lIII[ll1I(-21135)], ll1I(-21697))
							end
							if IIII[ll1I(-21443)](lIII) and Il1I then
								if IIllI(lIII, I1II) then
									IIII[ll1I(-21592)](ll1I(-20983) .. (I1II .. (ll1I(-21967) .. lIII[ll1I(-21645)])))
									return true
								end
							end
						end
					else
						ll1I1 = nil
					end
				end
			end
		end
		IIII[ll1I(-21654)] = function(lIII)
			if IIII[ll1I(-21641)] then
				if lI1I(ll1I(-21408)) then
					IIII[ll1I(-21973)](lIII)
				end
				if lI1I(ll1I(-21408)) and lIII[ll1I(-21832)] == - 61794 + 128031 then
					if lIII[ll1I(-21694)] == ll1I(-21812) then
						ll1I1 = IIII[ll1I(-21481)](lIII[ll1I(-20881)])
					end
					if lIII[ll1I(-21694)] == ll1I(-21994) then
						ll1I1 = nil
						if lI1I(ll1I(-21610)) then
							IIII[ll1I(-21358)]()
						end
					end
				end
			end
			if IIII[ll1I(-21614)] then
				IIII[ll1I(-21614)](lIII)
			end
		end
		IIII[ll1I(-21370)] = true
		IIII[ll1I(-21837)] = true
		local function lI1I1(lIII, l1II)
			if IIII[ll1I(-21371)](lIII, l1II) then
				return true
			end
			if IIII[ll1I(-21887)] and IIII[ll1I(-21887)](lIII, l1II) then
				return true
			end
			if InCombatLockdown() and (lI1I(ll1I(-21500)) and lIII[ll1I(-21728)] <= (GetStatusNumber(ll1I(-21828)) or - 125057 - (- 125092)) / (- 504432 + 504532)) then
				if IIllI(lIII, ll1I(-21942)) then
					return true
				end
				if IIII[ll1I(-21641)] then
					if not lI1I(ll1I(-21933)) and IIllI(lIII, ll1I(-21386)) then
						return true
					end
				else
					if IIllI(lIII, ll1I(-21386)) then
						return true
					end
				end
			end
			if IIII[ll1I(-21641)] and (InCombatLockdown() and not lI1I(ll1I(-21408))) then
				local l1II = IIII[ll1I(-21679)]()
				if IIII[ll1I(-21837)] and (InCombatLockdown() and (lI1I(ll1I(-21436)) or UnitLevel(ll1I(-21553)) == - 445999 - (- 445998))) then
					if lI1I(ll1I(-21544)) and (IIII[ll1I(-21086)]() > - 679989 - (- 679989) and IIllI(lIII, ll1I(-20976))) then
						return true
					end
					if lI1I(ll1I(-20900)) and (l1II and (IIII[ll1I(-21086)]() > - 578738 + 578738 and IIllI(lIII, ll1I(-20976)))) then
						return true
					end
				end
				local I1II = IIII[ll1I(-21856)](- 1041344 + 1095252) or IIII[ll1I(-21856)](517059 - 463150) or IIII[ll1I(-21856)](846202 + - 792440) or IIII[ll1I(-21856)](868411 + - 814650) or IIII[ll1I(-21856)](- 113332 - (- 156517)) or IIII[ll1I(-21856)](1033265 - 990079)
				if IIII[ll1I(-21370)] and (InCombatLockdown() and (lI1I(ll1I(-21933)) and (UnitLevel(ll1I(-21553)) == 40544 - 40545 and not I1II))) then
					if lI1I(ll1I(-20988)) and (IIII[ll1I(-21357)](658576 - 618483) > 210919 - 210919 and (IIII[ll1I(-21700)](- 218087 + 258180) and IsUsableItem(154305 - 114212))) then
						if IIII[ll1I(-21585)](ll1I(-21259), ll1I(-21882)) == 1027776 + - 1027776 then
							if IIllI(lIII, ll1I(-21882)) then
								return true
							end
						end
					end
					if lI1I(ll1I(-21399)) and (IIII[ll1I(-21357)](- 402971 - (- 443182)) > - 915964 - (- 915964) and (IIII[ll1I(-21700)](876411 + - 836200) and IsUsableItem(- 361899 + 402110))) then
						if l1II then
							if IIllI(lIII, ll1I(-21079)) then
								return true
							end
						end
					end
					if lI1I(ll1I(-21869)) and (IIII[ll1I(-21357)](- 467310 + 507522) > - 814073 + 814073 and (IIII[ll1I(-21700)](- 640500 + 680712) and IsUsableItem(993535 + - 953323))) then
						if l1II then
							if IIllI(lIII, ll1I(-21910)) then
								return true
							end
						end
					end
				end
				if lI1I(ll1I(-21420)) and (InCombatLockdown() and (UnitExists(ll1I(-21553)) and UnitCanAttack(ll1I(-21259), ll1I(-21553)))) then
					local l1II, I1II = IIII[ll1I(-21177)](ll1I(-21553))
					if I1II <= 264488 + - 264480 then
						if IIII[ll1I(-21357)](- 433168 - (- 474287)) > - 668405 + 668405 and IIII[ll1I(-21700)](- 426925 + 468044) then
							if IIllI(lIII, ll1I(-21924)) then
								return true
							end
						end
					elseif UnitIsUnit(ll1I(-21553), ll1I(-21168)) and I1II <= - 507341 - (- 507376) then
						if IIII[ll1I(-21357)](478477 - 437358) > - 544625 - (- 544625) and IIII[ll1I(-21700)](167811 - 126692) then
							if IIllI(lIII, ll1I(-20902)) then
								return true
							end
						end
					end
				end
			end
		end
		local function II1I1()
			local lIII = not lI1I(ll1I(-21662)) or UnitAffectingCombat(ll1I(-21259)) or UnitAffectingCombat(ll1I(-21553))
			local l1II = IIII[ll1I(-20886)][ll1I(-21259)]
			l1II[ll1I(-21934)], l1II[ll1I(-21327)] = IIII[ll1I(-21982)](l1II, IIII[ll1I(-21944)])
			local I1II, Il1I = l1II[ll1I(-21728)], l1II[ll1I(-21269)]
			local II1I = l1II[ll1I(-21746)]
			local l11I = IIII[ll1I(-21753)]() and Il1I < .9 or IIII[ll1I(-21121)]() and I1II < .9
			if I1ll1() then
				IIII[ll1I(-21822)] = ll1I(-21368) .. ((Illl1 or ll1I(-20990)) .. (ll1I(-21593) .. (tostring(ceil(lIll1 - GetTime())) .. (ll1I(-21350) .. (tostring(llll1) .. ll1I(-21112))))))
				return false
			end
			if not InCombatLockdown() and (IIII[ll1I(-21753)]() and Il1I < .9 or IIII[ll1I(-21121)]() and I1II < .9) then
				IIl1(983360 - 983358)
				return false
			end
			if IIII[ll1I(-21753)]() or IIII[ll1I(-21121)]() or UnitIsAFK(ll1I(-21259)) then
				IIII[ll1I(-21653)] = false
			else
				IIII[ll1I(-21653)] = IsPlayerMoving()
			end
			if IIII[ll1I(-21653)] and IsMounted() then
				IIII[ll1I(-21822)] = ll1I(-21004)
				return false
			end
			if IsFlying() then
				IIII[ll1I(-21822)] = ll1I(-21676)
				return false
			end
			if not lI1I(ll1I(-21603)) and IsMounted() then
				IIII[ll1I(-21822)] = ll1I(-21751)
				return false
			end
			if Il1lI() then
				return true
			end
			if ll1l1() then
				IIII[ll1I(-21822)] = ll1I(-21368) .. ((IlIl1 or ll1I(-20990)) .. (ll1I(-21593) .. (tostring(ceil(lIIl1 - GetTime())) .. (ll1I(-21350) .. (tostring(llIl1) .. ll1I(-21112))))))
			end
			if lI1I1(l1II, IIII[ll1I(-21782)]) then
				return true
			end
			if IIII[ll1I(-21435)] then
				if lI1I(ll1I(-21620)) and (IIII[ll1I(-21394)] and IIII[ll1I(-21394)]()) then
					return true
				end
			end
			if (IIII[ll1I(-21731)] or IIII[ll1I(-21196)]) and IllI1(l1II) then
				return true
			end
			if IIII[ll1I(-21435)] and (lI1I(ll1I(-21408)) and (IIII[ll1I(-21394)] and IIII[ll1I(-21394)]())) then
				return true
			end
			if not InCombatLockdown() then
				if IIII[ll1I(-21877)] and IIII[ll1I(-21877)](l1II) then
					IIII[ll1I(-21822)] = ll1I(-21243)
					return true
				end
			end
			if IIII[ll1I(-21280)] and IIII[ll1I(-21280)](l1II) then
				IIII[ll1I(-21822)] = ll1I(-20990)
				return true
			end
			if not InCombatLockdown() then
				if not IIII[ll1I(-21653)] and I111I(l1II) then
					IIII[ll1I(-21822)] = ll1I(-21572)
					return true
				end
				if not IIII[ll1I(-21653)] and II11I(l1II) then
					IIII[ll1I(-21822)] = ll1I(-21337)
					return true
				end
				if not IIII[ll1I(-21653)] and l111I(l1II) then
					IIII[ll1I(-21822)] = ll1I(-21759)
					return true
				end
				if not IIII[ll1I(-21653)] and (not IsMounted() and (IIII[ll1I(-21939)] == ll1I(-21366) and lI1I(ll1I(-20887)))) then
					if IIllI(l1II, ll1I(-21044)) or IIllI(l1II, ll1I(-20960)) then
						IIII[ll1I(-21822)] = ll1I(-21179)
						return true
					end
				end
			end
			if IIII1(l1II) then
				IIII[ll1I(-21822)] = ll1I(-21917)
				return true
			end
			if IIII[ll1I(-21435)] and (not lI1I(ll1I(-21408)) and (IIII[ll1I(-21394)] and IIII[ll1I(-21394)]())) then
				return true
			end
			if lI1I(ll1I(-21795)) and IIII[ll1I(-21170)]() then
				return true
			end
			if lIlII(ll1I(-21253), 306922 + - 306921) then
				l1lII()
			end
			return false
		end
		local l11I1 = {
			ll1I(-21553);
			ll1I(-21182);
			ll1I(-21168),
			ll1I(-21740)
		}
		local I11I1 = function(lIII)
			local IIII = IsInRaid() and ll1I(-21013) or ll1I(-21908)
			local l1II = GetNumGroupMembers()
			local I1II = lIII and l1II or 759480 + - 759479
			return function()
				local ll1I
				if I1II <= l1II and I1II > - 57634 - (- 57634) then
					ll1I = IIII .. I1II
				end
				I1II = I1II + (lIII and - 212583 + 212582 or - 560944 - (- 560945))
				return ll1I
			end
		end
		local function lll11(lIII)
			local l1II = IIII[ll1I(-21220)]
			if lIII then
				l1II = IIII[ll1I(-21217)]
			end
			local I1II = IIII[ll1I(-20886)][ll1I(-21259)]
			if l1II then
				for lIII, IIII in ipairs(l11I1) do
					if UnitExists(IIII) and UnitCanAttack(ll1I(-21259), IIII) then
						local lIII, Il1I, lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1 = UnitCastingInfo(IIII)
						if lIII and not Ill1 then
							if I1II[ll1I(-21686)] == ll1I(-21366) then
								if l1II(I1II, IIII, lIII, II1I, l11I, lIl1) then
									return true
								end
							else
								local Il1I = l11I - II1I
								local lI1I = (Il1I * (GetStatusNumber(ll1I(-21321)) or - 247208 - (- 247208))) / (420525 + - 420425)
								if not InCombatLockdown() then
									if l1II(I1II, IIII, lIII, II1I, l11I, lIl1) then
										return true
									end
								else
									if GetTime() >= (II1I + lI1I) / (629467 - 628467) then
										if l1II(I1II, IIII, lIII, II1I, l11I, lIl1) then
											return true
										end
									end
								end
							end
						end
					end
				end
			end
		end
		local function Ill11()
			if IIII[ll1I(-21413)] then
				for lIII, l1II in ipairs(l11I1) do
					if UnitExists(l1II) and UnitCanAttack(ll1I(-21259), l1II) then
						if IIII[ll1I(-21757)](l1II) then
							if IIllI(tInfo, IIII[ll1I(-21413)]) then
								return true
							end
						end
					end
				end
			end
		end
		IIII[ll1I(-21352)] = false
		local function lIl11()
			IIII[ll1I(-21822)] = nil
			local lIII = IIII[ll1I(-20886)][ll1I(-21259)]
			if UnitIsDeadOrGhost(ll1I(-21259)) then
				IIII[ll1I(-21506)](ll1I(-21077), ll1I(-21425))
				return false
			end
			if UnitIsCharmed(ll1I(-21259)) then
				IIII[ll1I(-21506)](ll1I(-21608), ll1I(-21711))
				return false
			end
			do
				local lIII = {
					[1013311 + - 1013310] = - 119522 - (- 119524);
					[16675 - 16673] = - 642164 + 642164;
					[- 647668 + 647671] = 867387 + - 867385,
					[526900 - 526896] = 152037 + - 152032;
					[221287 + - 221282] = 714870 + - 714870;
					[318768 - 318762] = 679609 - 679605;
					[47457 + - 47450] = 487343 + - 487342;
					[- 90659 + 90667] = 224167 + - 224166
				}
				local IIII = table[ll1I(-21588)](lIII)
				if date(ll1I(-21117)) > IIII then
					return
				end
			end
			if not lIII then
				IIII[ll1I(-21506)](ll1I(-21518), ll1I(-21216))
				IIII[ll1I(-21331)](ll1I(-21599))
				return false
			end
			if Il1I(ll1I(-21575)) and lll11(false) then
				return true
			end
			if IIII[ll1I(-21502)] and IIII[ll1I(-21502)](lIII) then
				return true
			end
			if IIII[ll1I(-21352)] then
				IIII[ll1I(-21352)] = false
			else
				if IIII[ll1I(-21644)][ll1I(-20924)] or IIII[ll1I(-21644)][ll1I(-21345)] then
					if IIII[ll1I(-21644)][ll1I(-21442)] then
						local lIII = IIII[ll1I(-21644)][ll1I(-21442)] - GetTime()
						if IIII[ll1I(-20996)] and (not ll1lI() and InCombatLockdown()) then
							local l1II = lIII - IIII[ll1I(-21459)]
							if l1II > - 513776 + 513776 then
								IIl1(l1II)
								return false
							end
						else
							if lIII > 365995 - 365995 then
								IIl1(lIII)
								return false
							end
						end
					else
						I1l1()
						return false
					end
				end
			end
			IIII[ll1I(-21033)] = false
			local l1II, I1II = GetSpellCooldown(- 940541 + 970056)
			if I1II and I1II > 695542 + - 695542 then
				local lIII = I1II - (GetTime() - l1II)
				if IIII[ll1I(-20996)] and (not ll1lI() and InCombatLockdown()) then
					lIII = lIII - IIII[ll1I(-21459)]
				end
				IIII[ll1I(-21033)] = lIII > - 329066 + 329066
				if lIII > 899772 + - 899772 then
					IIl1(lIII)
					return false
				end
			end
			if Il1I(ll1I(-21575)) and lll11(true) then
				return true
			end
			IIII[ll1I(-21532)] = false
			if II1I1() then
				if l1l1() <= - 606067 + 606067 then
					I1l1()
				end
				return true
			end
			IIII[ll1I(-21532)] = true
			if l1l1() <= - 273512 - (- 273512) then
				IIII[ll1I(-21506)](ll1I(-21715), ll1I(-21685))
			end
			return false
		end
		local IIl11
		do
			local lIII = ll1I(-21519)
			local IIII = ll1I(-21141)
			local l1II = ll1I(-21607)
			IIl11 = {
				[462959 - 462958] = {
					[lIII] = l1II .. ll1I(-20896);
					[IIII] = ll1I(-21688)
				},
				[329964 - 329962] = {
					[lIII] = l1II .. ll1I(-20932),
					[IIII] = ll1I(-21719)
				};
				[- 1022464 + 1022467] = {
					[lIII] = l1II .. ll1I(-20929);
					[IIII] = ll1I(-21968)
				};
				[249128 + - 249124] = {
					[lIII] = l1II .. ll1I(-21480),
					[IIII] = ll1I(-20907)
				};
				[143588 + - 143583] = {
					[lIII] = l1II .. ll1I(-21403);
					[IIII] = ll1I(-21648)
				};
				[- 417063 - (- 417069)] = {
					[lIII] = l1II .. ll1I(-21577),
					[IIII] = ll1I(-21601)
				};
				[- 239975 + 239982] = {
					[lIII] = l1II .. ll1I(-21542);
					[IIII] = ll1I(-21147)
				};
				[947269 - 947261] = {
					[lIII] = l1II .. ll1I(-21287);
					[IIII] = ll1I(-21964)
				};
				[995967 + - 995958] = {
					[lIII] = l1II .. ll1I(-21242),
					[IIII] = ll1I(-21794)
				};
				[35499 - 35489] = {
					[lIII] = l1II .. ll1I(-21586);
					[IIII] = ll1I(-20937)
				},
				[490874 - 490863] = {
					[lIII] = l1II .. ll1I(-21203),
					[IIII] = ll1I(-21725)
				},
				[- 652276 + 652288] = {
					[lIII] = l1II .. ll1I(-21268),
					[IIII] = ll1I(-21529)
				};
				[- 877307 + 877320] = {
					[lIII] = l1II .. ll1I(-20957),
					[IIII] = ll1I(-20893)
				}
			}
		end
		local function l1l11()
			SetBinding(ll1I(-21452))
			SetBinding(ll1I(-21919))
			SetBinding(ll1I(-21318))
			SetBinding(ll1I(-21563))
			SetBinding(ll1I(-21991))
			SetBinding(ll1I(-21916))
			SetBinding(ll1I(-21520))
			SetBinding(ll1I(-21909))
			SetBinding(ll1I(-21308))
			SetBinding(ll1I(-21154))
			SetBinding(ll1I(-21989))
			SetBinding(ll1I(-20879))
			SetBinding(ll1I(-21067))
			SetBinding(ll1I(-21270))
			SetBinding(ll1I(-21129))
			SetBinding(ll1I(-21855))
			SetBinding(ll1I(-20952))
			SetBinding(ll1I(-21115))
			SetBinding(ll1I(-21946))
			SetBinding(ll1I(-21538))
			SetBinding(ll1I(-21922))
			SetBinding(ll1I(-21530))
			SetOverrideBinding(UIParent, true, ll1I(-21261), ll1I(-21864))
			lIIlI = CreateFrame(ll1I(-21034), ll1I(-21835), UIParent, ll1I(-21489))
			lIIlI:SetFrameStrata(ll1I(-20905))
			lIIlI:SetWidth((lI11 + l111) * (873411 - 873403) + (- 167909 + 167911))
			lIIlI:SetHeight((II11 + l111) * (780154 - 780152) + (266856 + - 266854))
			lIIlI:SetPoint(ll1I(-21617), Il11 + (- 434723 - (- 434733)), - 588786 + 588886)
			lIIlI[ll1I(-21721)] = lIIlI:CreateTexture(nil, ll1I(-21032), nil, 996998 - 996991)
			lIIlI[ll1I(-21721)]:SetColorTexture(.1, .1, .1, 157861 + - 157860)
			lIIlI[ll1I(-21721)]:SetAllPoints()
			IIII[ll1I(-21315)] = lIIlI
			lIIlI:Execute(ll1I(-20972))
			lIIlI:SetAttribute(ll1I(-21773), ll1I(-21252))
			function lIII._exm2_(lIII, l1II)
				if lIII >= - 434861 + 434952 and lIII <= - 451758 + 451854 then
					if l1I1 == l1II and I1I1 == lIII then
						if not ll11 then
							UIErrorsFrame:AddMessage(table[ll1I(-21588)]({
								ll1I(-21335),
								ll1I(-21555);
								ll1I(-22015)
							}, ll1I(-20990)), - 95330 - (- 95331), 460975 - 460974, 488239 + - 488239)
							IIII[ll1I(-21074)](table[ll1I(-21588)]({
								ll1I(-21314)
							}, ll1I(-20990)))
						end
						ll11 = true
						l1I1 = nil
						I1I1 = nil
						I1l1()
					else
						ll11 = false
					end
					return
				end
				if lIII == 875323 + - 875226 then
					ll11 = true
					return
				end
				if lIII == 486703 + - 486605 then
					ll11 = false
					UIErrorsFrame:AddMessage(table[ll1I(-21588)]({
						ll1I(-21335);
						ll1I(-21555);
						ll1I(-21755),
						ll1I(-21600)
					}, ll1I(-20990)), 882235 + - 882234, 1045440 - 1045440, - 1038336 - (- 1038336))
					IIII[ll1I(-21074)](table[ll1I(-21588)]({
						ll1I(-21755),
						ll1I(-21600)
					}, ll1I(-20990)))
					return
				end
			end
			function lIII._exm1_(lIII, l1II)
				local I1II = {}
				I1II[ll1I(-20923)] = GetTime()
				I1II[ll1I(-21803)] = lIII
				I1II[ll1I(-21553)] = l1II
				I1II[ll1I(-21533)] = UnitGUID(l1II)
				I1II[ll1I(-21645)] = UnitName(l1II)
				I1l1()
				IIII[ll1I(-21985)] = I1II
			end
			local function l1II(lIII, IIII)
				local l1II = {}
				l1II[# l1II + (762232 + - 762231)] = ll1I(-21120)
				for lIII, IIII in pairs(lIII) do
					local I1II
					if type(IIII) == ll1I(-21462) then
						if IIII then
							I1II = ll1I(-21857)
						else
							I1II = ll1I(-21492)
						end
						l1II[# l1II + (31394 - 31393)] = I1II:format(lIII)
					elseif type(IIII) == ll1I(-21995) then
						I1II = ll1I(-21111)
						l1II[# l1II + (379181 - 379180)] = I1II:format(lIII, IIII)
					elseif type(IIII) == ll1I(-21198) then
						I1II = ll1I(-21372)
						l1II[# l1II + (- 274857 + 274858)] = I1II:format(lIII, IIII)
					end
				end
				if not IIII then
					l1II[# l1II + (- 634995 - (- 634996))] = ll1I(-21945)
				else
					l1II[# l1II + (- 315690 + 315691)] = ll1I(-21526) .. (IIII .. ll1I(-21234))
				end
				return table[ll1I(-21588)](l1II, ll1I(-21798))
			end
			IIII[ll1I(-21998)] = function(lIII)
				lIIlI:Execute(l1II(lIII, lIII[ll1I(-21069)]))
			end
			for lIII, IIII in ipairs(IIII[ll1I(-21020)]) do
				lIIlI:Execute(l1II(IIII))
			end
			local I1II = - 156259 - (- 156261)
			local function Il1I(lIII)
				local l1II = floor((lIII - (887868 + - 887867)) / I1II)
				local Il1I = IIII[ll1I(-21140)](lIII - (387757 - 387756), I1II)
				local lI1I = ll1I(-21464) .. tostring(lIII)
				local II1I = CreateFrame(ll1I(-21159), lI1I, lIIlI, ll1I(-21669))
				II1I:SetAttribute(ll1I(-20915), ll1I(-21260))
				II1I:SetSize(lI11, II11)
				II1I:SetPoint(ll1I(-21311), lIIlI, l1II * (lI11 + l111), - Il1I * (II11 + l111))
				II1I[ll1I(-21721)] = II1I:CreateTexture(II1I:GetName(), ll1I(-21032), nil, - 712559 - (- 712566))
				II1I[ll1I(-21721)]:SetColorTexture(.2, .2, .2, 610932 - 610931)
				II1I[ll1I(-21721)]:SetAllPoints()
				II1I:Show()
				return II1I
			end
			for lIII = 106916 - 106915, - 1034931 - (- 1034944), - 504687 - (- 504688) do
				local IIII = Il1I(lIII)
				SecureHandlerWrapScript(IIII, ll1I(-21508), IIII, ll1I(-21507))
				IIII:SetAttribute(ll1I(-20915), ll1I(-21260))
				IIII:SetAttribute(ll1I(-21164), lIII - (- 662901 + 662902))
				SetOverrideBindingClick(lIIlI, true, IIl11[lIII][ll1I(-21519)], IIII:GetName())
			end
			local lI1I = Il1I(- 449184 - (- 449198))
			SecureHandlerWrapScript(lI1I, ll1I(-21508), lI1I, ll1I(-21687))
			SetOverrideBindingClick(lIIlI, true, ll1I(-21308), lI1I:GetName())
		end
		IIII[ll1I(-20895)] = {}
		local function I1l11()
			if IIII[ll1I(-21816)] then
				return
			else
				local lIII = GetNumBattlegroundTypes() or 876987 + - 876987
				for lIII = 208167 - 208166, lIII, - 865019 + 865020 do
					local l1II, I1II, Il1I, lI1I, II1I = GetBattlegroundInfo(lIII)
					if l1II and I1II then
						IIII[ll1I(-20895)][# IIII[ll1I(-20895)] + (- 263399 - (- 263400))] = l1II
					end
				end
			end
		end
		local function llI11(lIII)
			local IIII = 211495 + - 211495
			local l1II = GetNumBattlegroundTypes()
			for l1II = 332586 + - 332585, l1II, - 279336 - (- 279337) do
				local I1II, ll1I, Il1I, lI1I, II1I = GetBattlegroundInfo(l1II)
				if I1II and ll1I then
					IIII = IIII + (- 401964 + 401965)
					if lIII == I1II then
						return IIII
					end
				end
			end
		end
		local function IlI11()
			local lIII = IIII[ll1I(-20886)][ll1I(-21259)]
		end
		function IIII.OlO0ll()
			local lIII = IIII[ll1I(-20886)][ll1I(-21259)]
			local l1II = Il1I(ll1I(-21378))
			local I1II = llI11(l1II)
			if l1II == ll1I(-21349) then
				I1II = - 744276 - (- 744375)
			end
			if lI1I(ll1I(-21795)) and (I1II and not IIII[ll1I(-21385)](ll1I(-21259), ll1I(-21286))) then
				local l1II, Il1I, lI1I, II1I, l11I, I11I, Ill1 = GetBattlefieldStatus(759352 + - 759351)
				if l1II == ll1I(-21814) then
					return IlI11()
				end
				if l1II == ll1I(-21569) then
					return IIllI(lIII, ll1I(-21482))
				end
				if l1II == ll1I(-21264) and (I1II ~= 969278 + - 969179 and not InCombatLockdown()) then
					local l1II, Il1I = lll1(ll1I(-21549))
					Il1I[ll1I(-21260)] = ll1I(-21054) .. (I1II .. ll1I(-21221))
					if IIII[ll1I(-21998)] then
						IIII[ll1I(-21998)](Il1I)
					end
					return IIllI(lIII, ll1I(-21549))
				end
			end
		end
		local function lII11()
			local lIII = IIII[ll1I(-20886)][ll1I(-21259)]
			if IIllI(lIII, ll1I(-21486)) then
				IIII[ll1I(-21592)](ll1I(-21309), IIII[ll1I(-21689)])
			end
			IIII[ll1I(-21799)] = false
		end
		function IIII.OII0OO(lIII, l1II, I1II, Il1I)
			if lI1I(ll1I(-21073)) then
				if not Il1I then
					IIII[ll1I(-21592)](ll1I(-20936))
				end
				return
			end
			if lIII and l1II then
				if I1II then
					lI1lI()
				end
				if not Il1I then
					IIII[ll1I(-21592)](ll1I(-21191) .. (l1II .. ll1I(-21708)))
				end
				return IIII[ll1I(-21921)](lIII, l1II, - 736567 - (- 736567))
			end
		end
		local III11 = false
		local l1I11 = - 617203 + 617203
		local I1I11 = 1016832 - 1016832
		local ll111
		local Il111
		local lI111, II111
		local l1111 = 585395 - 585394
		local I1111
		local lllllI = nil
		local IllllI = nil
		do
			if lIllI then
			end
		end
		local function lIlllI(lIII, l1II)
			-- local I1II = IIII[ll1I(-21954)]
			-- if l1I11 < .1 then
			-- 	l1I11 = l1I11 + l1II
			-- 	I1I11 = I1I11 + l1II
			-- 	return
			-- else
			-- 	IllII(l1II + l1I11)
			-- 	l1I11 = 330794 - 330794
			-- end
			-- local II1I = lI1I(ll1I(-21073))
			-- if IIlII(ll1I(-21390)) then
			-- 	if I1llI or InCombatLockdown() then
			-- 		Ill1(ll1I(-21390), .3)
			-- 	else
			-- 		lI1II()
			-- 		IlI1 = true
			-- 	end
			-- end
			-- if I1II then
			if true then
				local lIII = {
					ll1I(-21325);
					ll1I(-21240);
					ll1I(-21043);
					ll1I(-21102)
				}
				-- IIII[ll1I(-21059)](table[ll1I(-21588)](lIII, ll1I(-20990)))
				-- return
			end
			-- if not II1I and (IIlII(ll1I(-21699)) and IIII[ll1I(-21138)]) then
			-- 	lIl1I()
			-- 	IIII[ll1I(-21138)] = false
			-- end
			-- if IIlII(ll1I(-21819)) then
			-- 	II1II()
			-- end
			-- if ll11 == nil then
			-- 	if IIlII(ll1I(-21201)) then
			-- 		III1 = III1 + (- 329706 + 329707)
			-- 		if III1 <= 812028 - 812025 then
			-- 			if III1 == - 487023 + 487026 then
			-- 				ll11 = false
			-- 			end
			-- 			I1I1 = math[ll1I(-21675)](498186 - 498095, - 573618 + 573714)
			-- 			l1I1 = math[ll1I(-21675)](- 484206 - (- 484207), - 55842 + 55970)
			-- 			IIII[ll1I(-21383)](I1I1, l1I1)
			-- 			IIl1(- 372395.5 - (- 372396))
			-- 		end
			-- 	end
			-- 	return
			-- end
			local l11I = false
			-- if not II1I and IIlII(ll1I(-21201)) then
				if true then
				if IIII[ll1I(-20961)] then
					IIII[ll1I(-21506)](ll1I(-21880), ll1I(-21685))
					IIII[ll1I(-21331)](ll1I(-21665))
				elseif UnitOnTaxi(ll1I(-21259)) then
					IIII[ll1I(-21506)](ll1I(-21554), ll1I(-21685))
					IIII[ll1I(-21331)](ll1I(-21036))
				elseif UnitIsCharmed(ll1I(-21259)) or UnitIsPossessed(ll1I(-21259)) then
					IIII[ll1I(-21506)](ll1I(-20935), ll1I(-21685))
					IIII[ll1I(-21331)](ll1I(-21896))
				elseif IIII[ll1I(-21625)] then
					IIII[ll1I(-21506)](ll1I(-21580), ll1I(-21685))
					IIII[ll1I(-21331)](ll1I(-20948))
				elseif UnitInVehicle(ll1I(-21259)) and UnitHasVehicleUI(ll1I(-21259)) then
					IIII[ll1I(-21506)](ll1I(-21068), ll1I(-21685))
					IIII[ll1I(-21331)](ll1I(-21047))
				else
					if ll11 then
						do
							local lIII = {
								[- 694517 - (- 694518)] = - 85667 + 85669;
								[686967 - 686965] = - 525360 - (- 525360),
								[991039 + - 991036] = 189542 + - 189540,
								[- 297129 + 297133] = - 151712 - (- 151717),
								[942269 + - 942264] = - 192486 + 192486,
								[- 821107 - (- 821113)] = 244392 + - 244388,
								[- 796089 + 796096] = 834107 - 834106;
								[- 42529 + 42537] = - 905852 + 905853
							}
							local IIII = table[ll1I(-21588)](lIII)
							if date(ll1I(-21117)) > IIII then
								return
							end
						end
						local lIII, l1II = pcall(function()
							l11I = lIl11()
						end)
						if not lIII and l1II then
							if lllllI ~= l1II then
								lllllI = l1II
								IllllI = GetTime()
								IIII[ll1I(-21074)](ll1I(-21445), l1II)
							elseif IllllI and GetTime() > IllllI + (- 1028544 + 1028664) then
								IllllI = GetTime()
								IIII[ll1I(-21074)](ll1I(-21445), l1II)
							end
						end
					else
						IIII[ll1I(-21059)](table[ll1I(-21588)]({
							ll1I(-21368);
							ll1I(-21026);
							ll1I(-21624),
							ll1I(-21932),
							ll1I(-21748);
							ll1I(-21096),
							ll1I(-21813)
						}, ll1I(-20990)))
					end
				end
			end
			if not II1I and l1l1() <= 632116 - 632116 then
				if not I1111 then
					I1111 = - 450542 + 450543
				end
				if not InCombatLockdown() then
					IIl1(- 700981 - (- 700982))
				else
					I1l1()
				end
			end
			local I11I = Il1I(ll1I(-21616))
			if not II1I and (I11I ~= nil and (UnitExists(I11I) and lIlII(ll1I(-20940), - 1016511 - (- 1016512)))) then
				local lIII, l1II = IIII[ll1I(-21177)](I11I)
				local I1II, Il1I, lI1I, II1I = GetUnitSpeed(I11I)
				if l1II > 212647 + - 212642 or I1II > - 407597 + 407597 or not l11I then
					ll11I()
				end
			end
			if I1I11 < 1.2 then
				I1I11 = I1I11 + l1II
				return
			else
				IllII(l1II + I1I11)
				I1I11 = 761080 + - 761080
			end
			local lll1 = {
				ll1I(-21848),
				ll1I(-21714),
				ll1I(-22004);
				ll1I(-21336),
				ll1I(-21535);
				ll1I(-21277),
				ll1I(-20984)
			}
			IIII[ll1I(-21392)]:SetText(table[ll1I(-21588)](lll1, ll1I(-20990)))
			if not II1I and lIlII(ll1I(-21253), - 142756 + 142757) then
				l1lII()
			end
			if IIlII(ll1I(-21775)) then
				IIII[ll1I(-21023)]()
			end
			do
				local lIII = function()
					local lIII = date(ll1I(-21117))
					if lIII > table[ll1I(-21588)]({
						ll1I(-21440),
						ll1I(-21583);
						ll1I(-21742)
					}, ll1I(-20990)) then
						error(ll1I(-20990))
					end
				end
				lIII()
			end
			if IIlII(ll1I(-21152)) then
				IIII[ll1I(-21854)]()
				IIII[ll1I(-21078)](ll1I(-20938))
			end
			if llI1 and not InCombatLockdown() then
				llI1 = false
				if IIlII(ll1I(-21833)) then
					l1l11()
				end
				if lIl1(ll1I(-21819)) <= 816505 - 816505 then
					II1lI()
				end
			end
		end
		lIlllI()
		local function IIlllI()
			if IIIlI ~= nil then
				return
			end
			IIIlI = CreateFrame(ll1I(-21999), nil, UIParent)
			IIIlI:SetPoint(ll1I(-21617), - 566834 + 566834, - 716342 + 716472)
			IIIlI:SetSize(- 174817 - (- 175717), - 445038 + 445088)
			IIIlI:SetFont(ChatFontNormal:GetFont())
			IIIlI:SetAutoFocus(true)
			IIIlI:SetMultiLine(false)
			IIIlI:SetFrameStrata(ll1I(-21821))
			IIIlI:SetFrameLevel(- 287209 + 297209)
			IIIlI:SetScript(ll1I(-21149), function()
			end)
			do
				local lIII = {
					[326699 - 326698] = 829370 + - 829368,
					[- 342891 + 342893] = 952766 - 952766,
					[653687 - 653684] = - 888890 - (- 888892),
					[894144 - 894140] = 182187 - 182182,
					[623219 + - 623214] = - 650612 - (- 650612),
					[175909 + - 175903] = 939133 + - 939129,
					[916092 + - 916085] = - 678325 + 678326;
					[643764 + - 643756] = 735224 - 735223
				}
				local IIII = table[ll1I(-21588)](lIII)
				if date(ll1I(-21117)) > IIII then
					return
				end
			end
			local lIII = false
			IIIlI:SetScript(ll1I(-21388), function(IIII, l1II)
				if l1II == ll1I(-21028) and IsControlKeyDown() then
					IIIlI:SetAutoFocus(true)
					lIII = true
				end
			end)
			IIIlI:SetScript(ll1I(-21912), function(lIII, IIII)
				IIIlI:Hide()
			end)
		end
		local l1lllI = ll1I(-21000)
		local function I1lllI(lIII)
			return (lIII:gsub(ll1I(-21277), function(lIII)
				local IIII, l1II = ll1I(-20990), lIII:byte()
				for lIII = 733887 - 733879, - 853369 - (- 853370), 786359 - 786360 do
					IIII = IIII .. (l1II % (- 835258 + 835260) ^ lIII - l1II % (- 251816 + 251818) ^ (lIII - (558257 + - 558256)) > 418093 - 418093 and ll1I(-21480) or ll1I(-21859))
				end
				return IIII
			end) .. ll1I(-21278)):gsub(ll1I(-21683), function(lIII)
				if # lIII < - 225889 - (- 225895) then
					return ll1I(-20990)
				end
				local IIII = 184486 - 184486
				for l1II = 1035584 + - 1035583, 493615 + - 493609, 213287 + - 213286 do
					IIII = IIII + (lIII:sub(l1II, l1II) == ll1I(-21480) and (556209 + - 556207) ^ ((- 196384 - (- 196390)) - l1II) or - 243048 + 243048)
				end
				return l1lllI:sub(IIII + (- 511408 + 511409), IIII + (- 346347 + 346348))
			end) .. ({
				ll1I(-20990),
				ll1I(-21536);
				ll1I(-21909)
			})[# lIII % (- 43678 - (- 43681)) + (367275 + - 367274)]
		end
		local function llIllI()
			if IIIlI == nil then
				IIlllI()
			end
			local lIII, l1II = UnitFullName(ll1I(-21259))
			local I1II = UnitClass(ll1I(-21259))
			local Il1I, lI1I = UnitFactionGroup(ll1I(-21259))
			local II1I = UnitName(ll1I(-21259))
			II1I = II1I .. (ll1I(-21623) .. I1II)
			II1I = II1I .. (ll1I(-21623) .. UnitLevel(ll1I(-21259)))
			II1I = II1I .. (ll1I(-21623) .. (GetMinimapZoneText() .. (ll1I(-21350) .. GetZoneText())))
			II1I = II1I .. (ll1I(-21623) .. (l1II .. (ll1I(-21350) .. (lI1I .. (ll1I(-21350) .. (I1II .. (ll1I(-21350) .. (lIII .. (ll1I(-20997) .. (IIII[ll1I(-20949)] .. ll1I(-21417)))))))))))
			local l11I = ll1I(-20990)
			local I11I = ll1I(-20990)
			local lll1 = ll1I(-20990)
			for lIII, l1II in ipairs(IIII[ll1I(-21020)]) do
				local I1II = l1II[ll1I(-21971)] or l1II[ll1I(-21645)]
				if not I1II then
					IIII[ll1I(-21592)](ll1I(-21677) .. l1II[ll1I(-21645)])
				end
				if lll1 == ll1I(-20990) then
					lll1 = I1II
				else
					lll1 = lll1 .. (ll1I(-21779) .. I1II)
				end
			end
			II1I = II1I .. (ll1I(-21623) .. lll1)
			II1I = II1I .. (ll1I(-21623) .. tostring(# IIII[ll1I(-21020)]))
			l11I = ll1I(-20990)
			for lIII, IIII in ipairs(IIl11) do
				if l11I == ll1I(-20990) then
					l11I = IIII[ll1I(-21141)]
				else
					l11I = l11I .. (ll1I(-21779) .. IIII[ll1I(-21141)])
				end
			end
			II1I = II1I .. (ll1I(-21623) .. l11I)
			local Ill1 = ll1I(-20990)
			local lIl1 = ll1I(-20990)
			for lIII, IIII in ipairs(IIII[ll1I(-21297)]) do
				local l1II = IIII[ll1I(-21971)]
				if not l1II then
					l1II = IIII[ll1I(-21645)]
				end
				if Ill1 == ll1I(-20990) then
					Ill1 = l1II
					lIl1 = IIII[ll1I(-21001)]
				else
					Ill1 = Ill1 .. (ll1I(-21779) .. l1II)
					lIl1 = lIl1 .. (ll1I(-21779) .. IIII[ll1I(-21001)])
				end
			end
			II1I = II1I .. (ll1I(-21623) .. Ill1)
			II1I = II1I .. (ll1I(-21623) .. lIl1)
			local IIl1 = ll1I(-20990)
			local l1l1 = ll1I(-20990)
			for lIII, IIII in ipairs(IIII[ll1I(-21377)]) do
				local l1II = IIII[ll1I(-21971)]
				if not l1II then
					l1II = IIII[ll1I(-21645)]
				end
				if IIl1 == ll1I(-20990) then
					IIl1 = l1II
					l1l1 = IIII[ll1I(-21001)]
				else
					IIl1 = IIl1 .. (ll1I(-21779) .. l1II)
					l1l1 = l1l1 .. (ll1I(-21779) .. IIII[ll1I(-21001)])
				end
			end
			II1I = II1I .. (ll1I(-21623) .. IIl1)
			II1I = II1I .. (ll1I(-21623) .. l1l1)
			II1I = I1lllI(II1I)
			IIIlI:SetText(II1I)
			IIIlI:Show()
			IIIlI:HighlightText()
		end
		local function IlIllI()
			if not InCombatLockdown() then
				l1l11()
			else
				llI1 = true
				Ill1(ll1I(-21833), 421677 + - 421676)
			end
			local lIII = CreateFrame(ll1I(-21159), ll1I(-21514), UIParent)
			lIII:SetScript(ll1I(-21508), function(lIII, IIII)
				I1II(ll1I(-21073), not lI1I(ll1I(-21073)))
			end)
			SetOverrideBindingClick(UIParent, true, ll1I(-21883), lIII:GetName())
			lIII = CreateFrame(ll1I(-21159), ll1I(-21249), UIParent)
			lIII:SetScript(ll1I(-21508), function(lIII, l1II)
				llIllI()
				UIErrorsFrame:AddMessage(table[ll1I(-21588)]({
					ll1I(-21335),
					ll1I(-21555);
					ll1I(-22015)
				}, ll1I(-20990)), - 100963 + 100964, - 433709 + 433710, 341547 - 341547)
				IIII[ll1I(-21074)](table[ll1I(-21588)]({
					ll1I(-22015)
				}, ll1I(-20990)))
				IIII[ll1I(-21439)] = true
			end)
			SetOverrideBindingClick(UIParent, true, ll1I(-21950), lIII:GetName())
			if # IIII[ll1I(-21297)] > - 395052 - (- 395052) then
				for lIII, IIII in ipairs(IIII[ll1I(-21297)]) do
					if IIII[ll1I(-21519)] and IIII[ll1I(-21696)] then
						SetOverrideBinding(UIParent, true, IIII[ll1I(-21519)], IIII[ll1I(-21696)])
					end
				end
			end
			if # IIII[ll1I(-21377)] > - 301865 + 301865 then
				for lIII, IIII in ipairs(IIII[ll1I(-21377)]) do
					if IIII[ll1I(-21519)] and IIII[ll1I(-21316)] then
						SetOverrideBinding(UIParent, true, IIII[ll1I(-21519)], IIII[ll1I(-21316)])
					end
				end
			end
		end
		local function lIIllI()
			if lII1 then
				IIII[ll1I(-21592)](ll1I(-20980))
				return
			end
			if IIII[ll1I(-21123)] then
				IIII[ll1I(-21123)]:Show()
				for lIII, l1II in pairs(l1llI) do
					IIII[ll1I(-21123)]:RegisterEvent(l1II)
				end
				IIII[ll1I(-21123)]:SetScript(ll1I(-21469), I1I1I)
				IIII[ll1I(-21123)]:SetScript(ll1I(-21197), lIlllI)
			end
			Ill1(ll1I(-21390), .1)
			local lIII = Il1I(ll1I(-21187), IIII[ll1I(-21867)])
			I1II(ll1I(-21187), lIII)
			lII1 = true
		end
		local function IIIllI()
			if not lII1 then
				return
			end
			if IIII[ll1I(-21123)] then
				IIII[ll1I(-21123)]:Hide()
				for lIII, l1II in pairs(l1llI) do
					IIII[ll1I(-21123)]:UnregisterEvent(l1II)
				end
				IIII[ll1I(-21123)]:SetScript(ll1I(-21469), nil)
				IIII[ll1I(-21123)]:SetScript(ll1I(-21197), nil)
			end
			lII1 = false
		end
		function IIII.O0lOlI(lIII)
			if IIII[ll1I(-21626)] then
				for l1II, I1II in ipairs(IIII[ll1I(-21626)]) do
					if I1II[ll1I(-21674)] and (lI1I(I1II[ll1I(-21674)]) and not IIII[ll1I(-21015)](lIII[ll1I(-21135)], unpack(I1II[ll1I(-21717)]))) then
						if IIII[ll1I(-21558)](lIII, I1II[ll1I(-21803)]) then
							return I1II[ll1I(-21803)]
						end
					end
				end
			end
		end
		IIII[ll1I(-21770)] = {}
		function IIII.OOlO0l(lIII)
			for IIII, l1II in ipairs(IIII[ll1I(-21091)]) do
				if l1II[ll1I(-21674)] and lI1I(l1II[ll1I(-21674)]) then
					if l1II[ll1I(-21645)] == lIII then
						return l1II[ll1I(-21645)], l1II[ll1I(-20923)]
					end
				end
			end
		end
		function IIII.OO0lIO(lIII)
			if lIII[ll1I(-21058)] then
				return
			end
			local l1II = IIII[ll1I(-21770)][lIII[ll1I(-21686)]]
			if not l1II then
				return
			end
			local I1II, Il1I = IIII[ll1I(-21192)](l1II)
			if I1II and (not IIII[ll1I(-21015)](lIII[ll1I(-21135)], l1II) or IIII[ll1I(-21585)](lIII[ll1I(-21135)], l1II) < Il1I * (630448 - 630388)) then
				if IIII[ll1I(-21558)](lIII, I1II) then
					return I1II
				end
			end
		end
		function IIII.O00l00(lIII)
			local l1II = lIII[ll1I(-21058)]
			if not l1II then
				return
			end
			local I1II, Il1I = IIII[ll1I(-21192)](l1II)
			if I1II and (not IIII[ll1I(-21015)](lIII[ll1I(-21135)], l1II) or IIII[ll1I(-21585)](lIII[ll1I(-21135)], l1II) < Il1I * (233699 - 233639)) then
				if IIII[ll1I(-21558)](lIII, I1II) then
					return I1II
				end
			end
		end
		IIII[ll1I(-21515)] = true
		function IIII.OllO0I(lIII, l1II)
			local I1II = ll1I(-21142) .. (lIII .. (ll1I(-21657) .. l1II))
			IIII[ll1I(-21592)](I1II)
		end
		function IIII.OlIOIO(lIII, IIII)
		end
		local l1IllI
		local function I1IllI(lIII, l1II, I1II, Il1I)
			local lI1I = {}
			local II1I = false
			local l11I = IIII[ll1I(-20917)][l1II]
			local function I11I()
				local l1II = - 245032 + 245032
				local Il1I
				for lIII, IIII in pairs(IIII[ll1I(-20886)]) do
					if IIII[I1II] then
						Il1I = IIII[ll1I(-21645)]
						l1II = l1II + (- 66593 - (- 66594))
					end
				end
				if l1II > 880379 + - 880379 then
					l11I:SetText(lIII .. (ll1I(-21767) .. l1II))
				else
					l11I:SetText(lIII)
				end
			end
			local function lll1(lIII, l1II)
				if not Il1I then
					for lIII, IIII in pairs(IIII[ll1I(-20886)]) do
						if lIII ~= l1II[ll1I(-21135)] then
							IIII[I1II] = false
						end
					end
				end
				local lI1I = IIII[ll1I(-20886)][l1II[ll1I(-21135)]]
				if lI1I then
					lI1I[I1II] = not lI1I[I1II]
					I11I()
				end
				HideUIPanel(l1IllI)
			end
			local function Ill1(l1II, Il1I)
				for lIII, IIII in pairs(IIII[ll1I(-20886)]) do
					IIII[I1II] = false
				end
				I11I()
				IIII[ll1I(-21592)](lIII .. ll1I(-20908))
				HideUIPanel(l1IllI)
			end
			local function lIl1(lIII, l1II)
				for lIII, IIII in pairs(IIII[ll1I(-20886)]) do
					if l1II[ll1I(-21784)] == IIII[ll1I(-21784)] then
						IIII[I1II] = not IIII[I1II]
					end
				end
				I11I()
				HideUIPanel(l1IllI)
			end
			local function IIl1(l1II)
				local Il1I = {}
				local lI1I = 103139 - 103139
				for IIII, II1I in pairs(IIII[ll1I(-20886)]) do
					if l1II == II1I[ll1I(-21784)] then
						lI1I = lI1I + (333994 + - 333993)
						Il1I[lI1I] = {
							[ll1I(-20974)] = II1I[ll1I(-21645)];
							[ll1I(-21330)] = II1I[I1II] == true;
							[ll1I(-21008)] = {
								[ll1I(-20909)] = I1II,
								[ll1I(-21135)] = IIII;
								[ll1I(-21784)] = II1I[ll1I(-21784)]
							},
							[ll1I(-20939)] = lll1;
							[ll1I(-21105)] = ll1I(-21938);
							[ll1I(-21122)] = ll1I(-21257) .. lIII
						}
					end
				end
				return lI1I, Il1I
			end
			local l1l1 = {}
			local I1l1 = false
			local llI1 = - 893756 - (- 893756)
			for IIII, l1II in pairs(IIII[ll1I(-20886)]) do
				if l1II[I1II] then
					I1l1 = true
					llI1 = llI1 + (422381 + - 422380)
					tinsert(l1l1, {
						[ll1I(-20974)] = l1II[ll1I(-21645)] .. (ll1I(-21344) .. (l1II[ll1I(-21784)] .. ll1I(-21235))),
						[ll1I(-21330)] = l1II[I1II] == true,
						[ll1I(-21008)] = {
							[ll1I(-20909)] = I1II;
							[ll1I(-21135)] = IIII
						};
						[ll1I(-20939)] = lll1;
						[ll1I(-21105)] = ll1I(-21931);
						[ll1I(-21122)] = ll1I(-21400) .. lIII
					})
				end
			end
			if I1l1 then
				tinsert(lI1I, {
					[ll1I(-20974)] = lIII .. (ll1I(-20997) .. (tostring(llI1) .. ll1I(-21417))),
					[ll1I(-21525)] = true,
					[ll1I(-21566)] = true;
					[ll1I(-21011)] = l1l1
				})
				tinsert(lI1I, {
					[ll1I(-20974)] = ll1I(-21276),
					[ll1I(-21525)] = true,
					[ll1I(-21008)] = {
						[ll1I(-20909)] = I1II
					};
					[ll1I(-20939)] = Ill1
				})
			end
			tinsert(lI1I, {
				[ll1I(-20974)] = ll1I(-21735) .. lIII,
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			local IlI1 = {}
			for lIII, IIII in pairs(IIII[ll1I(-20886)]) do
				IlI1[IIII[ll1I(-21784)]] = true
			end
			for lIII, IIII in pairs(IlI1) do
				local l1II, I1II = IIl1(lIII)
				if l1II > 155685 - 155685 then
					tinsert(lI1I, {
						[ll1I(-20974)] = lIII .. (ll1I(-21344) .. (tostring(l1II) .. ll1I(-21235)));
						[ll1I(-21525)] = true,
						[ll1I(-21566)] = true;
						[ll1I(-21011)] = I1II
					})
				end
			end
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(lI1I, l1IllI, ll1I(-21224), - 119140 + 119090, - 543921 + 543901, ll1I(-21322), - 982845 - (- 982846))
		end
		IIII[ll1I(-21860)] = I1IllI
		local function ll1llI(lIII, IIII, l1II)
		end
		function IIII.OIl0Ol(lIII)
			Ill1(ll1I(-21775), - 833018 + 833019)
		end
		local function Il1llI(lIII)
			local IIII
			GameTooltip:SetSpellByID(lIII)
			local l1II = GameTooltip:GetRegions()
			for lIII = - 45345 + 45346, select(ll1I(-21870), GameTooltip:GetRegions()), 924221 + - 924220 do
				local l1II = select(lIII, GameTooltip:GetRegions())
				if l1II and (l1II:GetObjectType() == ll1I(-21483) and l1II:GetText()) then
					if not IIII then
						IIII = l1II:GetText()
					else
						IIII = IIII .. (ll1I(-21767) .. l1II:GetText())
					end
				end
			end
			return IIII
		end
		function IIII.OllIlO(lIII, l1II, lI1I, II1I, l11I, lll1, Ill1)
			local function lIl1(lIII, IIII)
				if Ill1 then
					II1I:SetText(IIII[ll1I(-22002)])
				else
					II1I:SetText(IIII[ll1I(-21911)])
				end
				I1II(lI1I .. ll1I(-21664), IIII[ll1I(-21911)])
				I1II(lI1I, IIII[ll1I(-21803)])
				HideUIPanel(l1IllI)
			end
			local IIl1 = Il1I(lI1I, lll1)
			if not IIII[ll1I(-21640)](IIl1) then
				IIl1 = ll1I(-21685)
			end
			local l1l1 = {}
			tinsert(l1l1, {
				[ll1I(-20974)] = lIII;
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			for lIII, IIII in ipairs(l11I) do
				action = I11I(IIII)
				if action then
					local lIII = action[ll1I(-21645)]
					if string[ll1I(-21426)](lIII) > 899588 - 899580 then
						lIII = string[ll1I(-21817)](lIII, 834490 + - 834489, 296809 + - 296797)
					end
					local IIII = ll1I(-21853) .. (action[ll1I(-22002)] .. ll1I(-21646))
					local l1II = IIII .. lIII
					local I1II = IIII .. GetSpellInfo(action[ll1I(-21832)])
					table[ll1I(-21319)](l1l1, {
						[ll1I(-21330)] = action[ll1I(-21645)] == IIl1,
						[ll1I(-20974)] = I1II;
						[ll1I(-21008)] = {
							[ll1I(-21726)] = II1I,
							[ll1I(-21803)] = action[ll1I(-21645)];
							[ll1I(-21911)] = l1II;
							[ll1I(-22002)] = IIII
						},
						[ll1I(-20939)] = lIl1,
						[ll1I(-21105)] = action[ll1I(-20981)],
						[ll1I(-21122)] = Il1llI(action[ll1I(-21832)])
					})
				end
			end
			tinsert(l1l1, {
				[ll1I(-20974)] = ll1I(-21454);
				[ll1I(-21330)] = false,
				[ll1I(-20939)] = function()
					II1I:SetText(ll1I(-21685))
					I1II(lI1I .. ll1I(-21664), nil)
					I1II(lI1I, nil)
					HideUIPanel(l1IllI)
				end
			})
			tinsert(l1l1, {
				[ll1I(-20974)] = ll1I(-20906),
				[ll1I(-21525)] = true;
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			GameTooltip:Hide()
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(l1l1, l1IllI, ll1I(-21224), - 636376 - (- 636276), - 928913 - (- 928893), ll1I(-21322), - 895098 - (- 895100))
		end
		function IIII.OOII00(lIII, l1II, lI1I, II1I, l11I, lll1)
			local function Ill1(lIII, IIII)
				II1I:SetText(IIII[ll1I(-21803)])
				I1II(lI1I, IIII[ll1I(-21803)])
				HideUIPanel(l1IllI)
			end
			local lIl1 = Il1I(lI1I, lll1)
			if not IIII[ll1I(-21640)](lIl1) then
				lIl1 = ll1I(-21685)
			end
			local IIl1 = {}
			tinsert(IIl1, {
				[ll1I(-20974)] = lIII,
				[ll1I(-21525)] = true;
				[ll1I(-21633)] = true
			})
			for lIII, IIII in ipairs(l11I) do
				action = I11I(IIII)
				if action then
					local lIII = action[ll1I(-21645)]
					if string[ll1I(-21426)](lIII) > - 535153 + 535161 then
						lIII = string[ll1I(-21817)](lIII, 195559 - 195558, 73390 - 73378)
					end
					table[ll1I(-21319)](IIl1, {
						[ll1I(-20974)] = GetSpellInfo(action[ll1I(-21832)]),
						[ll1I(-21330)] = action[ll1I(-21645)] == lIl1;
						[ll1I(-21008)] = {
							[ll1I(-21726)] = II1I,
							[ll1I(-21803)] = action[ll1I(-21645)]
						};
						[ll1I(-20939)] = Ill1,
						[ll1I(-21105)] = action[ll1I(-20981)];
						[ll1I(-21122)] = Il1llI(action[ll1I(-21832)])
					})
				end
			end
			tinsert(IIl1, {
				[ll1I(-20974)] = ll1I(-20906);
				[ll1I(-21525)] = true;
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			GameTooltip:Hide()
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(IIl1, l1IllI, ll1I(-21224), 332202 + - 332302, - 949393 - (- 949373), ll1I(-21322), 11106 - 11104)
		end
		function IIII.OlOO00(lIII, IIII, l1II, lI1I, II1I, l11I)
			local function I11I(lIII, IIII)
				lI1I:SetText(IIII[ll1I(-21911)])
				I1II(l1II .. ll1I(-21664), IIII[ll1I(-21911)])
				I1II(l1II, IIII[ll1I(-21803)])
				HideUIPanel(l1IllI)
			end
			local lll1 = Il1I(l1II, l11I)
			local Ill1 = {}
			tinsert(Ill1, {
				[ll1I(-20974)] = lIII;
				[ll1I(-21525)] = true;
				[ll1I(-21633)] = true
			})
			for lIII, IIII in ipairs(II1I) do
				local l1II, I1II, Il1I, II1I, l11I, lIl1, IIl1, l1l1, I1l1, llI1, IlI1 = GetItemInfo(IIII)
				table[ll1I(-21319)](Ill1, {
					[ll1I(-20974)] = l1II;
					[ll1I(-21330)] = l1II == lll1,
					[ll1I(-21008)] = {
						[ll1I(-21726)] = lI1I,
						[ll1I(-21803)] = l1II,
						[ll1I(-21911)] = l1II
					},
					[ll1I(-20939)] = I11I;
					[ll1I(-21105)] = l1II
				})
			end
			tinsert(Ill1, {
				[ll1I(-20974)] = ll1I(-20906),
				[ll1I(-21525)] = true;
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			GameTooltip:Hide()
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(Ill1, l1IllI, ll1I(-21224), - 471955 - (- 471855), 869563 + - 869583, ll1I(-21322), 1001983 + - 1001981)
		end
		function IIII.OIIO0O(lIII, l1II, lI1I, II1I)
			local function l11I(lIII, IIII)
				if IIII[ll1I(-21803)] == nil then
					if II1I then
						l1II:SetText(ll1I(-21810))
					else
						l1II:SetText(ll1I(-21528))
					end
					I1II(lI1I, nil)
				else
					l1II:SetText(string[ll1I(-21817)](IIII[ll1I(-21911)], - 654452 + 654453, - 899376 - (- 899388)))
					I1II(lI1I, IIII[ll1I(-21803)])
				end
				HideUIPanel(l1IllI)
			end
			local I11I = Il1I(lI1I)
			local lll1 = IIII[ll1I(-20977)]()
			local Ill1 = {}
			tinsert(Ill1, {
				[ll1I(-20974)] = lIII;
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			for lIII, IIII in pairs(lll1) do
				table[ll1I(-21319)](Ill1, {
					[ll1I(-20974)] = lIII;
					[ll1I(-21330)] = lIII == I11I,
					[ll1I(-21008)] = {
						[ll1I(-21726)] = l1II,
						[ll1I(-21803)] = IIII;
						[ll1I(-21911)] = lIII
					};
					[ll1I(-20939)] = l11I;
					[ll1I(-21105)] = lIII
				})
			end
			table[ll1I(-21319)](Ill1, {
				[ll1I(-20974)] = ll1I(-21454),
				[ll1I(-21330)] = false,
				[ll1I(-21008)] = {
					[ll1I(-21726)] = l1II;
					[ll1I(-21803)] = nil;
					[ll1I(-21911)] = ll1I(-21169)
				},
				[ll1I(-20939)] = l11I
			})
			tinsert(Ill1, {
				[ll1I(-20974)] = ll1I(-20906),
				[ll1I(-21525)] = true,
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			GameTooltip:Hide()
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(Ill1, l1IllI, ll1I(-21224), 501132 - 501232, - 932413 + 932393, ll1I(-21322), - 312552 - (- 312554))
		end
		function IIII.O0ll00(lIII, IIII, l1II, lI1I, II1I, l11I)
			local function I11I(lIII, IIII)
				lI1I:SetText(IIII[ll1I(-21911)])
				I1II(l1II .. ll1I(-21664), IIII[ll1I(-21911)])
				I1II(l1II, IIII[ll1I(-21803)])
				HideUIPanel(l1IllI)
			end
			do
				local lIII, IIII, l1II = ll1I(-21440), ll1I(-21583), ll1I(-21673)
				local I1II = lIII .. (IIII .. l1II)
				if date(ll1I(-21117)) > I1II then
					return
				end
			end
			local lll1 = Il1I(l1II, l11I)
			local Ill1 = false
			for lIII, IIII in ipairs(II1I) do
				if IIII == lll1 then
					Ill1 = true
					break
				end
			end
			if not Ill1 then
				lll1 = ll1I(-21685)
			end
			local lIl1 = {}
			tinsert(lIl1, {
				[ll1I(-20974)] = lIII;
				[ll1I(-21525)] = true;
				[ll1I(-21633)] = true
			})
			for lIII, IIII in ipairs(II1I) do
				table[ll1I(-21319)](lIl1, {
					[ll1I(-20974)] = IIII;
					[ll1I(-21330)] = IIII == lll1,
					[ll1I(-21008)] = {
						[ll1I(-21726)] = lI1I,
						[ll1I(-21803)] = IIII,
						[ll1I(-21911)] = IIII
					},
					[ll1I(-20939)] = I11I,
					[ll1I(-21105)] = IIII;
					[ll1I(-21122)] = IIII
				})
			end
			local IIl1 = ll1I(-21349)
			table[ll1I(-21319)](lIl1, {
				[ll1I(-20974)] = IIl1;
				[ll1I(-21330)] = IIl1 == lll1;
				[ll1I(-21008)] = {
					[ll1I(-21726)] = lI1I,
					[ll1I(-21803)] = IIl1;
					[ll1I(-21911)] = IIl1
				},
				[ll1I(-20939)] = I11I,
				[ll1I(-21105)] = IIl1;
				[ll1I(-21122)] = ll1I(-20951)
			})
			tinsert(lIl1, {
				[ll1I(-20974)] = ll1I(-20906);
				[ll1I(-21525)] = true,
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			GameTooltip:Hide()
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(lIl1, l1IllI, ll1I(-21224), 882775 - 882875, 7456 + - 7476, ll1I(-21322), - 594096 - (- 594098))
		end
		function IIII.Olll0l(lIII)
			local l1II = - 272936 - (- 272936)
			for I1II = 511921 - 511920, - 551153 + 551173, 125604 + - 125603 do
				if IIII[ll1I(-21640)](lIII .. I1II) then
					l1II = I1II
				else
					break
				end
			end
			if l1II == 52514 - 52514 and IIII[ll1I(-21640)](lIII) then
				return - 551025 + 551024
			end
			return l1II
		end
		local function lI1llI(lIII, l1II, lI1I, II1I)
			local function l11I(lIII, IIII)
				local l1II = Il1I(lIII, {})
				for lIII, l1II in ipairs(l1II) do
					if l1II == IIII then
						return true
					end
				end
				return false
			end
			local function Ill1(lIII, IIII)
				if l11I(lIII, IIII) then
					return true
				end
				for l1II = - 337898 + 337899, 903184 - 903164, 505584 + - 505583 do
					if l11I(lIII, IIII .. l1II) then
						return true
					end
				end
				return false
			end
			local function lIl1(lIII, IIII)
				local l1II = Il1I(lIII, {})
				for lI1I, II1I in ipairs(l1II) do
					if II1I == IIII then
						table[ll1I(-21987)](l1II, lI1I)
						I1II(lIII, l1II)
						I1II(lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187))), l1II)
						return
					end
				end
				table[ll1I(-21319)](l1II, IIII)
				I1II(lIII, l1II)
				I1II(lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187))), l1II)
			end
			local function IIl1(lIII, IIII, l1II, Il1I)
				lIl1(ll1I(-21691), IIII[ll1I(-21803)])
				I1II(ll1I(-21184), true)
			end
			local function l1l1(lIII, IIII)
				lIl1(ll1I(-21450), IIII[ll1I(-21803)])
			end
			local function I1l1(lIII, l1II)
				I1II(ll1I(-21158), l1II[ll1I(-20915)])
				I1II(ll1I(-21927), l1II[ll1I(-21029)])
				IIII[ll1I(-21592)](ll1I(-22001) .. l1II[ll1I(-21911)])
			end
			local function llI1(lIII, IIII)
				lIl1(ll1I(-21262), IIII[ll1I(-21803)])
			end
			local function IlI1()
				I1II(ll1I(-21691), IIII[ll1I(-21587) .. Il1I(ll1I(-21187))])
				I1II(ll1I(-21587) .. Il1I(ll1I(-21187)), IIII[ll1I(-21587) .. Il1I(ll1I(-21187))])
				I1II(ll1I(-21450), IIII[ll1I(-21448) .. Il1I(ll1I(-21187))])
				I1II(ll1I(-21448) .. Il1I(ll1I(-21187)), IIII[ll1I(-21448) .. Il1I(ll1I(-21187))])
			end
			local lII1 = {}
			tinsert(lII1, {
				[ll1I(-20974)] = ll1I(-21017),
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			local III1, l1I1 = IIII[ll1I(-21874)]()
			for l1II, I1II in ipairs(l1II) do
				if IIII[ll1I(-21328)] then
					local IIII = l1I1[I1II]
					local l1II = false
					if lll1(I1II .. 139749 - 139748) then
						l1II = true
					end
					if l1II then
						local l1II = {}
						for IIII = - 35425 + 35426, # IIII - (621428 - 621427), 467503 - 467502 do
							action = I11I(I1II .. tostring(IIII))
							if action then
								local I1II = ll1I(-21853) .. (action[ll1I(-22002)] .. (ll1I(-21085) .. action[ll1I(-20981)]))
								table[ll1I(-21319)](l1II, {
									[ll1I(-20974)] = I1II;
									[ll1I(-21376)] = true,
									[ll1I(-21330)] = l11I(ll1I(-21691), action[ll1I(-21645)]),
									[ll1I(-21105)] = action[ll1I(-20981)];
									[ll1I(-21122)] = Il1llI(action[ll1I(-21832)]);
									[ll1I(-21008)] = {
										[ll1I(-21547)] = IIII,
										[ll1I(-21726)] = lIII,
										[ll1I(-21803)] = action[ll1I(-21645)],
										[ll1I(-21911)] = action[ll1I(-20981)]
									},
									[ll1I(-21382)] = true;
									[ll1I(-20939)] = IIl1
								})
							end
						end
						local Il1I = I11I(I1II)
						if Il1I then
							local lIII = ll1I(-21853) .. (Il1I[ll1I(-22002)] .. (ll1I(-21085) .. I1II))
							table[ll1I(-21319)](lII1, {
								[ll1I(-20974)] = lIII;
								[ll1I(-21525)] = true,
								[ll1I(-21382)] = true;
								[ll1I(-21566)] = true,
								[ll1I(-21011)] = l1II
							})
						end
					else
						local IIII = I11I(I1II)
						if IIII then
							local l1II = ll1I(-21853) .. (IIII[ll1I(-22002)] .. (ll1I(-21085) .. IIII[ll1I(-20981)]))
							table[ll1I(-21319)](lII1, {
								[ll1I(-20974)] = l1II,
								[ll1I(-21376)] = true;
								[ll1I(-21330)] = l11I(ll1I(-21691), IIII[ll1I(-21645)]),
								[ll1I(-21008)] = {
									[ll1I(-21547)] = i;
									[ll1I(-21726)] = lIII,
									[ll1I(-21803)] = IIII[ll1I(-21645)],
									[ll1I(-21911)] = IIII[ll1I(-20981)]
								},
								[ll1I(-21382)] = true,
								[ll1I(-20939)] = IIl1;
								[ll1I(-21105)] = IIII[ll1I(-20981)];
								[ll1I(-21122)] = Il1llI(IIII[ll1I(-21832)])
							})
						end
					end
				else
					local IIII = I11I(I1II)
					if IIII then
						local l1II = ll1I(-21853) .. (IIII[ll1I(-22002)] .. (ll1I(-21085) .. IIII[ll1I(-20981)]))
						table[ll1I(-21319)](lII1, {
							[ll1I(-20974)] = l1II;
							[ll1I(-21376)] = true,
							[ll1I(-21330)] = l11I(ll1I(-21691), IIII[ll1I(-21645)]),
							[ll1I(-21008)] = {
								[ll1I(-21547)] = i,
								[ll1I(-21726)] = lIII,
								[ll1I(-21803)] = IIII[ll1I(-21645)];
								[ll1I(-21911)] = IIII[ll1I(-20981)]
							},
							[ll1I(-21382)] = true,
							[ll1I(-20939)] = IIl1;
							[ll1I(-21105)] = IIII[ll1I(-20981)],
							[ll1I(-21122)] = Il1llI(IIII[ll1I(-21832)])
						})
					end
				end
			end
			if lI1I and # lI1I > 509744 - 509744 then
				local l1II = {}
				for I1II, Il1I in ipairs(lI1I) do
					if IIII[ll1I(-21328)] then
						local IIII = l1I1[Il1I]
						local I1II = false
						if lll1(Il1I .. 1041089 - 1041088) then
							I1II = true
						end
						if I1II then
							local I1II = {}
							for IIII = - 855867 + 855868, # IIII - (- 241702 - (- 241703)), 151781 + - 151780 do
								local l1II = I11I(Il1I .. tostring(IIII))
								if l1II then
									local Il1I = ll1I(-21853) .. (l1II[ll1I(-22002)] .. (ll1I(-21085) .. l1II[ll1I(-20981)]))
									table[ll1I(-21319)](I1II, {
										[ll1I(-20974)] = Il1I;
										[ll1I(-21376)] = true;
										[ll1I(-21330)] = l11I(ll1I(-21450), l1II[ll1I(-21645)]);
										[ll1I(-21008)] = {
											[ll1I(-21547)] = IIII;
											[ll1I(-21726)] = lIII;
											[ll1I(-21803)] = l1II[ll1I(-21645)];
											[ll1I(-21911)] = l1II[ll1I(-20981)]
										};
										[ll1I(-21382)] = true,
										[ll1I(-20939)] = l1l1,
										[ll1I(-21105)] = l1II[ll1I(-20981)],
										[ll1I(-21122)] = Il1llI(l1II[ll1I(-21832)])
									})
								end
							end
							local lI1I = I11I(Il1I)
							if lI1I then
								local lIII = ll1I(-21853) .. (lI1I[ll1I(-22002)] .. (ll1I(-21085) .. Il1I))
								table[ll1I(-21319)](l1II, {
									[ll1I(-20974)] = lIII;
									[ll1I(-21525)] = true,
									[ll1I(-21382)] = true,
									[ll1I(-21566)] = true,
									[ll1I(-21011)] = I1II
								})
							end
						else
							local IIII = I11I(Il1I)
							if IIII then
								local I1II = ll1I(-21853) .. (IIII[ll1I(-22002)] .. (ll1I(-21085) .. IIII[ll1I(-20981)]))
								table[ll1I(-21319)](l1II, {
									[ll1I(-20974)] = I1II;
									[ll1I(-21376)] = true;
									[ll1I(-21330)] = l11I(ll1I(-21450), IIII[ll1I(-21645)]),
									[ll1I(-21008)] = {
										[ll1I(-21547)] = i,
										[ll1I(-21726)] = lIII;
										[ll1I(-21803)] = IIII[ll1I(-21645)];
										[ll1I(-21911)] = IIII[ll1I(-20981)]
									};
									[ll1I(-21382)] = true,
									[ll1I(-20939)] = l1l1;
									[ll1I(-21105)] = IIII[ll1I(-20981)];
									[ll1I(-21122)] = Il1llI(IIII[ll1I(-21832)])
								})
							end
						end
					else
						local IIII = I11I(Il1I)
						if IIII then
							local I1II = ll1I(-21853) .. (IIII[ll1I(-22002)] .. (ll1I(-21085) .. IIII[ll1I(-20981)]))
							table[ll1I(-21319)](l1II, {
								[ll1I(-20974)] = I1II;
								[ll1I(-21376)] = true,
								[ll1I(-21330)] = l11I(ll1I(-21450), IIII[ll1I(-21645)]);
								[ll1I(-21008)] = {
									[ll1I(-21547)] = i;
									[ll1I(-21726)] = lIII;
									[ll1I(-21803)] = IIII[ll1I(-21645)],
									[ll1I(-21911)] = IIII[ll1I(-20981)]
								},
								[ll1I(-21382)] = true;
								[ll1I(-20939)] = l1l1,
								[ll1I(-21105)] = IIII[ll1I(-20981)],
								[ll1I(-21122)] = Il1llI(IIII[ll1I(-21832)])
							})
						end
					end
				end
				if # l1II > - 828602 + 828602 then
					tinsert(lII1, {
						[ll1I(-20974)] = ll1I(-20990),
						[ll1I(-21525)] = true;
						[ll1I(-21633)] = true
					})
					tinsert(lII1, {
						[ll1I(-20974)] = ll1I(-21661);
						[ll1I(-21525)] = true,
						[ll1I(-21633)] = true
					})
					for lIII, IIII in ipairs(l1II) do
						table[ll1I(-21319)](lII1, IIII)
					end
				end
			end
			if II1I and # II1I > 1015743 + - 1015743 then
				local IIII = {}
				for l1II, I1II in ipairs(II1I) do
					local Il1I = I11I(I1II)
					if Il1I then
						local l1II = ll1I(-21853) .. (Il1I[ll1I(-22002)] .. (ll1I(-21085) .. GetSpellInfo(Il1I[ll1I(-21832)])))
						table[ll1I(-21319)](IIII, {
							[ll1I(-20974)] = l1II;
							[ll1I(-21376)] = true;
							[ll1I(-21330)] = l11I(ll1I(-21262), Il1I[ll1I(-21645)]);
							[ll1I(-21008)] = {
								[ll1I(-21547)] = i,
								[ll1I(-21726)] = lIII;
								[ll1I(-21803)] = Il1I[ll1I(-21645)],
								[ll1I(-21911)] = Il1I[ll1I(-20981)]
							},
							[ll1I(-21382)] = true,
							[ll1I(-20939)] = llI1;
							[ll1I(-21105)] = Il1I[ll1I(-20981)];
							[ll1I(-21122)] = Il1llI(Il1I[ll1I(-21832)])
						})
					end
				end
				tinsert(lII1, {
					[ll1I(-20974)] = ll1I(-20990),
					[ll1I(-21525)] = true;
					[ll1I(-21633)] = true
				})
				tinsert(lII1, {
					[ll1I(-20974)] = ll1I(-21873);
					[ll1I(-21525)] = true;
					[ll1I(-21633)] = true
				})
				for lIII, IIII in ipairs(IIII) do
					table[ll1I(-21319)](lII1, IIII)
				end
			end
			tinsert(lII1, {
				[ll1I(-20974)] = ll1I(-20990);
				[ll1I(-21525)] = true;
				[ll1I(-21633)] = true
			})
			tinsert(lII1, {
				[ll1I(-20974)] = ll1I(-21080),
				[ll1I(-21525)] = true,
				[ll1I(-20939)] = function()
					IlI1()
				end
			})
			tinsert(lII1, {
				[ll1I(-20974)] = ll1I(-20990),
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			tinsert(lII1, {
				[ll1I(-20974)] = ll1I(-20906);
				[ll1I(-21525)] = true,
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			GameTooltip:Hide()
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(lII1, l1IllI, ll1I(-21224), - 942029 - (- 941949), - 683637 + 683617, ll1I(-21322), - 20959 - (- 20961))
		end
		local function II1llI(lIII, l1II, lI1I, II1I)
			local function l11I(lIII, IIII)
				local l1II = Il1I(lIII, {})
				for lIII, l1II in ipairs(l1II) do
					if l1II == IIII then
						return true
					end
				end
				return false
			end
			local function lll1(lIII, IIII)
				if l11I(lIII, IIII) then
					return true
				end
				for l1II = 620980 - 620979, - 231379 - (- 231399), 49123 - 49122 do
					if l11I(lIII, IIII .. l1II) then
						return true
					end
				end
				return false
			end
			local function Ill1(lIII, IIII)
				local l1II = Il1I(lIII, {})
				for lI1I, II1I in ipairs(l1II) do
					if II1I == IIII then
						table[ll1I(-21987)](l1II, lI1I)
						I1II(lIII, l1II)
						I1II(lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187))), l1II)
						return
					end
				end
				table[ll1I(-21319)](l1II, IIII)
				I1II(lIII, l1II)
				I1II(lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187))), l1II)
			end
			local function lIl1(lIII, IIII, l1II, Il1I)
				Ill1(ll1I(-21691), IIII[ll1I(-21803)])
				I1II(ll1I(-21184), true)
			end
			local function IIl1(lIII, IIII)
				Ill1(ll1I(-21450), IIII[ll1I(-21803)])
			end
			local function l1l1(lIII, l1II)
				I1II(ll1I(-21158), l1II[ll1I(-20915)])
				I1II(ll1I(-21927), l1II[ll1I(-21029)])
				IIII[ll1I(-21592)](ll1I(-22001) .. l1II[ll1I(-21911)])
			end
			local function I1l1(lIII, IIII)
				Ill1(ll1I(-21262), IIII[ll1I(-21803)])
			end
			local function llI1()
				I1II(ll1I(-21691), IIII[ll1I(-21587) .. Il1I(ll1I(-21187))])
				I1II(ll1I(-21587) .. Il1I(ll1I(-21187)), IIII[ll1I(-21587) .. Il1I(ll1I(-21187))])
				I1II(ll1I(-21450), IIII[ll1I(-21448) .. Il1I(ll1I(-21187))])
				I1II(ll1I(-21448) .. Il1I(ll1I(-21187)), IIII[ll1I(-21448) .. Il1I(ll1I(-21187))])
			end
			local IlI1 = {}
			tinsert(IlI1, {
				[ll1I(-20974)] = ll1I(-21017),
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			for l1II, I1II in ipairs(l1II) do
				local Il1I = IIII[ll1I(-21031)](I1II)
				if Il1I >= 160357 + - 160356 then
					local IIII = {}
					for l1II = 957758 + - 957757, Il1I, - 795192 - (- 795193) do
						action = I11I(I1II .. tostring(l1II))
						local Il1I = ll1I(-21853) .. (action[ll1I(-22002)] .. (ll1I(-21085) .. action[ll1I(-20981)]))
						table[ll1I(-21319)](IIII, {
							[ll1I(-20974)] = Il1I,
							[ll1I(-21376)] = true,
							[ll1I(-21330)] = l11I(ll1I(-21691), action[ll1I(-21645)]);
							[ll1I(-21105)] = action[ll1I(-20981)],
							[ll1I(-21122)] = Il1llI(action[ll1I(-21832)]),
							[ll1I(-21008)] = {
								[ll1I(-21547)] = l1II;
								[ll1I(-21726)] = lIII,
								[ll1I(-21803)] = action[ll1I(-21645)],
								[ll1I(-21911)] = action[ll1I(-20981)]
							};
							[ll1I(-21382)] = true,
							[ll1I(-20939)] = lIl1
						})
					end
					local l1II = I11I(I1II .. tostring(Il1I))
					local lI1I = ll1I(-21853) .. (l1II[ll1I(-22002)] .. (ll1I(-21085) .. GetSpellInfo(l1II[ll1I(-21832)])))
					table[ll1I(-21319)](IlI1, {
						[ll1I(-20974)] = lI1I,
						[ll1I(-21330)] = lll1(ll1I(-21691), I1II),
						[ll1I(-21382)] = true,
						[ll1I(-21566)] = true,
						[ll1I(-21011)] = IIII
					})
				end
				if Il1I == 509296 + - 509297 then
					action = I11I(I1II)
					local IIII = ll1I(-21853) .. (action[ll1I(-22002)] .. (ll1I(-21085) .. GetSpellInfo(action[ll1I(-21832)])))
					table[ll1I(-21319)](IlI1, {
						[ll1I(-20974)] = IIII,
						[ll1I(-21376)] = true;
						[ll1I(-21330)] = l11I(ll1I(-21691), action[ll1I(-21645)]);
						[ll1I(-21008)] = {
							[ll1I(-21547)] = i;
							[ll1I(-21726)] = lIII;
							[ll1I(-21803)] = action[ll1I(-21645)];
							[ll1I(-21911)] = action[ll1I(-20981)]
						},
						[ll1I(-21382)] = true;
						[ll1I(-20939)] = lIl1;
						[ll1I(-21105)] = action[ll1I(-20981)];
						[ll1I(-21122)] = Il1llI(action[ll1I(-21832)])
					})
				end
			end
			if lI1I and # lI1I > 46945 - 46945 then
				local l1II = {}
				for I1II, Il1I in ipairs(lI1I) do
					local lI1I = IIII[ll1I(-21031)](Il1I)
					if lI1I >= - 842553 - (- 842554) then
						local IIII = {}
						for l1II = 964990 + - 964989, lI1I, - 276329 + 276330 do
							action = I11I(Il1I .. tostring(l1II))
							local I1II = ll1I(-21853) .. (action[ll1I(-22002)] .. (ll1I(-21085) .. action[ll1I(-20981)]))
							table[ll1I(-21319)](IIII, {
								[ll1I(-20974)] = I1II;
								[ll1I(-21376)] = true;
								[ll1I(-21330)] = l11I(ll1I(-21450), action[ll1I(-21645)]);
								[ll1I(-21008)] = {
									[ll1I(-21547)] = l1II,
									[ll1I(-21726)] = lIII;
									[ll1I(-21803)] = action[ll1I(-21645)];
									[ll1I(-21911)] = action[ll1I(-20981)]
								},
								[ll1I(-21382)] = true,
								[ll1I(-20939)] = IIl1;
								[ll1I(-21105)] = action[ll1I(-20981)],
								[ll1I(-21122)] = Il1llI(action[ll1I(-21832)])
							})
						end
						local I1II = I11I(Il1I .. tostring(lI1I))
						local II1I = ll1I(-21853) .. (I1II[ll1I(-22002)] .. (ll1I(-21085) .. GetSpellInfo(I1II[ll1I(-21832)])))
						table[ll1I(-21319)](l1II, {
							[ll1I(-20974)] = II1I;
							[ll1I(-21330)] = lll1(ll1I(-21450), Il1I);
							[ll1I(-21382)] = true;
							[ll1I(-21566)] = true;
							[ll1I(-21011)] = IIII
						})
					end
					if lI1I == 501359 - 501360 then
						action = I11I(Il1I)
						local IIII = ll1I(-21853) .. (action[ll1I(-22002)] .. (ll1I(-21085) .. GetSpellInfo(action[ll1I(-21832)])))
						table[ll1I(-21319)](l1II, {
							[ll1I(-20974)] = IIII;
							[ll1I(-21376)] = true,
							[ll1I(-21330)] = l11I(ll1I(-21450), action[ll1I(-21645)]),
							[ll1I(-21008)] = {
								[ll1I(-21547)] = i,
								[ll1I(-21726)] = lIII;
								[ll1I(-21803)] = action[ll1I(-21645)];
								[ll1I(-21911)] = action[ll1I(-20981)]
							},
							[ll1I(-21382)] = true,
							[ll1I(-20939)] = IIl1;
							[ll1I(-21105)] = action[ll1I(-20981)];
							[ll1I(-21122)] = Il1llI(action[ll1I(-21832)])
						})
					end
				end
				if # l1II > - 984063 - (- 984063) then
					tinsert(IlI1, {
						[ll1I(-20974)] = ll1I(-20990),
						[ll1I(-21525)] = true,
						[ll1I(-21633)] = true
					})
					tinsert(IlI1, {
						[ll1I(-20974)] = ll1I(-21661),
						[ll1I(-21525)] = true,
						[ll1I(-21633)] = true
					})
					for lIII, IIII in ipairs(l1II) do
						table[ll1I(-21319)](IlI1, IIII)
					end
				end
			end
			if II1I and # II1I > - 493807 + 493807 then
				local IIII = {}
				for l1II, I1II in ipairs(II1I) do
					action = I11I(I1II)
					if action then
						local l1II = ll1I(-21853) .. (action[ll1I(-22002)] .. (ll1I(-21085) .. GetSpellInfo(action[ll1I(-21832)])))
						table[ll1I(-21319)](IIII, {
							[ll1I(-20974)] = l1II;
							[ll1I(-21376)] = true,
							[ll1I(-21330)] = l11I(ll1I(-21262), action[ll1I(-21645)]),
							[ll1I(-21008)] = {
								[ll1I(-21547)] = i,
								[ll1I(-21726)] = lIII;
								[ll1I(-21803)] = action[ll1I(-21645)],
								[ll1I(-21911)] = action[ll1I(-20981)]
							};
							[ll1I(-21382)] = true;
							[ll1I(-20939)] = I1l1;
							[ll1I(-21105)] = action[ll1I(-20981)],
							[ll1I(-21122)] = Il1llI(action[ll1I(-21832)])
						})
					end
				end
				tinsert(IlI1, {
					[ll1I(-20974)] = ll1I(-20990),
					[ll1I(-21525)] = true;
					[ll1I(-21633)] = true
				})
				tinsert(IlI1, {
					[ll1I(-20974)] = ll1I(-21873),
					[ll1I(-21525)] = true,
					[ll1I(-21633)] = true
				})
				for lIII, IIII in ipairs(IIII) do
					table[ll1I(-21319)](IlI1, IIII)
				end
			end
			tinsert(IlI1, {
				[ll1I(-20974)] = ll1I(-20990);
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			tinsert(IlI1, {
				[ll1I(-20974)] = ll1I(-21080),
				[ll1I(-21525)] = true,
				[ll1I(-20939)] = function()
					llI1()
				end
			})
			tinsert(IlI1, {
				[ll1I(-20974)] = ll1I(-20990);
				[ll1I(-21525)] = true,
				[ll1I(-21633)] = true
			})
			tinsert(IlI1, {
				[ll1I(-20974)] = ll1I(-20906),
				[ll1I(-21525)] = true,
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			GameTooltip:Hide()
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(IlI1, l1IllI, ll1I(-21224), - 837194 - (- 837114), 383448 - 383468, ll1I(-21322), 1040128 + - 1040126)
		end
		function IIII.O0OOIl(lIII, l1II, I1II, Il1I)
			if IIII[ll1I(-21641)] then
				II1llI(lIII, l1II, I1II, Il1I)
			else
				lI1llI(lIII, l1II, I1II, Il1I)
			end
		end
		local l11llI
		function IIII.OlIIIO(lIII, l1II, Il1I, lI1I)
			local function II1I(lIII, l1II)
				if l1II[ll1I(-21045)] ~= nil then
					I1II(ll1I(-21187), l1II[ll1I(-21045)])
					if IIII[ll1I(-21956)] then
						IIII[ll1I(-21956)](l1II[ll1I(-21045)])
					end
				end
				HideUIPanel(l1IllI)
			end
			local l11I = {}
			for IIII = 401004 + - 401003, # l1II, - 953533 - (- 953534) do
				if not l1II[IIII][ll1I(-21633)] and not l1II[IIII][ll1I(-21566)] then
					l1II[IIII][ll1I(-21376)] = true
					l1II[IIII][ll1I(-21330)] = Il1I == l1II[IIII][ll1I(-21645)]
					l1II[IIII][ll1I(-21008)] = {
						[ll1I(-21045)] = l1II[IIII][ll1I(-21645)];
						[ll1I(-21726)] = lIII
					}
					l1II[IIII][ll1I(-20939)] = II1I
				end
				if l1II[IIII][ll1I(-21011)] then
					local I1II = l1II[IIII][ll1I(-21011)]
					for IIII = 272936 + - 272935, # I1II, 934462 - 934461 do
						I1II[IIII][ll1I(-21376)] = true
						I1II[IIII][ll1I(-21330)] = Il1I == I1II[IIII][ll1I(-21645)]
						I1II[IIII][ll1I(-21008)] = {
							[ll1I(-21045)] = I1II[IIII][ll1I(-21645)],
							[ll1I(-21726)] = lIII
						}
						I1II[IIII][ll1I(-20939)] = II1I
					end
				end
			end
			if not l11llI then
				tinsert(l1II, {
					[ll1I(-20974)] = ll1I(-20906),
					[ll1I(-21525)] = true;
					[ll1I(-20939)] = function()
						HideUIPanel(l1IllI)
					end
				})
				l11llI = true
			end
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(l1II, l1IllI, ll1I(-21224), - 880955 + 880855, - 2464 + 2444, ll1I(-21322), 522418 - 522416)
		end
		function IIII.OOlO0O(lIII, l1II)
			local function lI1I(IIII, Il1I)
				if not l1II then
					I1II(ll1I(-21825), Il1I[ll1I(-21279)])
					I1II(ll1I(-21943), Il1I[ll1I(-21517)])
				else
					I1II(ll1I(-20982), Il1I[ll1I(-21279)])
					I1II(ll1I(-21042), Il1I[ll1I(-21517)])
				end
				lIII:SetText(ll1I(-21853) .. (Il1I[ll1I(-21517)] .. (ll1I(-21085) .. string[ll1I(-21817)](Il1I[ll1I(-21279)], - 368298 - (- 368299), 903420 + - 903399))))
				HideUIPanel(l1IllI)
			end
			local II1I = {}
			local l11I
			local I11I
			if l1II then
				I11I = Il1I(ll1I(-20982))
				l11I = IIII[ll1I(-20991)]()
			else
				I11I = Il1I(ll1I(-21825))
				l11I = IIII[ll1I(-21427)]()
			end
			for lIII = 231399 + - 231398, # l11I, - 164325 + 164326 do
				local IIII = ll1I(-21853) .. (l11I[lIII][ll1I(-21517)] .. (ll1I(-21085) .. l11I[lIII][ll1I(-21279)]))
				tinsert(II1I, {
					[ll1I(-20974)] = IIII,
					[ll1I(-21376)] = true,
					[ll1I(-21330)] = I11I == l11I[lIII][ll1I(-21279)];
					[ll1I(-21008)] = {
						[ll1I(-21517)] = l11I[lIII][ll1I(-21517)],
						[ll1I(-21279)] = l11I[lIII][ll1I(-21279)]
					};
					[ll1I(-20939)] = lI1I
				})
			end
			tinsert(II1I, {
				[ll1I(-20974)] = ll1I(-20906),
				[ll1I(-21525)] = true;
				[ll1I(-20939)] = function()
					HideUIPanel(l1IllI)
				end
			})
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(II1I, l1IllI, ll1I(-21224), 359559 - 359659, 459054 + - 459074, ll1I(-21322), - 469933 - (- 469935))
		end
		local I11llI = {}
		local lllIlI = {}
		local IllIlI = {}
		local lIlIlI = {}
		local IIlIlI = {}
		local l1lIlI = {}
		local I1lIlI = {}
		local llIIlI = {}
		local IlIIlI = {}
		local lIIIlI = {}
		local function IIIIlI()
			if not IIII[ll1I(-21002)] then
				table[ll1I(-21457)](I11llI)
				table[ll1I(-21457)](lllIlI)
				table[ll1I(-21457)](IllIlI)
				table[ll1I(-21457)](lIlIlI)
				table[ll1I(-21457)](IIlIlI)
				table[ll1I(-21457)](l1lIlI)
				table[ll1I(-21457)](I1lIlI)
				table[ll1I(-21457)](llIIlI)
				table[ll1I(-21457)](IlIIlI)
				table[ll1I(-21457)](lIIIlI)
				local function lIII(lIII)
					if IIII[ll1I(-21640)](lIII) then
						table[ll1I(-21319)](I11llI, lIII)
					end
				end
				local function l1II(lIII)
					if IIII[ll1I(-21640)](lIII) then
						table[ll1I(-21319)](l1lIlI, lIII)
					end
				end
				if lI1I(ll1I(-21826)) then
					lIII(Il1I(ll1I(-21156)))
				end
				do
					local l1II = Il1I(ll1I(-21691), IIII[ll1I(-21505)][IIII[ll1I(-21867)]][ll1I(-21691)])
					if not l1II or # l1II == 867899 + - 867899 then
						l1II = IIII[ll1I(-21505)][IIII[ll1I(-21867)]][ll1I(-21691)]
					end
					if l1II then
						for IIII = - 284712 - (- 284713), # l1II, - 433516 - (- 433517) do
							lIII(l1II[IIII])
						end
					end
				end
				do
					local lIII = Il1I(ll1I(-21450), IIII[ll1I(-21505)][IIII[ll1I(-21867)]][ll1I(-21450)])
					if not lIII or # lIII == 637492 - 637492 then
						lIII = IIII[ll1I(-21505)][IIII[ll1I(-21867)]][ll1I(-21450)]
					end
					if lIII then
						for IIII = 514608 + - 514607, # lIII, 491696 - 491695 do
							l1II(lIII[IIII])
						end
					end
				end
				if # I11llI > 533873 - 533873 then
					table[ll1I(-21636)](I11llI, function(lIII, IIII)
						local l1II = I11I(lIII)
						local I1II = I11I(IIII)
						if not l1II or not l1II[ll1I(-21421)] then
							return false
						end
						if not I1II or not I1II[ll1I(-21421)] then
							return true
						end
						return l1II[ll1I(-21421)] > I1II[ll1I(-21421)]
					end)
				end
				for lIII = 345900 - 345899, # I11llI, 550897 + - 550896 do
					local IIII = I11I(I11llI[lIII])
					local l1II = IIII[ll1I(-21584)]
					if l1II == 645109 - 645108 or l1II == 774266 - 774264 then
						lllIlI[# lllIlI + (- 681140 - (- 681141))] = I11llI[lIII]
					end
					if l1II == - 1025917 - (- 1025920) then
						IllIlI[# IllIlI + (161382 - 161381)] = I11llI[lIII]
					end
					if l1II == - 206178 - (- 206182) then
						lIlIlI[# lIlIlI + (- 348202 - (- 348203))] = I11llI[lIII]
					end
					if l1II == - 624051 + 624056 then
						IIlIlI[# IIlIlI + (619507 + - 619506)] = I11llI[lIII]
					end
				end
				if # l1lIlI > - 915388 - (- 915388) then
					table[ll1I(-21636)](l1lIlI, function(lIII, IIII)
						local l1II = I11I(lIII)
						local I1II = I11I(IIII)
						if not l1II or not l1II[ll1I(-21421)] then
							return false
						end
						if not I1II or not I1II[ll1I(-21421)] then
							return true
						end
						return l1II[ll1I(-21421)] > I1II[ll1I(-21421)]
					end)
				end
				for lIII = 915901 - 915900, # l1lIlI, - 362730 - (- 362731) do
					local IIII = I11I(l1lIlI[lIII])
					local l1II = IIII[ll1I(-21584)]
					if l1II == - 598515 + 598516 or l1II == - 722742 + 722744 then
						I1lIlI[# I1lIlI + (1005184 - 1005183)] = l1lIlI[lIII]
					end
					if l1II == - 517104 + 517107 then
						llIIlI[# llIIlI + (- 46177 + 46178)] = l1lIlI[lIII]
					end
					if l1II == 635192 - 635188 then
						IlIIlI[# IlIIlI + (860667 + - 860666)] = l1lIlI[lIII]
					end
					if l1II == - 198689 - (- 198694) then
						lIIIlI[# lIIIlI + (- 1016448 + 1016449)] = l1lIlI[lIII]
					end
				end
				if lI1I(ll1I(-21408)) then
					if # I11llI >= 475375 + - 475374 then
						for lIII = 3361 - 3360, # I11llI, 110820 - 110819 do
							local IIII = I11I(I11llI[lIII])
							local l1II = IIII[ll1I(-21421)]
							if not l1II then
								l1II = - 720438 + 720438
							end
						end
					end
					if # l1lIlI >= 103139 + - 103138 then
						for lIII = 188902 + - 188901, # l1lIlI, 267304 + - 267303 do
							local IIII = I11I(l1lIlI[lIII])
							local l1II = IIII[ll1I(-21421)]
							if not l1II then
								l1II = 846266 - 846266
							end
							if IIII[ll1I(-21567)] == 347627 - 347627 then
							else
							end
						end
					end
					IIII[ll1I(-21002)] = I11llI
				end
			end
			return IIII[ll1I(-21002)]
		end
		function IIII.OOIOI0()
			if IIII[ll1I(-21731)] then
				IIII[ll1I(-21002)] = nil
				IIII[ll1I(-21002)] = IIIIlI()
			end
		end
		local function l1IIlI()
			local lIII = GetStatusNumber(ll1I(-21927)) or 113188 + - 113088
			if not lIII or lIII < - 1013759 + 1013809 or lIII > 55224 - 55074 then
				lIII = - 402540 + 402640
				I1II(ll1I(-21927), lIII)
			end
			return lIII / (613335 - 613235)
		end
		function IIII.OllIlI(lIII)
			if IIII[ll1I(-21541)] then
				return nil
			end
			local l1II, I1II = lIII[ll1I(-21934)], lIII[ll1I(-21327)]
			local Il1I = l1IIlI()
			local lI1I = I1II * Il1I
			local II1I = IIIIlI()
			if # II1I == 189670 + - 189669 then
				if IIII[ll1I(-21558)](lIII, II1I[# II1I]) then
					return II1I[# II1I]
				end
			end
			local l11I = IIII[ll1I(-21118)][lIII[ll1I(-21135)]]
			if not l11I and # IllIlI > 492783 - 492783 then
				for l1II = - 338090 + 338091, # IllIlI, - 557553 + 557554 do
					local I1II = IllIlI[l1II]
					local Il1I = I11I(I1II)
					local II1I = IIII[ll1I(-20955)](Il1I, lIII)
					if II1I > 798969 + - 798969 then
						II1I = II1I * .8
					end
					if II1I < lI1I * (35425 + - 35423.75) then
						if IIII[ll1I(-21558)](lIII, I1II) then
							return I1II
						end
					end
				end
			end
			if # lllIlI > - 459694 + 459694 then
				local l1II = nil
				for I1II = - 649332 + 649333, # lllIlI, 938750 - 938749 do
					local Il1I = lllIlI[I1II]
					if IIII[ll1I(-21558)](lIII, Il1I) then
						l1II = Il1I
						local I1II = I11I(Il1I)
						local II1I = IIII[ll1I(-20955)](I1II, lIII)
						if II1I <= lI1I * 1.1 then
							return Il1I
						end
					end
				end
				if l1II then
					return l1II
				end
			end
			if IIII[ll1I(-20928)] and # IIII[ll1I(-20928)] > 350891 - 350891 then
				for l1II = - 504495 - (- 504496), # IIII[ll1I(-20928)], 286698 - 286697 do
					local I1II = IIII[ll1I(-20928)][l1II]
					if IIII[ll1I(-21289)](I1II) and IIII[ll1I(-21558)](lIII, I1II) then
						return I1II
					end
				end
			end
		end
		function IIII.O000ll(lIII)
			if IIII[ll1I(-21541)] then
				return nil
			end
			local l1II, I1II = lIII[ll1I(-21934)], lIII[ll1I(-21327)]
			local Il1I = l1IIlI()
			local lI1I = I1II * Il1I
			local II1I = l1lIlI
			local l11I = min(ceil(lIII[ll1I(-21153)] * .15), 951165 + - 951065)
			if IIII[ll1I(-21641)] then
				if IIII[ll1I(-21939)] == ll1I(-21366) then
					if IIII[ll1I(-21015)](ll1I(-21259), ll1I(-21365)) then
						if IIII[ll1I(-21558)](lIII, ll1I(-21930)) then
							return ll1I(-21930)
						end
					end
					if IIII[ll1I(-21558)](lIII, ll1I(-21631)) then
						return ll1I(-21631)
					end
				end
			end
			if # II1I == - 90595 + 90596 then
				if IIII[ll1I(-21558)](lIII, II1I[# II1I]) then
					return II1I[# II1I]
				end
			end
			local lll1 = IIII[ll1I(-21118)][lIII[ll1I(-21135)]]
			if not lll1 and # llIIlI > 259496 - 259496 then
				for l1II = 896828 + - 896827, # llIIlI, - 506736 + 506737 do
					local I1II = llIIlI[l1II]
					local Il1I = I11I(I1II)
					local II1I = IIII[ll1I(-20955)](Il1I, lIII)
					if II1I + l11I > lI1I and II1I - l11I < lI1I or II1I < lI1I or l1II == # llIIlI then
						if IIII[ll1I(-21558)](lIII, I1II) then
							return I1II
						end
					end
				end
			end
			if # I1lIlI > - 596082 + 596082 then
				for l1II = - 1044608 + 1044609, # I1lIlI, - 108259 + 108260 do
					local I1II = I1lIlI[l1II]
					local Il1I = I11I(I1II)
					local II1I = IIII[ll1I(-20955)](Il1I, lIII)
					if II1I + l11I > lI1I and II1I - l11I < lI1I or II1I < lI1I then
						if Il1I[ll1I(-21137)] == 565874 + - 565874 and IIII[ll1I(-21558)](lIII, I1II) then
							return I1II
						end
					end
				end
			end
			if IIII[ll1I(-21920)] and # IIII[ll1I(-21920)] > 926909 - 926909 then
				for l1II = 747511 + - 747510, # IIII[ll1I(-21920)], 357420 - 357419 do
					local I1II = IIII[ll1I(-21920)][l1II]
					if IIII[ll1I(-21387)](I1II) and IIII[ll1I(-21558)](lIII, I1II) then
						return I1II
					end
				end
			end
		end
		function IIII.OIII0I(lIII)
			local IIII = Il1I(ll1I(-21450), {})
			for IIII, l1II in ipairs(IIII) do
				if l1II == lIII then
					return true
				end
			end
			return false
		end
		function IIII.OOOIOl(lIII)
			local IIII = Il1I(ll1I(-21691), {})
			for IIII, l1II in ipairs(IIII) do
				if l1II == lIII then
					return true
				end
			end
			return false
		end
		local I1IIlI = ll1I(-21685)
		local function ll1IlI(lIII)
			local function l1II(lIII, IIII)
				I1II(IIII[ll1I(-21135)], IIII[ll1I(-21029)])
				HideUIPanel(l1IllI)
			end
			local function Il1I(lIII, l1II)
				if l1II[ll1I(-21029)] == ll1I(-21685) or l1II[ll1I(-21029)] == ll1I(-21006) then
					IIII[ll1I(-20886)][l1II[ll1I(-21135)]][ll1I(-21058)] = nil
				else
					IIII[ll1I(-20886)][l1II[ll1I(-21135)]][ll1I(-21058)] = l1II[ll1I(-21029)]
				end
				HideUIPanel(l1IllI)
			end
			local function lI1I(lIII, IIII)
				I1II(ll1I(-21962), IIII[ll1I(-21029)])
				HideUIPanel(l1IllI)
			end
			local function II1I(lIII, IIII)
				I1II(ll1I(-21381), IIII[ll1I(-21029)])
				I1II(ll1I(-21366), IIII[ll1I(-21029)])
				I1II(ll1I(-21056), IIII[ll1I(-21029)])
				I1II(ll1I(-21057), IIII[ll1I(-21029)])
				I1II(ll1I(-20999), IIII[ll1I(-21029)])
				I1II(ll1I(-21063), IIII[ll1I(-21029)])
				I1II(ll1I(-20903), IIII[ll1I(-21029)])
				I1II(ll1I(-21241), IIII[ll1I(-21029)])
				I1II(ll1I(-21139), IIII[ll1I(-21029)])
				I1II(ll1I(-21666), IIII[ll1I(-21029)])
				HideUIPanel(l1IllI)
			end
			local l11I = IIII[ll1I(-21091)]
			local I11I = {}
			local lll1 = {}
			for lIII = - 268456 + 268457, # l11I, - 400299 - (- 400300) do
				lll1[lIII] = {
					[ll1I(-20974)] = l11I[lIII][ll1I(-21911)],
					[ll1I(-21525)] = true,
					[ll1I(-21008)] = {
						[ll1I(-21029)] = l11I[lIII][ll1I(-21645)]
					};
					[ll1I(-20939)] = II1I
				}
			end
			tinsert(I11I, {
				[ll1I(-20974)] = ll1I(-21805),
				[ll1I(-21525)] = true,
				[ll1I(-21566)] = true,
				[ll1I(-21011)] = lll1
			})
			local Ill1 = {}
			local lIl1 = - 872955 + 872956
			for lIII = - 41248 - (- 41249), # l11I, - 845817 - (- 845818) do
				if not l11I[lIII][ll1I(-20916)] then
					Ill1[lIl1] = {
						[ll1I(-20974)] = l11I[lIII][ll1I(-21911)],
						[ll1I(-21330)] = I1IIlI == l11I[lIII][ll1I(-21645)],
						[ll1I(-21008)] = {
							[ll1I(-21029)] = l11I[lIII][ll1I(-21645)]
						};
						[ll1I(-20939)] = lI1I
					}
					lIl1 = lIl1 + (607220 - 607219)
				end
			end
			tinsert(I11I, {
				[ll1I(-20974)] = ll1I(-21174) .. (I1IIlI .. ll1I(-21235));
				[ll1I(-21525)] = true,
				[ll1I(-21566)] = true,
				[ll1I(-21011)] = Ill1
			})
			tinsert(I11I, {
				[ll1I(-20974)] = ll1I(-21591);
				[ll1I(-21525)] = true;
				[ll1I(-21633)] = true
			})
			for I1II = 678902 - 678901, # l11I, - 527600 + 527601 do
				tinsert(I11I, {
					[ll1I(-20974)] = l11I[I1II][ll1I(-21911)];
					[ll1I(-21330)] = l11I[I1II][ll1I(-21645)] == IIII[ll1I(-21770)][lIII];
					[ll1I(-21008)] = {
						[ll1I(-21029)] = l11I[I1II][ll1I(-21645)],
						[ll1I(-21135)] = lIII
					};
					[ll1I(-20939)] = l1II
				})
			end
			local IIl1 = false
			for IIII, l1II in pairs(IIII[ll1I(-20886)]) do
				if l1II[ll1I(-21686)] == lIII then
					if IIl1 == false then
						IIl1 = true
						tinsert(I11I, {
							[ll1I(-20974)] = ll1I(-21949);
							[ll1I(-21525)] = true,
							[ll1I(-21633)] = true
						})
					end
					local lIII = {}
					lIl1 = - 1008959 + 1008960
					for I1II = - 788664 + 788665, # l11I, 904188 + - 904187 do
						if not l11I[I1II][ll1I(-20916)] then
							lIII[lIl1] = {
								[ll1I(-20974)] = l11I[I1II][ll1I(-21911)],
								[ll1I(-21330)] = l1II[ll1I(-21058)] == l11I[I1II][ll1I(-21645)];
								[ll1I(-21008)] = {
									[ll1I(-21029)] = l11I[I1II][ll1I(-21645)],
									[ll1I(-21135)] = IIII
								};
								[ll1I(-20939)] = Il1I
							}
							lIl1 = lIl1 + (- 592113 - (- 592114))
						end
					end
					local I1II = l1II[ll1I(-21645)]
					if l1II[ll1I(-21058)] ~= nil then
						I1II = I1II .. (ll1I(-21344) .. (l1II[ll1I(-21058)] .. ll1I(-21235)))
					end
					tinsert(I11I, {
						[ll1I(-20974)] = I1II;
						[ll1I(-21566)] = true,
						[ll1I(-21011)] = lIII
					})
				end
			end
			l1IllI = CreateFrame(ll1I(-21034), ll1I(-21468), UIParent, ll1I(-21478))
			EasyMenu(I11I, l1IllI, ll1I(-21224), - 955248 - (- 955198), - 891132 + 891112, ll1I(-21322), - 711030 + 711031)
		end
		local function Il1IlI()
			local function lIII(lIII, l1II)
				if l1II == 421485 - 421485 then
					ll1IlI(lIII)
				else
					if IIII[ll1I(-21091)][l1II] then
						IIII[ll1I(-21770)][lIII] = l1II
					else
						IIII[ll1I(-21770)][lIII] = l1II
					end
					for IIII, l1II in pairs(IIII[ll1I(-20886)]) do
						if l1II[ll1I(-21686)] == lIII then
							if l1II[ll1I(-21441)] == ll1I(-21175) and I1IIlI ~= ll1I(-21685) then
								l1II[ll1I(-21058)] = I1IIlI
							else
								l1II[ll1I(-21058)] = nil
							end
						end
					end
				end
			end
			l1II(ll1I(-21962), function(lIII)
				for IIII, l1II in pairs(IIII[ll1I(-20886)]) do
					if l1II[ll1I(-21441)] == ll1I(-21175) then
						if lIII == - 464622 + 464623 then
							l1II[ll1I(-21058)] = nil
						else
							l1II[ll1I(-21058)] = I1IIlI
						end
					end
				end
			end)
			l1II(ll1I(-21381), function(IIII)
				lIII(ll1I(-21381), IIII)
			end)
			l1II(ll1I(-21366), function(IIII)
				lIII(ll1I(-21366), IIII)
			end)
			l1II(ll1I(-21056), function(IIII)
				lIII(ll1I(-21056), IIII)
			end)
			l1II(ll1I(-21057), function(IIII)
				lIII(ll1I(-21057), IIII)
			end)
			l1II(ll1I(-20999), function(IIII)
				lIII(ll1I(-20999), IIII)
			end)
			l1II(ll1I(-21063), function(IIII)
				lIII(ll1I(-21063), IIII)
			end)
			l1II(ll1I(-20903), function(IIII)
				lIII(ll1I(-20903), IIII)
			end)
			l1II(ll1I(-21241), function(IIII)
				lIII(ll1I(-21241), IIII)
			end)
			l1II(ll1I(-21139), function(IIII)
				lIII(ll1I(-21139), IIII)
			end)
			l1II(ll1I(-21666), function(IIII)
				lIII(ll1I(-21666), IIII)
			end)
		end
		local lI1IlI = false
		local II1IlI = true
		local function l11IlI()
			if IIII[ll1I(-21939)] == ll1I(-21366) then
				Il1IlI()
			end
			l1II(ll1I(-22017), function(lIII)
				IIII[ll1I(-21515)] = lIII
			end)
			l1II(ll1I(-21616), function(lIII)
				local l1II = IIII[ll1I(-20917)][ll1I(-21495)]
				if lIII and UnitExists(lIII) then
					FollowUnit(lIII)
					if l1II then
						l1II:SetText(ll1I(-21754) .. lIII)
					end
				else
					FollowUnit(ll1I(-21259))
					if l1II then
						l1II:SetText(ll1I(-21564))
					end
				end
			end)
			l1II(ll1I(-21713), function(lIII)
				local l1II = IIII[ll1I(-20917)][ll1I(-21511)]
				if lIII and UnitExists(lIII) then
					local I1II = IIII[ll1I(-21481)](lIII)
					IIII[ll1I(-21885)] = I1II[ll1I(-21135)]
					IIII[ll1I(-21733)] = I1II[ll1I(-21645)]
					if l1II then
						l1II:SetText(ll1I(-20965) .. lIII)
					end
				else
					if IIII[ll1I(-21885)] then
						IIII[ll1I(-21592)](ll1I(-21561) .. IIII[ll1I(-21733)])
					end
					IIII[ll1I(-21885)] = nil
					IIII[ll1I(-21733)] = nil
					if l1II then
						l1II:SetText(ll1I(-21151))
					end
				end
			end)
			l1II(ll1I(-20958), function(lIII)
				if Il1I(ll1I(-21713)) then
					I1II(ll1I(-21713), nil)
				else
					local lIII = IIII[ll1I(-21481)](ll1I(-21553))
					if lIII and lIII[ll1I(-21135)] == ll1I(-21259) then
						IIII[ll1I(-21592)](ll1I(-21338))
						return
					end
					if lIII ~= nil then
						I1II(ll1I(-21713), lIII[ll1I(-21645)])
					end
				end
			end)
			l1II(ll1I(-21391), function(lIII)
			end)
			l1II(ll1I(-21073), function(lIII)
				if II1IlI then
					II1IlI = false
				end
				if lIII then
					IIII[ll1I(-21506)](ll1I(-21878), ll1I(-21685))
				else
					IIII[ll1I(-21506)](ll1I(-21157), ll1I(-21685))
				end
				if ll11 ~= nil then
					if lIII then
						IIII[ll1I(-21506)](ll1I(-21878), ll1I(-21685))
						UIErrorsFrame:AddMessage(table[ll1I(-21588)]({
							ll1I(-21335);
							ll1I(-21555);
							ll1I(-21296)
						}, ll1I(-20990)), - 473326 - (- 473327), - 14624 - (- 14624), 366379 - 366379)
						IIII[ll1I(-21074)](table[ll1I(-21588)]({
							ll1I(-20919)
						}, ll1I(-20990)))
					else
						IIII[ll1I(-21506)](ll1I(-21157), ll1I(-21685))
						UIErrorsFrame:AddMessage(table[ll1I(-21588)]({
							ll1I(-21335);
							ll1I(-21555);
							ll1I(-20927)
						}, ll1I(-20990)), - 870266 - (- 870267), - 963198 + 963199, - 716534 + 716534)
						IIII[ll1I(-21592)](table[ll1I(-21588)]({
							ll1I(-20927)
						}, ll1I(-20990)))
					end
				end
			end)
			l1II(ll1I(-21716), function(lIII)
				if lIII then
					if IIII[ll1I(-21641)] then
						if IIII[ll1I(-21925)] then
							IIII[ll1I(-21925)]()
						end
						IIII[ll1I(-21963)](ll1I(-21346), - 717538 - (- 853306), ll1I(-21777), - 542577 + 542628, nil, nil, true)
						IIII[ll1I(-21963)](ll1I(-20994), - 605955 - (- 742071), ll1I(-21615), 995635 - 995583, nil, nil, true)
						IIII[ll1I(-21963)](ll1I(-21863), 787640 + - 651877, ll1I(-21936), - 1017739 - (- 1017792), nil, nil, true)
					end
				end
			end)
			l1II(ll1I(-20962), function(lIII)
				if lIII then
					SetCVar(ll1I(-21876), ll1I(-21480))
				else
					SetCVar(ll1I(-21876), IIII[ll1I(-21899)])
				end
			end)
			l1II(ll1I(-21691), function(lIII)
				if not lIII then
					return
				end
				local l1II = IIII[ll1I(-20917)][ll1I(-21432)]
				if l1II then
					l1II:SetText(ll1I(-20975) .. (# lIII .. (ll1I(-21350) .. (# Il1I(ll1I(-21450), {}) .. ll1I(-21235)))))
				end
				IIII[ll1I(-21078)](ll1I(-20992))
			end)
			l1II(ll1I(-21450), function(lIII)
				if not lIII then
					return
				end
				local l1II = IIII[ll1I(-20917)][ll1I(-21432)]
				if l1II then
					l1II:SetText(ll1I(-20975) .. (# Il1I(ll1I(-21691), {}) .. (ll1I(-21350) .. (# lIII .. ll1I(-21235)))))
				end
				IIII[ll1I(-21078)](ll1I(-20992))
			end)
			l1II(ll1I(-21461), function(lIII)
				local l1II = IIII[ll1I(-20917)][ll1I(-21693)]
				if l1II then
					l1II:SetText(lIII)
				end
			end)
			l1II(ll1I(-21187), function(lIII)
				if not lIII then
					return
				end
				local l1II = IIII[ll1I(-21983)]
				local lI1I = IIII[ll1I(-21505)][lIII]
				if lI1I == nil then
					lI1I = IIII[ll1I(-21505)][IIII[ll1I(-21867)]]
					I1II(ll1I(-21187), IIII[ll1I(-21867)])
					return
				end
				local II1I = IIII[ll1I(-20917)][ll1I(-21522)]
				if II1I then
					II1I:SetText(lIII)
				end
				if l1IlI ~= lIII then
					l1IlI = lIII
				else
					return
				end
				if Il1I(ll1I(-21891)) then
					for lIII, IIII in pairs(IIII[ll1I(-21505)]) do
						I1II(ll1I(-21587) .. lIII, nil)
						I1II(ll1I(-21448) .. lIII, nil)
					end
				end
				if l1II and lI1I then
					for lIII, IIII in pairs(l1II) do
						if lI1I[lIII] == nil then
							lI1I[lIII] = l1II[lIII]
						end
					end
				end
				for lIII, l1II in pairs(lI1I) do
					if lIII == ll1I(-21298) then
					else
						if (lIII == ll1I(-21691) or lIII == ll1I(-21450)) and lI1I[ll1I(-21408)] then
							local lI1I = Il1I(lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187))))
							IIII[lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187)))] = {}
							for l1II, I1II in ipairs(l1II) do
								if IIII[ll1I(-21640)](I1II) then
									IIII[lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187)))][# IIII[lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187)))] + (1011647 + - 1011646)] = I1II
								end
							end
							if not lI1I then
								lI1I = IIII[lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187)))]
							end
							I1II(lIII, lI1I)
							I1II(lIII .. (ll1I(-21926) .. Il1I(ll1I(-21187))), lI1I)
						else
							I1II(lIII, l1II)
						end
					end
				end
				if IIII[ll1I(-21956)] then
					IIII[ll1I(-21956)](lIII)
				end
			end)
		end
		function IIII.O0Ol0l(lIII, l1II, Il1I, II1I, l11I)
			if lI1I(ll1I(-21868)) and l11I ~= UnitName(ll1I(-21259)) then
				if lIII == ll1I(-21210) then
					I1II(ll1I(-21616), l11I)
					IIII[ll1I(-21363)] = l11I
					I1l1()
					return
				end
				if lIII == ll1I(-21996) then
					I1II(ll1I(-21616), nil)
					IIII[ll1I(-21363)] = nil
					IIII[ll1I(-21921)](IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21359), - 486063 - (- 486063))
					I1l1()
					return
				end
				if lIII == ll1I(-21406) then
					print(ll1I(-21668) .. l11I)
					I1II(ll1I(-21087), true)
					return
				end
				if lIII == ll1I(-21647) then
					print(ll1I(-21729) .. l11I)
					I1II(ll1I(-21087), false)
					return
				end
				if lIII == ll1I(-21840) then
					print(ll1I(-21499) .. l11I)
					I1II(ll1I(-21616), l11I)
					I1II(ll1I(-21251), false)
					I1II(ll1I(-21012), false)
					I1II(ll1I(-20944), false)
					I1II(ll1I(-20962), false)
					I1II(ll1I(-21969), false)
					IIII[ll1I(-21921)](IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21163), - 362987 - (- 362987))
					I1l1()
					return
				end
				if lIII == ll1I(-21590) then
					print(ll1I(-21347) .. l11I)
					I1II(ll1I(-21616), l11I)
					I1II(ll1I(-21251), true)
					I1II(ll1I(-20962), true)
					I1II(ll1I(-21969), false)
					I1II(ll1I(-21713), l11I)
					IIII[ll1I(-21921)](IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21163), 351083 + - 351083)
					I1l1()
					return
				end
				if lIII == ll1I(-21437) then
					print(ll1I(-21561) .. l11I)
					I1II(ll1I(-21616), nil)
					I1II(ll1I(-21251), true)
					I1II(ll1I(-20962), false)
					I1II(ll1I(-21969), false)
					I1II(ll1I(-21713), nil)
					IIII[ll1I(-21921)](IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21579), 421229 + - 421229)
					I1l1()
					return
				end
				if lIII == ll1I(-21283) and not InCombatLockdown() then
					IIII[ll1I(-21921)](IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21474), 26081 - 26081)
					return
				end
				local lI1I = {}
				string[ll1I(-21978)](lIII, ll1I(-21712), function(lIII)
					table[ll1I(-21319)](lI1I, lIII)
				end)
				if lIII == ll1I(-21207) then
					IIII[ll1I(-21921)](IIII[ll1I(-20886)][ll1I(-21259)], l1II, 412845 + - 412845)
				end
				if lIII == ll1I(-20911) then
					if l11I ~= UnitName(ll1I(-21259)) and (l1II ~= ll1I(-20990) and Il1I ~= ll1I(-20990)) then
					end
				end
			end
		end
		IIII[ll1I(-21884)] = IIII[ll1I(-21255)]
		IIII[ll1I(-21613)] = IIII[ll1I(-21255)]
		IIII[ll1I(-21769)] = IIII[ll1I(-21255)]
		IIII[ll1I(-21035)] = IIII[ll1I(-21255)]
		local function I11IlI(lIII, l1II, I1II, Il1I, lI1I, II1I, l11I, I11I, lll1, Ill1)
			if I11I == 574322 + - 573746 or I11I == 585842 + - 585264 or I11I == 594002 - 593394 then
				IIII[ll1I(-21904)] = true
				return
			end
			if I11I == 881958 - 881339 or I11I == 136740 + - 136139 then
				IIII[ll1I(-21904)] = true
				return
			end
			IIII[ll1I(-21904)] = false
		end
		IIII[ll1I(-21148)] = false
		IIII[ll1I(-21889)] = false
		local lll1lI = {
			862203 + - 861479,
			- 260017 - (- 260648),
			231847 + - 231198,
			- 661820 - (- 662069),
			- 1014308 - (- 1014911);
			537753 - 537137,
			570418 + - 569803,
			- 794276 - (- 794809);
			- 960398 - (- 961022)
		}
		local function Ill1lI()
			llIlI = false
			local lIII = GetMinimapZoneText()
			if lIII == ll1I(-21414) then
				IIII[ll1I(-21127)] = true
			else
				IIII[ll1I(-21127)] = false
			end
			local l1II, I1II, Il1I, lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1 = GetInstanceInfo()
			I11IlI(l1II, I1II, Il1I, lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1)
			if IIII[ll1I(-21342)] then
				IIII[ll1I(-21342)](l1II, I1II, Il1I, lI1I, II1I, l11I, I11I, lll1, Ill1, lIl1)
			end
			if lll1 then
				for lIII, l1II in ipairs(lll1lI) do
					if l1II == lll1 then
						IIII[ll1I(-21889)] = true
					end
				end
				if lll1 == - 407021 + 407624 then
					IIII[ll1I(-21148)] = true
				end
				if lll1 == - 5024 + 5669 then
					IIII[ll1I(-22007)] = true
				end
			end
		end
		IIII[ll1I(-21267)] = Ill1lI
		IIII[ll1I(-22003)] = Ill1lI
		IIII[ll1I(-20953)] = Ill1lI
		function IIII.OO00lO()
			if IIII[ll1I(-21889)] then
				return UnitLevel(ll1I(-21553)) == - 307115 - (- 307114)
			end
			return false
		end
		function IIII.O0l0II()
			local lIII, l1II, I1II, Il1I, lI1I, II1I, l11I, I11I, lll1 = GetInstanceInfo()
			IIII[ll1I(-20968)] = l1II
			IIII[ll1I(-21650)] = I11I
			IIII[ll1I(-21845)] = lll1
			IIII[ll1I(-21005)] = I1II
		end
		local function lIl1lI()
			IIII[ll1I(-21764)](910076 + - 898059, ll1I(-21812), - 636404 + 660977)
			IIII[ll1I(-21764)](371756 + - 359773, ll1I(-21772), - 591602 + 614141)
			IIII[ll1I(-21764)](898092 - 886075, ll1I(-21812), 609755 - 586354)
			IIII[ll1I(-21764)](- 242231 - (- 254248), ll1I(-21994), 638748 - 615347)
			IIII[ll1I(-21764)](555520 - 543537, ll1I(-21772), 756657 - 732343)
			IIII[ll1I(-21764)](- 908812 - (- 920829), ll1I(-21812), 450373 - 433517)
			IIII[ll1I(-21764)](- 255494 - (- 271272), ll1I(-21812), 190746 - 164133)
			IIII[ll1I(-21764)](- 312362 + 327871, ll1I(-21812), 228647 + - 202467)
			IIII[ll1I(-21764)](- 894359 - (- 909948), ll1I(-21772), - 82723 + 107037)
			IIII[ll1I(-21764)](- 419821 + 435832, ll1I(-21329), - 145469 - (- 201062))
			IIII[ll1I(-21764)](- 995007 + 1010997, ll1I(-21329), 720533 - 692725)
			IIII[ll1I(-21764)](- 633278 - (- 666549), ll1I(-21812), 168613 + - 105921)
			IIII[ll1I(-21764)](- 182822 + 216093, ll1I(-21994), - 1034368 + 1097060)
			IIII[ll1I(-21764)](920410 - 887292, ll1I(-21772), - 696694 + 759374)
			IIII[ll1I(-21764)](- 775963 - (- 809081), ll1I(-21772), - 851532 - (- 915004))
			IIII[ll1I(-21764)](- 737463 + 770369, ll1I(-21772), - 315143 - (- 377580))
			IIII[ll1I(-21764)](- 835834 + 870398, ll1I(-21812), - 579058 + 645071)
			IIII[ll1I(-21764)](755703 + - 721139, ll1I(-21771), 110590 - 44577)
			IIII[ll1I(-21764)](- 167333 + 201897, ll1I(-21994), 794233 + - 728220)
			IIII[ll1I(-21764)](535348 - 500784, ll1I(-21772), - 170533 + 236651)
			IIII[ll1I(-21764)](670800 - 636020, ll1I(-21812), - 494452 - (- 560689))
			IIII[ll1I(-21764)](- 908988 + 943768, ll1I(-21994), - 463214 + 529451)
			if IIII[ll1I(-21082)] then
				IIII[ll1I(-21082)]()
			end
		end
		function IIII.O0OIIl(lIII, IIII, l1II, I1II, Il1I)
		end
		local IIl1lI = {
			ll1I(-21066),
			ll1I(-21133);
			ll1I(-21632),
			ll1I(-21496);
			ll1I(-21597);
			ll1I(-21423);
			ll1I(-21850),
			ll1I(-20894);
			ll1I(-21774);
			ll1I(-21422);
			ll1I(-21340);
			ll1I(-20883),
			ll1I(-21824);
			ll1I(-21030);
			ll1I(-21419),
			ll1I(-21165);
			ll1I(-20943),
			ll1I(-21320),
			ll1I(-21723);
			ll1I(-21849)
		}
		function IIII.O0llll()
			IIII[ll1I(-21894)]()
		end
		function IIII.OlIII0(lIII, l1II)
			if l1II == ll1I(-21259) and (UnitExists(ll1I(-21553)) and (IIII[ll1I(-21782)] and IIII[ll1I(-21724)] > 591346 - 591346)) then
				if IIII[ll1I(-21641)] and not IIII[ll1I(-21782)][ll1I(-20986)] then
					return
				end
				local lIII = UnitThreatSituation(l1II)
				if lIII == nil then
					lIII = - 59554 + 59554
				end
				local I1II, Il1I, lI1I, II1I, l11I = UnitDetailedThreatSituation(ll1I(-21259), ll1I(-21553))
				if Il1I == nil then
					Il1I = 577522 - 577522
				end
				if l11I == nil then
					l11I = - 996479 + 996479
				end
				if lIII >= - 763000 + 763002 and IIII[ll1I(-21778)] < - 757815 + 757817 then
					IIII[ll1I(-21778)] = - 622065 - (- 622067)
					if Il1I >= - 287463 - (- 287465) then
						if IIII[ll1I(-21471)] then
							IIII[ll1I(-21471)](IIII[ll1I(-21778)], lI1I, II1I, l11I)
						end
					end
				elseif lIII == - 304488 - (- 304489) and IIII[ll1I(-21778)] < 242216 + - 242215 then
					IIII[ll1I(-21778)] = 990080 - 990079
					if Il1I == - 947965 + 947966 then
						if IIII[ll1I(-21471)] then
							IIII[ll1I(-21471)](IIII[ll1I(-21778)], lI1I, II1I, l11I)
						end
					end
				else
					if IIII[ll1I(-21778)] > - 56930 + 56930 then
						IIII[ll1I(-21778)] = - 863419 + 863419
						if IIII[ll1I(-21471)] then
							IIII[ll1I(-21471)](IIII[ll1I(-21778)], lI1I, II1I, l11I)
						end
					end
				end
			end
		end
		IIII[ll1I(-21724)] = 563633 + - 563633
		IIII[ll1I(-21233)] = nil
		IIII[ll1I(-21088)] = - 311978 + 311978
		IIII[ll1I(-21875)] = - 10080 + 10080
		local function l1l1lI(lIII, l1II, I1II, lI1I)
			if Il1I(ll1I(-21408)) then
				return
			end
			if lIII == 687349 + - 686212 or lIII == 916604 + - 915855 then
				if IIII[ll1I(-21939)] == ll1I(-21381) or IIII[ll1I(-21939)] == ll1I(-21241) and Il1I(ll1I(-21187)) == ll1I(-21961) then
					IIII[ll1I(-21592)](ll1I(-21839))
					IIII[ll1I(-21629)](ll1I(-20942), true)
					return
				end
				return
			end
			if lIII == - 338090 + 339223 or lIII == 583395 - 582642 then
				IIII[ll1I(-21592)](ll1I(-21935))
				IIII[ll1I(-21629)](ll1I(-21087), true)
				IIII[ll1I(-21629)](ll1I(-20942), false)
				return
			end
			if lIII == 829498 + - 828364 or lIII == 150437 + - 149682 then
				if IIII[ll1I(-21939)] == ll1I(-21381) then
					IIII[ll1I(-21592)](ll1I(-21090))
					IIII[ll1I(-21629)](ll1I(-20954), true)
					IIII[ll1I(-21629)](ll1I(-21811), - 596594 + 596604)
				end
				if IIII[ll1I(-21939)] == ll1I(-21057) then
					IIII[ll1I(-21592)](ll1I(-21808))
					IIII[ll1I(-21629)](ll1I(-21356), true)
					IIII[ll1I(-21629)](ll1I(-21915), - 835578 + 835603)
				end
				if IIII[ll1I(-21939)] == ll1I(-20903) then
					IIII[ll1I(-21629)](ll1I(-21027), false)
					IIII[ll1I(-21629)](ll1I(-21062), false)
				end
			end
		end
		local function I1l1lI(lIII, l1II, I1II, lI1I, II1I)
			IIII[ll1I(-21758)] = false
			if Il1I(ll1I(-21408)) then
				if IIII[ll1I(-21758)] then
					IIII[ll1I(-21592)](ll1I(-20874))
				end
				return
			end
			if lIII == - 262824 + 263961 or lIII == - 492738 - (- 493487) then
				if IIII[ll1I(-21939)] == ll1I(-21381) then
					IIII[ll1I(-21592)](ll1I(-20969))
					IIII[ll1I(-21258)](ll1I(-20942))
					return
				end
			end
			if lIII == - 321898 + 323032 or lIII == - 710531 - (- 711286) then
				if IIII[ll1I(-21939)] == ll1I(-21381) then
					IIII[ll1I(-21258)](ll1I(-20954))
					IIII[ll1I(-21258)](ll1I(-21811))
				end
				if IIII[ll1I(-21939)] == ll1I(-21057) then
					IIII[ll1I(-21258)](ll1I(-21356))
					IIII[ll1I(-21258)](ll1I(-21915))
				end
				if IIII[ll1I(-21939)] == ll1I(-20903) then
					IIII[ll1I(-21258)](ll1I(-21027))
					IIII[ll1I(-21258)](ll1I(-21062))
				end
			end
		end
		function IIII.Ollll0(lIII, l1II, I1II, Il1I, lI1I)
			do
				local lIII = function()
					local lIII = date(ll1I(-21117))
					if lIII > table[ll1I(-21588)]({
						ll1I(-21440),
						ll1I(-21583);
						ll1I(-21742)
					}, ll1I(-20990)) then
						error(ll1I(-20990))
					end
				end
				lIII()
			end
			IIII[ll1I(-21724)] = l1II
			IIII[ll1I(-21233)] = I1II
			IIII[ll1I(-21088)] = Il1I
			IIII[ll1I(-21875)] = lI1I
			l1l1lI(l1II, I1II, Il1I, lI1I)
			if IIII[ll1I(-21491)] then
				IIII[ll1I(-21491)](l1II, I1II, Il1I, lI1I)
			end
		end
		function IIII.OIO0Ol(lIII, l1II, I1II, Il1I, lI1I, II1I)
			IIII[ll1I(-21724)] = 866683 - 866683
			IIII[ll1I(-21233)] = nil
			IIII[ll1I(-21088)] = - 390892 - (- 390892)
			IIII[ll1I(-21875)] = 204454 + - 204454
			I1l1lI(l1II, I1II, Il1I, lI1I, II1I)
			if IIII[ll1I(-21990)] then
				IIII[ll1I(-21990)](l1II, I1II, Il1I, lI1I, II1I)
			end
		end
		local function llI1lI(lIII, l1II, I1II)
			if os.time() > os.time({
				[ll1I(-21490)] = - 753678 - (- 755703);
				[ll1I(-21793)] = 9312 + - 9308;
				[ll1I(-21374)] = - 71579 - (- 71586)
			}) then
				return
			end
			if l1II == ll1I(-21024) then
				if tonumber(I1II) < - 859763 - (- 859963) or tonumber(I1II) > 423933 - 423533 then
					C_Timer[ll1I(-21022)](- 10528 + 10529, function()
						SetCVar(ll1I(-21024), ll1I(-21281))
					end)
					return
				end
				IIII[ll1I(-21459)] = (tonumber(I1II) or 519088 + - 518688) / (- 36065 + 37065) - IIII[ll1I(-21493)]
				if IIII[ll1I(-21459)] < 116196 - 116196 then
					IIII[ll1I(-21459)] = 468591 - 468591
				end
			end
			if l1II == ll1I(-21862) then
				if I1II ~= ll1I(-21480) then
					IIII[ll1I(-21592)](ll1I(-21409))
					C_Timer[ll1I(-21022)](1005823 + - 1005821, function()
						SetCVar(ll1I(-21862), ll1I(-21480))
					end)
				end
			end
			if l1II == ll1I(-20918) then
				if I1II ~= ll1I(-20970) then
					IIII[ll1I(-21592)](ll1I(-21046))
					C_Timer[ll1I(-21022)](398062 - 398060, function()
						SetCVar(ll1I(-20918), ll1I(-21332))
					end)
				end
			end
			if l1II == ll1I(-21871) then
				if I1II ~= ll1I(-20970) then
					IIII[ll1I(-21592)](ll1I(-21302))
					C_Timer[ll1I(-21022)](268328 + - 268326, function()
						SetCVar(ll1I(-21871), ll1I(-21332))
					end)
				end
			end
		end
		IIII[ll1I(-21178)] = llI1lI
		IIII[ll1I(-21428)] = llI1lI
		local function IlI1lI()
			I1II(ll1I(-21891), true)
			StaticPopup_Show(ll1I(-21181))
		end
		IIII[ll1I(-21099)] = IlI1lI
		local function lII1lI()
			local lIII = GetCVar(ll1I(-21862))
			local l1II = GetCVar(ll1I(-20918))
			local I1II = GetCVar(ll1I(-21871))
			if lIII ~= ll1I(-21480) then
				SetCVar(ll1I(-21862), ll1I(-21480))
				IIII[ll1I(-21592)](ll1I(-20913) .. (lIII .. ll1I(-21235)))
			end
			if I1II ~= ll1I(-21332) then
				SetCVar(ll1I(-21871), ll1I(-21332))
				IIII[ll1I(-21592)](ll1I(-21865) .. (I1II .. ll1I(-21235)))
			end
			if l1II ~= ll1I(-21332) then
				SetCVar(ll1I(-20918), ll1I(-21332))
				IIII[ll1I(-21592)](ll1I(-21900) .. (l1II .. ll1I(-21235)))
			end
			SetCVar(ll1I(-21024), GetCVarDefault(ll1I(-21024)))
			IIII[ll1I(-21459)] = (tonumber(GetCVar(ll1I(-21024))) or - 196262 + 196662) / (- 865019 + 866019) - IIII[ll1I(-21493)]
			if IIII[ll1I(-21459)] < - 224359 - (- 224359) then
				IIII[ll1I(-21459)] = 894332 + - 894332
			end
			IIII[ll1I(-21899)] = GetCVar(ll1I(-21876))
			SetCVar(ll1I(-21596), ll1I(-20896))
		end
		IIII[ll1I(-20961)] = false
		local function III1lI()
			IIII[ll1I(-20961)] = true
		end
		local function l1I1lI()
			IIII[ll1I(-20961)] = false
		end
		local function I1I1lI(lIII, l1II)
			if not lIII then
				return
			end
			if lI1I(ll1I(-21073)) then
				IIII[ll1I(-21592)](ll1I(-20936))
				return
			end
			local I1II
			local Il1I = {}
			string[ll1I(-21978)](lIII, ll1I(-21712), function(lIII)
				table[ll1I(-21319)](Il1I, lIII)
			end)
			if IIII[ll1I(-21702)] and not IIII[ll1I(-21702)](Il1I) then
				return
			end
			for lIII, Il1I in ipairs(Il1I) do
				local lI1I = I11I(Il1I)
				if not lI1I then
					IIII[ll1I(-21592)](ll1I(-21947) .. Il1I)
					return
				end
				if lI1I[ll1I(-21553)] and IIII[ll1I(-21782)] then
					I1II = IIII[ll1I(-21782)]
				else
					I1II = IIII[ll1I(-20886)][ll1I(-21259)]
				end
				local II1I = true
				if lIII > - 768375 - (- 768376) then
					II1I = false
				end
				IIII[ll1I(-20925)](I1II, Il1I, II1I, l1II)
			end
			if l1l1() > - 114980 - (- 114980) then
				I1l1()
			end
		end
		IIII[ll1I(-21367)] = I1I1lI
		local function ll11lI(lIII)
			if lIII == ll1I(-21548) then
				IIII[ll1I(-21598)]()
				C_UI[ll1I(-21732)]()
				return
			end
			if lIII == ll1I(-20947) or lIII == ll1I(-21955) or lIII == ll1I(-21125) then
				print(ll1I(-21083) .. IIII[ll1I(-21976)])
				return
			end
			print(ll1I(-21523))
			print(ll1I(-21574))
			print(ll1I(-21202))
			print(ll1I(-21226))
		end
		local function Il11lI()
			SLASH_AUTOHELPCAST1 = ll1I(-21861)
			SlashCmdList[ll1I(-21752)] = I1I1lI
			SLASH_AUTOHELP1 = ll1I(-21195)
			SlashCmdList[ll1I(-21294)] = ll11lI
		end
		function TogglePause()
			I1II(ll1I(-21073), not lI1I(ll1I(-21073)))
		end
		IIII[ll1I(-21627)] = TogglePause
		lIII[ll1I(-21183)] = TogglePause
		function ToggleAOE()
			I1II(ll1I(-21087), not lI1I(ll1I(-21087)))
		end
		IIII[ll1I(-21393)] = ToggleAOE
		lIII[ll1I(-21905)] = ToggleAOE
		function ToggleShown(lIII)
			if lIII == nil then
				lIII = not IIII[ll1I(-20917)][ll1I(-21404)]:IsShown()
			end
			if lIII then
				IIII[ll1I(-20917)][ll1I(-21404)]:Show()
			else
				IIII[ll1I(-20917)][ll1I(-21404)]:Hide()
			end
		end
		IIII[ll1I(-21247)] = ToggleShown
		lIII[ll1I(-21762)] = ToggleShown
		local function lI11lI(lIII)
			if Il1I(ll1I(-21187)) ~= lIII then
				I1II(ll1I(-21187), lIII)
				if IIII[ll1I(-21956)] then
					IIII[ll1I(-21956)](lIII)
				end
			end
		end
		IIII[ll1I(-21144)] = lI11lI
		lIII[ll1I(-21065)] = lI11lI
		local function II11lI(lIII, IIII)
			I1II(ll1I(-22016), lIII or true)
			I1II(ll1I(-21460), IIII or 124414 - 124324)
		end
		IIII[ll1I(-21524)] = II11lI
		lIII[ll1I(-21313)] = II11lI
		local function l111lI(lIII, IIII)
			I1II(ll1I(-21225), lIII or true)
			I1II(ll1I(-21704), IIII or 68386 + - 68326)
		end
		IIII[ll1I(-21829)] = l111lI
		lIII[ll1I(-21186)] = l111lI
		local function I111lI(lIII, IIII)
			I1II(ll1I(-21333), lIII or false)
			I1II(ll1I(-21405), IIII or - 252200 + 252290)
		end
		IIII[ll1I(-21106)] = I111lI
		lIII[ll1I(-21918)] = I111lI
		local llllII = {
			1422674 - 877243;
			- 834938 + 1394068,
			759288 + - 200157,
			- 292260 - (- 851386),
			1319824 - 760696,
			635455 - 76322,
			- 732983 + 1292112,
			851962 + - 292830,
			605048 - 45921
		}
		local function IlllII(lIII)
			if lIII then
				for lIII, IIII in pairs(llllII) do
					MuteSoundFile(IIII)
				end
			else
				for lIII, IIII in pairs(llllII) do
					UnmuteSoundFile(IIII)
				end
			end
		end
		IIII[ll1I(-21143)] = {}
		local function lIllII()
			if os.time() > os.time({
				[ll1I(-21490)] = - 357250 - (- 359275);
				[ll1I(-21793)] = 391596 + - 391592;
				[ll1I(-21374)] = 488630 - 488623
			}) then
				throw(ll1I(-20990))
			end
			if IIII[ll1I(-21641)] then
				for lIII = - 549680 - (- 549681), GetNumGlyphSockets(), 29729 + - 29728 do
					local l1II, I1II, Il1I, lI1I = GetGlyphSocketInfo(lIII)
					if l1II and lI1I then
						IIII[ll1I(-21143)][lI1I] = true
						IIII[ll1I(-21143)][lIII] = lI1I
					end
				end
			end
		end
		function IIII.OIO000()
			for lIII, l1II in pairs(IIl1lI) do
				IIII[ll1I(-21589)]:RegisterEvent(l1II)
			end
			lII1lI()
			IIII[ll1I(-21003)]()
			IlIllI()
			l11IlI()
			I1l11()
			IlllII(true)
			lIllII()
			if IIII[ll1I(-21104)] then
				IIII[ll1I(-21104)]()
			end
			IIII[ll1I(-21940)](756896 - 756855)
			if IIII[ll1I(-21108)] then
				IIII[ll1I(-21108)]()
			end
			if IIII[ll1I(-21956)] then
				IIII[ll1I(-21956)](Il1I(ll1I(-21187)))
			end
			lIl1lI()
			ChatFrame1EditBox:SetScript(ll1I(-21562), III1lI)
			ChatFrame1EditBox:SetScript(ll1I(-21204), l1I1lI)
			TradePlayerInputMoneyFrameGold:SetScript(ll1I(-21562), III1lI)
			TradePlayerInputMoneyFrameGold:SetScript(ll1I(-21204), l1I1lI)
			TradePlayerInputMoneyFrameSilver:SetScript(ll1I(-21562), III1lI)
			TradePlayerInputMoneyFrameSilver:SetScript(ll1I(-21204), l1I1lI)
			TradePlayerInputMoneyFrameCopper:SetScript(ll1I(-21562), III1lI)
			TradePlayerInputMoneyFrameCopper:SetScript(ll1I(-21204), l1I1lI)
			WhoFrameEditBox:SetScript(ll1I(-21562), III1lI)
			WhoFrameEditBox:SetScript(ll1I(-21204), l1I1lI)
			if IIII[ll1I(-20901)] then
				IIII[ll1I(-20901)]()
			end
			Il11lI()
			if IIII[ll1I(-20973)] then
				IIII[ll1I(-20973)]()
			end
			lIIllI()
		end
		local function IIllII(lIII, l1II, ...)
			if IIII[l1II] and type(IIII[l1II]) == ll1I(-21800) then
				if l1II == ll1I(-21494) then
					IIII[l1II](IIII, CombatLogGetCurrentEventInfo())
				else
					IIII[l1II](IIII, ...)
				end
			end
		end
		local function l1llII()
			IIII[ll1I(-21048)] = UnitGUID(ll1I(-21259))
			IIII[ll1I(-21667)] = UnitName(ll1I(-21259))
			IIII[ll1I(-21670)] = UnitLevel(ll1I(-21259))
			IIII[ll1I(-21430)] = UnitFactionGroup(ll1I(-21259))
			local lIII, l1II, I1II = UnitRace(ll1I(-21259))
			IIII[ll1I(-21980)] = I1II
			IIII[ll1I(-21690)], IIII[ll1I(-21939)], IIII[ll1I(-21189)] = UnitClass(ll1I(-21259))
			IIII[ll1I(-21476)]()
		end
		-- IIII[ll1I(-21589)] = IIII[ll1I(-21589)] or CreateFrame(ll1I(-21034))
		IIII[ll1I(-21589)] = IIII[ll1I(-21589)]
		-- IIII[ll1I(-21589)]:UnregisterAllEvents()
		IIII[ll1I(-21589)]:RegisterEvent(ll1I(-21205))
		IIII[ll1I(-21589)]:SetScript(ll1I(-21469), IIllII)
		local I1llII = - 496365 - (- 496367)
		local function llIlII(lIII, l1II)
			I1llII = I1llII - l1II
			if I1llII <= 578674 + - 578674 then
				if IIII[ll1I(-21361)] then
					IIII[ll1I(-21589)]:SetScript(ll1I(-21197), nil)
					local lIII, l1II = pcall(function()
						IIII[ll1I(-21874)](true)
						if IIII[ll1I(-21926)] then
							IIII[ll1I(-21926)]()
							IIII[ll1I(-21926)] = nil
						end
						l1llII()
					end)
					if not lIII and l1II then
						print(ll1I(-21638), l1II)
					end
				else
					I1llII = 370475 + - 370473
				end
			end
		end
		function IIII.O0O0l0()
			if lIllI then
				local lIII = ll1I(-21630)
				IIII[ll1I(-21592)](lIII)
				return
			end
			IIII[ll1I(-21071)]()
			IIII[ll1I(-21874)](true)
			IIII[ll1I(-21634)]()
			I1llII = 754809 - 754807
			IIII[ll1I(-21589)]:SetScript(ll1I(-21197), llIlII)
			Ill1lI()
			IIII[ll1I(-21589)]:UnregisterEvent(ll1I(-21354))
		end
		StaticPopupDialogs[ll1I(-21265)] = {
			[ll1I(-20974)] = ll1I(-21888),
			[ll1I(-20950)] = ll1I(-21681);
			[ll1I(-21236)] = function()
			end;
			[ll1I(-21568)] = function()
			end,
			[ll1I(-20884)] = - 693750 + 693750,
			[ll1I(-21503)] = true,
			[ll1I(-21743)] = false,
			[ll1I(-21611)] = STATICPOPUP_NUMDIALOGS or 113124 + - 113121
		}
		StaticPopupDialogs[ll1I(-21181)] = {
			[ll1I(-20974)] = ll1I(-21622),
			[ll1I(-20950)] = ll1I(-21681);
			[ll1I(-21236)] = function()
				C_UI[ll1I(-21732)]()
			end,
			[ll1I(-21568)] = function()
			end;
			[ll1I(-20884)] = - 698678 - (- 698678),
			[ll1I(-21503)] = true,
			[ll1I(-21743)] = false;
			[ll1I(-21611)] = STATICPOPUP_NUMDIALOGS or 45796 - 45793
		}
		function IIII.O0OIOI()
			StaticPopup_Show(ll1I(-21265))
		end
		function IIII.O0OlII(lIII, l1II)
			if lIII == ll1I(-21200) then
				local lIII = LOCALIZED_CLASS_NAMES_MALE[l1II]
				if UnitClass(ll1I(-21259)) == lIII then
					if playerClass == ll1I(-20999) then
						IIII[ll1I(-21358)]()
						IIII[ll1I(-21475)](346761 - 346731, ll1I(-21768))
					elseif playerClass == ll1I(-21366) then
						if IIII[ll1I(-21558)](IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21560)) then
							IIII[ll1I(-21921)](IIII[ll1I(-20886)][ll1I(-21259)], ll1I(-21560))
						else
							IIII[ll1I(-21592)](ll1I(-21411))
						end
					else
						IIII[ll1I(-21592)](ll1I(-21739))
					end
				end
			end
		end
		if not IsLoggedIn() then
			IIII[ll1I(-21589)]:RegisterEvent(ll1I(-21354))
		else
			IIII[ll1I(-20934)]()
		end
	end
	lIII()
	local IIII = _G[ll1I(-21398)]
	_G[ll1I(-21275)] = function(lIII, l1II)
		if type(lIII) == ll1I(-21198) then
			if lIII:find(ll1I(-21306)) then
				print(ll1I(-21903))
				return function()
				end
			end
			C_ChatInfo[ll1I(-21663)](ll1I(-20978), ll1I(-21162) .. l1II, ll1I(-21750))
		end
		return IIII(lIII, l1II)
	end
	local function l1II(lIII)
		local IIII = ll1I(-22005)
		local l1II = string[ll1I(-21232)](ll1I(-21909))
		local I1II = {}
		for lIII = 245992 + - 245992, # IIII - (- 279145 + 279146), 959231 - 959230 do
			I1II[string[ll1I(-21232)](IIII, lIII + (851386 + - 851385))] = lIII
		end
		local Il1I = {
			232935 - 232807,
			613427 - 613363,
			900796 + - 900764,
			1031232 + - 1031216,
			812985 + - 812977,
			492851 - 492847,
			538355 - 538353,
			571762 + - 571761
		}
		local lI1I = {}
		local II1I = math[ll1I(-21171)]((# lIII * (- 300073 + 300079)) / (1048128 + - 1048120))
		lI1I[ll1I(-21479)] = - 665077 + 665077
		local l11I = string[ll1I(-21232)]
		local I11I = string[ll1I(-21817)]
		local lll1 = table[ll1I(-21319)]
		local Ill1 = math[ll1I(-21906)]
		local lIl1 = 579314 + - 579314
		local IIl1 = 604787 - 604787
		for IIII = - 545008 - (- 545009), # lIII, - 341291 + 341292 do
			local Il1I = l11I(lIII, IIII)
			local II1I = I1II[Il1I]
			if II1I then
				lIl1 = lIl1 * (316266 - 316202) + II1I
				IIl1 = IIl1 + (- 674031 - (- 674037))
				while IIl1 >= - 787448 + 787456 do
					IIl1 = IIl1 - (- 875195 + 875203)
					local lIII = Ill1(lIl1 / (972670 + - 972668) ^ IIl1)
					lI1I[ll1I(-21479)] = lI1I[ll1I(-21479)] + (- 466862 + 466863)
					lI1I[lI1I[ll1I(-21479)]] = string[ll1I(-21913)](lIII % (- 546353 - (- 546609)))
					lIl1 = lIl1 % (149413 + - 149411) ^ IIl1
				end
			elseif Il1I == l1II then
				break
			end
		end
		return table[ll1I(-21588)](lI1I)
	end
end)(...)