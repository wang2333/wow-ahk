return (function(...)
	local Ill = {"\097\077\051\101\107\076\055\100","\043\073\100\047\077\079\085\070\098\083\100\055\077\051\052\070";"\113\083\120\073\077\056\108\070\108\075\076\049\053\116\061\061";"\112\110\119\087\080\075\081\087\098\073\052\066","\075\069\119\117\052\100\052\102\110\071\061\061";"\077\110\121\071\112\110\065\121\098\083\087\099\080\087\119\047\080\109\075\061","\097\076\088\065\107\068\082\047\107\074\101\115\107\074\101\050\107\074\101\106\107\047\109\108\107\047\112\107\107\107\082\082\107\106\088\072","\102\049\050\071\108\083\071\071";"\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\061";"\097\089\086\106\107\076\106\068\107\047\088\043\107\078\090\101\107\077\082\101\097\077\101\113\097\115\083\050\097\076\086\054\107\074\051\105\107\074\106\105\097\115\097\118\107\112\097\112\107\076\088\067\107\047\055\050\107\112\090\112\107\107\106\085\107\068\101\053\107\077\083\076\097\074\118\080\097\115\083\108\107\048\115\078\107\107\112\110\079\053\048\122\099\074\048\122\122\089\072\068\048\048\078\087\048\047\048\087\116\074\049\056\082\074\068\103\108\088\110\099\099\089\116\071\074\084\116\071\078\078\055\065\078\078\055\108\107\068\118\053\097\112\082\076\107\068\101\109\097\089\088\100\097\077\073\120\107\074\051\105\097\115\118\087\097\115\097\118\107\112\097\112\078\078\055\108\107\076\118\099\107\074\082\087\107\047\090\107\107\076\118\076\107\076\106\116\097\115\083\050\097\112\115\119\107\103\097\072\103\103\088\088\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\047\055\066\097\076\088\065\097\112\083\107\107\047\101\099\107\047\055\050\107\074\051\105\107\078\106\122\107\076\101\048\078\078\055\108\107\074\055\076\107\076\109\089\107\078\106\122\107\074\051\105\107\074\106\105\107\077\051\073\107\076\109\074\107\048\115\078\107\107\112\110\107\077\115\108\107\068\097\065\097\115\083\050\107\074\055\076\107\076\109\089\113\072\089\115\088\122\081\084\077\073\076\071\108\083\077\073\108\079\079\087\048\068\057\068\048\048\078\122\099\112\103\097\088\101\111\055\098\109\103\116\053\110\052\070\080\070\121\087\080\072\050\082\102\070\111\066\108\085\111\054\115\072\119\055\098\109\075\099\077\073\100\066\043\051\075\047\113\072\089\115\088\082\109\057\106\118\073\050\122\118\109\089\121\118\112\120\068\082\112\068\068\086\109\067\084\118\109\082\084\118\118\067\073\116\068\099\043\122\052\082\089\085\100\089\074\087\120\087\098\085\069\099\077\083\075\068\089\082\112\055\082\118\086\109\087\055\089\047\088\101\111\055\098\109\103\116\053\075\116\082\075\051\052\070\102\109\111\056\077\090\116\101\107\107\082\082\107\106\088\072\107\048\115\078\107\107\112\110\089\101\056\061","\043\073\100\047\077\079\119\070\076\110\065\122\077\110\053\061","\097\089\086\106\107\076\106\068\107\068\097\090\107\068\101\076\107\077\055\097";"\043\073\100\047\077\079\108\049\098\083\100\055\077\051\052\070";"\107\068\101\076\107\077\055\097\097\076\088\065\107\068\082\047";"\113\083\120\073\077\056\100\088\119\079\053\104\108\071\061\061","\097\112\051\075\107\048\105\052\107\047\073\051\107\048\088\070","\120\049\076\069","\075\069\119\117\052\100\052\102\110\118\086\089\121\082\109\054\056\086\109\109\122\086\101\120\048\071\061\061","\089\088\117\080";"\097\089\090\081\107\068\101\076\107\077\088\105\078\078\055\108\107\080\051\102\097\089\086\106\107\080\086\081\097\115\083\050\097\076\086\054\107\068\101\109\097\089\088\100\097\065\105\098\097\076\086\054\107\074\051\105\107\074\106\105\107\047\086\051\097\089\086\106\107\076\106\068\107\077\112\098\107\048\088\070\078\078\055\089\107\112\112\088\107\047\097\043\097\089\105\108\107\076\055\100\107\047\055\065\097\112\051\075\107\048\105\052\107\047\073\051\107\048\088\070\074\118\073\098\068\082\109\108\121\086\086\114\101\086\112\049\087\086\109\103\101\105\109\089\114\082\073\050\068\105\086\065\106\086\118\067\101\086\105\050\116\082\086\065\106\086\086\053\121\082\101\117\084\105\090\103\073\082\112\043\048\105\101\082\099\082\086\111\048\082\112\110\068\105\112\052\101\105\118\067\116\053\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\086\067\082\082\086\043\116\086\101\082\099\082\086\111\048\082\090\103\082\082\101\102\122\086\073\072\084\118\090\111\084\082\090\097\084\084\075\071\065\086\101\085\066\086\112\089\073\105\101\072\106\082\109\115\106\105\109\109\122\086\112\071\114\072\081\055","\107\103\101\083\107\076\118\119","\089\088\050\116\109\071\061\061","\052\070\100\108\090\071\061\061","\075\083\111\047\043\051\111\082","\065\109\053\087\077\088\052\056\054\055\052\056\054\055\052\056\054\055\052\056\054\071\061\061","\107\097\086\078\107\076\106\068","\102\070\111\065\108\085\087\054","\090\085\052\117\102\085\069\054\119\085\075\061","\090\056\111\065\102\056\065\117\052\100\119\108\119\053\061\061";"\043\104\119\121\080\073\120\087","\102\049\117\066\102\049\117\065";"\119\073\111\066\080\083\111\104\119\122\065\121\080\109\075\061";"\098\051\114\087\086\053\061\061";"\098\083\100\055\077\051\052\070\098\083\100\055\077\051\052\070","\120\049\043\104\120\053\061\061","\107\047\055\066\107\068\118\090\107\074\082\051\107\074\101\097\107\076\112\100\097\076\105\068\107\112\051\073\107\074\073\116\107\074\106\056\107\048\109\117\107\107\090\068\078\078\055\108\107\076\101\072\107\076\082\057\107\107\082\103\107\074\118\121\107\068\073\050\097\074\088\102\107\107\082\110\107\103\073\089\107\048\088\103\107\074\073\100\107\097\088\070\097\115\086\084\107\103\073\089\107\047\055\066\078\078\055\108\107\106\051\084\107\103\073\089\097\077\106\054\107\047\086\051\107\078\082\070\107\068\106\056\107\047\082\070\107\047\112\071\078\078\055\117\088\116\048\073\116\106\084\087\084\097\057\056\082\097\110\047\073\068\057\073\087\078\080\068\048\048\057\047\087\097\078\099\099\065\047\068\098\072\119\071\043\049\068\099\074\104\098\104\098\055\107\121\098\110\119\099\112\083\052\066\043\088\107\084\076\055\079\056\082\068\080\068\047\097\054\073\084\107\074\056\082\078\080\073\073\078\102\073\087\048\079\099\099\089\085\061","\102\049\117\054\102\070\087\066";"\074\104\050\116\097\089\086\106\107\076\106\068\097\076\086\120\097\074\051\111\107\107\109\108\097\077\051\101\088\116\061\061","\110\051\065\121\043\051\052\089\077\109\100\066\053\109\069\099\098\109\107\070";"\108\084\050\055\120\053\061\061","\107\076\097\113\107\077\055\071\120\079\110\087\082\106\080\068\099\112\049\087\122\089\084\073\087\048\122\087\099\089\057\087\048\078\099\073\101\080\078\073\116\115\048\122\101\112\122\099\099\089\049\056\099\065\048\056\082\089\079\122\073\078\102\073\073\115\057\087\084\047\057\087\122\074\079\068\099\112\049\087\122\089\084\099\099\089\049\087\084\097\080\056\082\089\079\122\047\103\104\073\073\115\057\087\101\076\104\068\099\107\099\056\082\089\079\073\048\048\110\068\114\107\104\122\047\048\099\087\084\078\054\068\099\112\049\099\099\089\049\087\047\068\074\073\122\047\049\047\116\078\104\056\082\089\104\047\116\089\122\073\101\097\122\099\099\089\049\087\066\089\080\056\099\065\048\087\084\097\048\047\116\089\122\073\101\097\122\087\101\076\104\073\087\048\122\122\073\097\078\073\068\089\113\084\116\089\089\061";"\052\052\117\085\053\052\119\100\110\070\121\054\052\100\108\061";"\097\076\088\065\107\068\082\047\097\089\086\106\107\076\106\068\107\076\106\116\107\076\109\087\107\068\101\076\107\077\055\097","\102\051\107\075\076\109\065\053\043\073\052\049\043\051\052\056";"\102\070\111\065\102\070\087\065","\043\083\081\121\086\109\052\055";"\052\075\087\120\077\109\107\069\053\122\052\070\098\083\111\082\075\104\119\055\077\110\119\084\112\100\119\087\080\110\117\066\076\110\119\087";"\119\085\052\117\052\085\121\074\102\056\087\072\090\100\053\061";"\043\073\100\047\077\079\121\070\076\110\065\122\077\110\053\061","\053\051\121\087\076\051\114\088\098\110\119\070\080\051\103\061";"\080\109\111\051\077\109\120\099\080\109\069\121\080\073\053\061","\075\051\121\099\043\122\119\079\080\083\100\049\043\070\107\121\080\109\075\061";"\102\049\117\066\080\079\050\071";"\098\083\087\114\077\053\061\061";"\120\049\043\104\120\116\061\061";"\102\049\117\054\108\085\056\071","\102\049\050\071\108\085\111\054";"\102\070\087\065\090\075\067\071","\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\119\056\087\090\075\069\119\075\053\052\065\072\119\052\053\061","\089\072\081\084\077\073\077\083\119\056\076\069\120\084\087\080\107\080\082\097\097\115\097\082\097\076\088\065\107\068\082\047\110\110\081\055";"\076\073\111\049\043\049\075\061","\080\073\100\114\077\110\117\066\076\110\119\087\108\102\075\061","\086\069\065\117\102\100\053\116\077\083\111\104\080\122\069\078\110\110\069\078\075\056\100\108\052\088\117\069\043\072\070\061","\077\109\119\122\077\052\120\047\086\073\075\061","\113\083\120\073\077\056\108\104\105\075\108\051\119\053\061\061","\107\080\118\048\097\074\051\066","\102\070\087\054\108\085\111\054","\120\049\043\061";"\043\104\119\121\043\122\119\121\098\072\119\121\076\051\066\061";"\102\104\117\070\112\109\111\082\043\070\065\121\043\051\052\079\112\083\052\084\112\070\065\069\098\072\119\099\080\087\119\087\080\110\117\066\076\110\119\087","\075\051\121\099\098\070\100\066\080\100\120\071\077\109\081\066\075\073\100\082\112\104\108\061";"\074\051\100\068\076\051\100\049\098\050\061\061","\119\056\065\100\110\069\119\065\075\050\061\061","\098\083\087\070\080\083\052\075\112\110\050\061","\110\101\052\049\115\101\070\057\065\109\053\048\065\090\103\057\065\109\053\106\065\110\108\106\065\050\061\061","\098\083\100\101","\102\051\081\065\102\049\050\071";"\113\083\120\073\077\073\076\071\108\079\050\071\108\105\109\121\106\118\109\100\047\086\090\097\121\082\073\098\122\082\112\052\066\105\109\114\087\118\109\114\087\118\086\066\047\082\090\103\066\082\118\067\084\105\101\099\114\118\112\084\116\105\112\113\047\086\101\118\056\118\109\100\047\086\109\050\099\105\118\067\116\110\081\055","\107\076\112\071\107\076\112\116\107\112\088\121\107\077\097\090";"\075\056\052\108\102\070\100\085\110\069\065\054\075\069\119\100\075\116\061\061";"\097\076\088\065\107\068\082\047\107\076\118\106\107\074\055\112\107\077\055\068\107\068\101\076\107\047\112\110\107\103\106\051\107\068\088\117\107\074\101\074\107\048\115\078\107\107\112\110\079\053\048\056\082\089\104\047\116\089\122\073\101\097\122\099\099\089\049\047\122\077\078\073\101\065\084\073\087\047\113\122\101\048\080\073\116\089\072\056\082\077\057\056\099\065\048\073\066\048\099\122\087\047\113\122\073\097\078\073\068\089\043\115\088\122\081\084\077\073\076\071\108\083\077\073\108\079\079\073\114\076\099\068\048\107\110\073\073\115\057\087\056\115\080\068\099\107\079\068\068\076\049\073\048\112\054\087\082\074\084\099\099\089\049\087\084\097\057\056\082\097\110\087\121\080\054\047\087\097\104\073\048\112\102\047\116\089\122\047\068\080\122\087\056\089\078\073\084\112\074\068\068\103\110\122\122\089\099\073\073\115\057\087\056\115\080\068\121\097\048\087\101\106\084\087\101\106\079\068\068\076\079\099\099\089\100\067\043\116\061\061";"\102\049\050\071\090\109\081\065";"\102\104\077\087\043\056\121\087\076\109\081\109\076\109\081\069\077\053\061\061","\120\116\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\049\108\061","\043\073\100\082\112\070\107\099";"\120\049\043\104\120\071\061\061";"\107\076\051\117\107\112\051\110\107\076\112\080\107\107\106\085\097\115\118\052\107\103\115\067","\052\085\111\053","\102\049\050\071\080\085\111\065","\097\076\088\112\107\107\090\068\107\103\105\114\107\076\106\080\107\080\086\087\107\097\101\074\107\103\115\103\097\089\051\099\097\080\055\116\107\106\088\072","\086\069\065\117\102\100\053\116\077\083\111\104\080\122\069\078\109\104\069\078\075\056\100\108\052\088\117\069\043\072\070\061","\102\051\081\066\102\070\087\054";"\077\109\119\047\098\083\065\099\086\079\089\061","\075\083\052\070","\076\109\114\087\086\053\061\061";"\075\069\119\117\052\100\052\102\110\070\087\105\053\056\100\075\052\085\081\100\090\085\052\117\102\050\061\061","\112\083\052\121\080\072\119\068","\098\083\111\071\080\083\052\073\098\100\116\061";"\075\056\100\108\052\088\069\080","\102\051\081\065\090\075\111\065";"\077\083\052\101\098\109\077\073\052\072\087\071\077\053\061\061";"\076\051\081\121\043\104\120\065\077\050\061\061","\054\053\061\061";"\113\083\120\073\077\056\077\083\119\056\077\083\119\116\061\061";"\077\083\052\101\098\109\077\073\075\087\053\061";"\080\083\100\082\077\104\052\121\077\051\075\061","\113\083\120\073\077\084\050\071\077\073\076\071\108\105\101\082\099\082\086\111\048\082\073\121\114\086\073\098\068\082\105\050\056\105\112\076\099\082\086\056\082\101\057\047\073\047\079\068\087\103\057\084\116\065\100\067\043\116\061\061","\107\112\112\088\107\047\097\043\097\065\105\098\097\076\086\054\097\074\112\049\107\112\090\113\078\078\055\108\097\089\090\081\107\068\101\076\107\077\088\105\107\047\101\099\107\077\088\073\097\089\086\106\107\076\106\068\107\047\109\119\107\074\106\097";"\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\102\069\077\100\075\056\121\100\053\075\071\061";"\080\109\100\084\043\073\067\061","\080\073\100\114\077\110\117\066\076\110\119\087\105\050\061\061";"\043\073\100\047\077\079\085\049\098\083\100\055\077\051\052\070","\086\069\065\047\077\051\121\070\089\083\119\099\098\051\107\111\054\102\075\071\108\079\069\078\075\073\087\122\112\072\053\116\098\110\117\111";"\102\070\111\065\080\085\087\065","\107\107\055\113\097\115\101\050\107\047\055\099\078\078\055\112\107\107\082\118";"\097\076\088\065\107\068\082\047\107\112\090\112\107\074\101\106\107\048\115\078\107\107\112\110\107\048\105\052\107\047\055\099\107\047\073\097\097\089\105\111\107\048\115\078\107\107\112\110";"\097\074\086\113\097\077\106\054\078\078\055\112\107\076\083\043\107\106\051\101\097\074\086\113\097\077\106\054";"\107\047\086\051\107\080\055\050\107\077\088\099\097\089\083\108\107\074\101\112\107\068\106\050\097\089\105\111\074\105\090\111\099\118\086\075\106\105\109\104\047\086\086\068\101\118\112\065\101\118\109\087\087\055\057\047\047\080\079\087\056\103\085\099\107\097\086\120\107\047\086\054\107\068\106\050\097\089\105\111\109\118\109\100\099\086\090\097\082\082\101\121\116\105\112\050\047\118\086\074\116\082\112\050\056\101\071\116\107\080\086\068\097\112\051\075\107\103\082\088\107\047\106\070\110\086\105\050\116\116\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\101\074\066\086\109\074\121\055\057\087\087\107\049\068\068\076\079\087\099\089\079\087\056\115\057\122\101\089\080\087\084\107\072\087\056\089\103\066\089\105\090\067\073\082\109\043\106\085\065\054\075\069\054\073\101\065\084\056\082\115\104\087\084\112\100\079\119\105\086\078\047\118\086\078\048\086\073\072\101\082\112\075\099\082\086\089\121\082\109\054\056\086\112\115\116\105\101\079\099\086\109\090\084\105\073\087\066\105\109\102\116\086\118\067\116\110\081\055","\102\083\100\049\098\100\052\049\076\109\065\066\077\052\098\121\098\083\052\055\090\109\053\061","\113\083\120\073\077\056\077\083\120\070\053\071\053\086\109\100\106\105\109\080\068\082\112\055\082\118\086\109\087\104\081\055","\112\109\120\099\080\116\061\061";"\043\083\111\104\077\110\089\061";"\107\068\101\076\107\047\112\110\107\048\115\078\107\107\112\110","\080\073\100\114\077\110\117\066\076\110\119\087\075\051\121\099\098\069\117\087\043\122\120\099\080\073\100\066","\102\070\056\071\108\085\067\071";"\102\051\071\071\090\075\111\066";"\052\070\121\065\075\069\117\100\075\116\061\061","\107\077\055\068\107\068\106\050\097\089\105\111\107\074\101\114\107\078\082\119\107\112\097\112\109\118\101\053\106\105\073\112\121\082\073\088\106\082\073\102\116\086\086\088\082\105\109\067\082\052\070\099\097\089\109\071\107\080\101\073\097\077\115\070\097\074\090\068\107\097\088\070\107\103\073\072\107\103\115\103\107\080\055\107\074\088\079\087\066\089\057\073\116\115\048\056\099\080\057\122\087\115\084\068\121\080\079\087\082\115\080\122\116\048\084\087\099\074\056\066\089\105\073\106\114\118\073\048\121\086\086\097\047\118\109\089\106\070\065\054\075\069\054\073\101\076\104\087\084\112\100\079\119\105\090\111\099\118\086\075\106\105\101\053\106\105\073\112\121\082\073\088\106\082\073\102\116\086\086\088\082\105\109\067\082\090\071\116\097\115\118\104\107\077\055\068\097\089\105\108\107\076\055\100\107\074\118\098\107\107\109\077\097\074\112\049\107\112\090\113\107\107\106\085\107\103\115\103\107\080\055\107\103\103\088\088\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\097\065\088\068\097\077\106\083\097\076\115\106\097\077\105\117\107\103\115\103\107\080\055\107\107\076\118\106\107\077\055\068\107\107\082\082\107\106\088\072\107\074\101\097\097\112\106\104\097\112\082\100\107\078\106\122\053\056\111\102\075\118\112\110\114\082\112\065\084\086\101\122\047\082\109\054\056\086\118\067\116\110\081\055","\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\102\056\111\090\102\075\100\089\119\075\100\108";"\043\073\100\047\077\079\120\070\076\110\065\122\077\110\053\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\084\085\061","\043\104\052\101","\112\083\087\070\075\073\052\084\098\050\061\061";"\043\083\100\055\098\072\056\081\098\083\100\055\077\051\052\070","\112\083\052\121\077\079\089\061";"\107\076\051\054\107\076\106\047\107\077\051\073\107\076\109\074","\043\051\121\099\098\109\081\056\077\110\065\049\108\116\061\061";"\102\051\071\071\080\083\081\065","\107\068\101\076";"\080\073\100\114\077\110\117\066\076\110\119\087\108\084\056\061";"\113\083\120\073\077\084\050\071\077\073\076\071\108\105\112\114\068\118\086\065\101\105\090\103\101\118\101\111\099\086\109\043\066\105\109\098\116\105\118\067\073\116\047\068\098\072\119\071\043\049\068\099\074\104\098\104\098\055\107\121\098\110\119\099\112\083\052\066\043\088\107\084\076\104\081\055";"\102\049\050\071\108\085\067\071","\080\073\100\114\077\110\117\066\076\110\119\087\108\084\053\061";"\097\112\109\082\107\107\090\068","\110\090\066\061","\113\083\120\073\077\056\077\083\120\070\053\071\053\086\086\080\048\082\112\116\121\118\090\067\073\105\109\100\101\105\101\121\116\105\073\072\084\118\073\076\101\105\109\050\099\050\061\061","\076\051\121\121\043\073\069\087\077\050\061\061";"\102\051\107\108\077\109\100\051\077\053\061\061","\102\070\056\071\108\085\087\066","\074\104\065\069\080\101\117\049\077\122\116\111\119\051\052\070\053\069\077\121\043\101\116\122\075\051\111\069\080\073\119\113\119\109\107\121\076\073\081\087\075\070\077\076\065\055\056\078\088\101\111\084\080\051\107\049\080\051\081\087\089\100\120\099\098\109\107\056\110\070\052\082\076\109\065\066\077\052\120\083\109\088\050\071\088\101\111\069\043\051\075\116\108\102\050\115\074\104\052\049\077\090\050\081\108\071\068\099\098\110\120\087\089\079\085\070\088\116\061\061","\090\085\052\117\102\100\111\117\052\052\119\054\110\069\077\117\102\100\052\100","\053\110\052\070\080\070\077\099\080\083\081\099\098\069\052\082\112\110\053\061","\107\077\088\105\097\076\088\050";"\102\049\050\071\102\070\087\066","\102\051\081\065\102\070\111\054","\080\073\100\114\077\110\117\066\076\110\119\087\105\053\061\061","\098\102\052\083\108\073\043\104\109\085\065\070\043\050\061\061","\075\069\119\117\052\100\052\102\110\118\101\072\106\082\109\115\106\105\109\099\082\118\112\050\106\116\061\061";"\075\073\052\066\080\051\100\056";"\102\070\087\066\090\109\081\054","\098\083\052\103\098\100\119\107\043\083\075\061","\088\116\047\067\076\051\077\073\119\056\076\104\119\079\117\117\107\074\118\082\107\047\090\107\107\074\073\074\107\077\088\105\078\078\055\108\097\115\118\104\107\068\055\065\107\077\082\086\097\074\051\073\107\068\101\109\097\089\088\100\119\052\120\079\097\076\088\050\107\076\086\097\107\074\118\082\107\047\090\107\078\078\055\108\107\076\101\072\107\076\082\057\097\074\097\102\107\076\109\087\097\077\051\086\107\047\109\071\107\112\051\110\107\112\051\110\107\097\055\073\107\074\101\055\078\078\055\117\113\072\089\061";"\076\073\111\099\080\083\052\121\080\116\061\061","\043\073\100\047\077\079\089\104\098\083\100\055\077\051\052\070","\080\109\085\081\108\084\108\061","\076\073\111\049\043\049\085\071","\074\071\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\049\056\061","\086\073\121\079\102\116\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\049\076\061";"\075\104\117\087\080\083\081\119\098\109\052\069\077\052\098\047\080\073\119\099\098\071\061\061","\097\074\086\113\097\077\106\054\107\068\101\119";"\102\051\081\054\108\079\050\071";"\053\052\052\075\102\069\111\065\102\087\119\100\075\087\065\052\075\100\053\061","\102\051\081\054\090\075\056\071";"\097\112\109\082\107\048\088\070";"\113\083\120\073\077\056\077\083\120\070\053\071\053\086\101\057\121\118\073\072\084\104\081\055";"\043\073\100\047\077\050\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\102\116\061","\109\071\061\061","\076\110\052\055\076\075\107\121\080\109\075\061","\077\083\100\107";"\043\073\052\070\076\109\087\066";"\108\084\052\089\107\074\118\082\107\047\101\113\107\080\082\097\097\115\097\082\109\118\090\111\099\118\086\075\106\105\101\077\106\118\086\118\047\105\086\114\101\086\086\097\047\069\070\097";"\086\069\120\071\076\109\120\087\113\053\061\061","\097\074\086\113\097\077\106\054\105\116\061\061","\120\082\086\097\047\055\050\116\089\050\061\061";"\090\085\052\117\102\085\114\100\109\052\108\061","\076\051\100\082\053\110\117\071\080\072\087\117\098\110\065\121";"\076\073\111\049\043\049\085\061";"\102\049\117\065\080\079\117\066","\102\083\052\073\098\085\065\069\098\072\119\099\080\116\061\061";"\102\075\111\109\119\075\121\100\053\075\081\074\119\052\087\102","\102\049\050\071\080\085\087\065","\108\102\050\061";"\102\070\111\054\102\070\067\071","\043\073\100\047\077\079\085\071\098\083\100\055\077\051\052\070","\052\052\120\100\052\070\100\075\119\052\089\061";"\043\104\119\099\043\083\120\121\043\104\119\047\080\073\043\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\049\075\061";"\086\071\061\061","\112\110\119\087\080\075\087\084\080\051\103\061","\088\122\081\084\077\073\076\071\108\083\077\073\108\079\079\047\073\112\102\056\082\068\080\122\066\078\099\122\082\107\057\122\099\074\048\122\122\089\072\122\073\068\102\047\068\107\057\122\101\112\122\087\084\097\057\056\082\097\110\068\121\097\048\087\101\106\084\087\056\089\054\087\087\047\104\099\099\089\049\068\099\107\122\047\121\103\049\087\084\097\057\056\082\097\110\047\116\089\122\073\101\097\122\056\099\112\079\068\047\068\072\087\056\089\054\122\073\068\102\047\068\107\057\122\101\112\087\067\043\116\061\061","\080\073\100\114\077\110\117\066\076\110\119\087\102\109\100\103\119\083\087\049\098\083\100\082\076\051\075\061","\052\085\100\090\119\070\052\075\102\085\100\102\052\085\121\054\075\069\119\065\102\085\075\061";"\075\069\119\117\052\100\052\102\110\118\101\072\106\082\109\115\106\105\112\089\073\105\109\043\082\116\061\061";"\097\115\097\118\107\078\051\082";"\043\073\100\047\077\079\108\081\098\083\100\055\077\051\052\070";"\080\073\100\114\077\110\117\066\076\110\119\087","\098\109\107\071\076\109\120\048";"\052\083\052\103\098\072\052\055\077\053\061\061","\043\073\100\047\077\072\117\087\098\050\061\061","\107\080\088\083\097\076\088\065\107\068\082\047\097\077\101\113\107\076\118\074\097\074\118\080\107\076\109\087\097\080\082\119\107\077\088\120\107\076\051\052\078\078\055\108\107\074\101\120\107\074\055\112\107\112\118\107\097\080\082\119\107\077\088\120\107\076\051\052\097\074\118\080\097\115\083\108\107\074\082\078\107\074\051\052\107\048\115\078\107\107\112\110\107\068\101\109\097\089\088\100\107\076\109\051\107\074\082\109\107\047\105\120\107\074\051\043\078\078\055\117\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\074\051\057\107\107\090\068\107\047\118\053\107\074\106\080\107\103\073\107\107\112\097\112\107\077\055\097\107\077\088\089\078\078\055\108\107\080\088\083\107\074\101\120\097\077\055\050\097\115\112\117\107\048\115\078\107\107\112\110\107\068\101\109\097\089\088\100\107\074\101\120\097\089\105\111\107\048\115\078\107\107\112\110\078\078\055\089\107\106\118\075\107\112\112\088\107\047\055\065\107\074\106\080\107\077\055\097\107\077\088\089\107\107\106\085\052\085\100\105\090\118\118\067\101\086\112\105\056\082\073\077\047\105\109\043\106\105\112\055\082\118\086\109\087\118\090\107\101\118\109\056\087\082\118\067\084\105\109\111\056\118\086\085\114\082\090\107\122\118\109\054\048\118\090\078\047\086\090\111\068\105\112\072\116\082\086\112\121\105\105\050\116\082\105\050\116\082\105\050\116\122\081\055\088\116\047\067\076\051\077\073\077\084\050\071\108\079\050\071\097\080\082\119\107\077\088\120\107\076\051\052\107\074\055\076\107\076\109\089\107\078\106\122\107\076\101\048\107\106\118\075\107\076\055\078\107\074\118\098\097\112\082\076\078\078\055\108\107\112\112\088\107\047\097\043\107\077\088\108\107\047\086\051\097\115\097\118\107\078\051\082\107\074\106\083\107\076\055\078\107\074\118\098\107\077\115\108\097\080\082\119\107\077\088\120\107\076\051\052\078\078\055\108\107\080\088\083\107\074\101\120\107\074\055\112\107\048\115\078\107\107\112\110\107\107\082\082\107\106\088\072\103\103\088\088\113\072\089\061";"\102\051\081\066\080\083\081\065";"\080\109\100\103","\080\073\100\114\077\110\117\066\076\110\119\087\108\116\061\061";"\098\073\100\066\098\109\075\061","\107\080\088\083\097\089\086\106\107\076\106\068\107\076\101\080\107\080\082\097\107\047\055\066\097\089\083\108\107\074\101\112\107\107\082\103\107\076\109\049\107\107\106\085\107\047\112\111\107\048\105\052\097\077\101\113\107\076\101\110\107\112\097\054\078\078\055\108\107\080\073\051\107\074\097\098\107\106\055\121\107\047\090\118\107\076\109\087\107\076\106\068\107\074\051\043\107\047\051\121\108\086\105\050\116\102\074\122\048\076\122\056\099\076\104\122\099\112\078\084\116\089\089\115\088\082\109\073\116\082\112\086\122\105\090\103\084\086\073\043\116\105\101\073\116\086\101\072\106\082\109\115\106\105\109\089\073\118\109\078\082\082\109\082\084\118\118\067\084\105\109\100\066\118\073\110\048\086\112\114\047\105\073\050\101\086\073\121\082\086\109\120\066\118\109\054\048\118\105\050\116\116\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\086\075\066\086\090\097\084\056\100\069\098\083\121\099\090\083\052\066\043\105\109\043\106\105\101\057\056\105\101\121\084\105\112\110\114\082\118\067\084\105\101\073\116\086\112\065\047\118\101\121\084\105\112\065\101\118\109\115\106\105\112\109\099\086\112\049\087\086\086\080\082\105\109\099\082\086\109\080\066\105\073\112\099\082\118\067\084\105\112\065\116\105\090\078\047\086\109\054\048\118\090\078\047\086\090\111\099\118\086\075\106\105\086\081\082\118\090\067\099\105\090\103\101\118\073\098\068\082\086\112\121\105\109\082\084\118\112\115\101\082\112\109\099\086\112\049\087\086\109\115\106\105\090\111\122\105\112\054\056\082\109\100\047\086\112\065\047\118\101\121\084\105\073\076\122\118\109\089\087\071\068\115\089\118\112\080\099\118\112\120\068\082\090\103\101\118\073\098\068\082\086\112\121\072\121\103\086\072\084\056\082\074\048\068\047\068\072\073\101\112\113\068\068\076\049\122\073\068\102\087\101\106\084\056\099\077\049\087\056\089\104\122\047\078\050\115\074\051\120\121\043\104\053\055\089\072\121\103\086\072\121\067\043\116\061\061","\086\070\119\099\098\051\103\116\077\083\111\104\080\122\070\111\108\102\050\071\108\079\069\078\119\083\111\104\080\101\117\069\043\072\070\061","\052\083\100\101\075\083\100\082\077\109\081\108\080\051\120\121\098\083\087\099\080\116\061\061","\102\083\100\049\098\100\052\049\076\109\065\066\077\075\087\056","\080\073\100\114\077\110\117\066\076\110\119\087\108\049\116\061";"\107\077\088\079\107\078\105\109";"\075\070\121\117\102\075\100\105","\097\080\082\119\107\047\082\043\107\107\118\049\107\077\055\084\107\106\097\057";"\102\049\117\065\102\070\056\071","\107\076\101\080\107\080\082\097\107\068\097\122\107\076\101\051\107\112\097\054";"\043\104\117\087\080\083\081\102\043\083\081\047\098\050\061\061","\077\072\052\055\076\110\119\047\080\051\103\061";"\097\089\086\106\107\076\106\068\107\074\101\105\107\107\082\082\107\106\088\072\107\074\106\090\107\076\106\068\078\078\055\108\107\106\118\075\107\112\112\088\097\074\086\098\107\097\112\078\097\074\118\072\097\074\118\043\097\089\086\106\107\076\106\068\097\077\051\116\097\074\118\119\107\107\082\082\107\106\088\072\078\078\055\108\107\080\073\051\107\047\090\078\107\076\086\078\088\082\090\103\084\086\073\050\101\086\112\074\106\086\086\080\048\082\112\116\121\118\090\097\056\082\109\115\106\105\118\067\084\105\109\057\121\086\073\121\082\118\112\065\101\118\109\115\106\105\086\122\082\118\109\115\106\105\109\089\066\105\112\075\082\118\109\072\082\118\090\111\084\086\086\111\048\082\118\067\084\105\112\065\084\086\109\067\116\105\109\122\101\118\101\072\106\082\109\115\106\105\112\075\082\118\109\072\082\071\061\061","\107\048\088\103\107\068\083\090\107\074\073\074\107\107\055\067";"\107\068\055\072\107\097\090\097\107\080\051\102\107\076\073\120\107\106\051\084\107\077\055\068\097\076\086\115\107\047\090\118\107\068\106\050\097\089\105\111";"\102\070\087\054\080\083\081\066","\107\076\073\099\107\047\055\066";"\075\069\119\117\052\100\052\102\110\118\109\057\106\118\073\050\122\118\112\109\099\086\112\049\087\053\061\061","\080\073\100\114\077\110\117\066\076\110\119\087\075\051\121\099\098\070\100\066\080\050\061\061";"\107\074\051\057\107\107\090\068\107\047\055\050\107\106\088\072\107\076\086\083\107\106\101\121\107\080\055\054\107\077\115\108\107\106\051\084\107\080\101\103\097\065\105\098\097\089\088\110\107\047\051\087\097\074\118\080\097\115\083\108\107\048\115\078\107\107\112\110\078\078\055\108\097\112\115\085\107\048\109\074\107\076\106\116\097\115\083\050\097\077\101\089\107\076\088\067\108\102\050\071\065\053\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\112\116\121\118\109\072\121\082\112\068\068\086\109\067\084\118\112\055\082\118\086\109\087\118\101\082\068\086\086\082\087\118\073\076\101\105\109\050\099\079\085\071\108\088\052\067\043\116\061\061","\107\074\051\057\107\107\090\068\107\047\055\050\097\074\118\072\097\076\086\054\107\106\101\121\107\080\055\054\107\077\115\108\097\112\082\076\097\065\105\098\097\089\088\110\107\047\051\087\097\074\118\080\097\115\083\108\107\048\115\078\107\107\112\110\078\078\055\108\097\076\088\088\107\077\088\089\107\107\118\114\107\080\073\049\107\080\118\048\107\068\101\076\107\047\112\110\078\078\055\108\097\112\115\085\107\048\109\074\107\076\106\116\097\115\083\050\097\077\101\089\107\076\088\067\108\102\089\069\065\053\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\112\116\121\118\109\072\121\082\112\068\068\086\109\067\084\118\112\055\082\118\086\109\087\118\101\082\068\086\086\082\087\118\073\076\101\105\109\050\099\079\085\055\120\090\052\067\043\116\061\061";"\097\065\088\068\097\077\106\083\097\076\115\106\097\077\105\117\107\103\115\103\107\080\055\107\097\080\055\116\107\106\088\072";"\107\107\082\082\107\106\088\072\107\048\115\078\107\107\112\110\078\078\055\108\107\074\055\076\107\076\109\089\107\078\082\077\107\080\051\102\107\076\073\120\107\107\082\082\107\106\088\072\107\068\101\109\097\089\088\100\107\080\051\102\107\076\073\120\107\047\109\108\107\074\106\097\107\107\106\085\107\107\082\082\107\106\088\072\107\076\106\116\097\115\083\050\078\078\055\108\097\074\118\077\097\076\086\108\097\115\097\118\107\078\051\082\107\076\106\116\097\115\083\050\107\107\106\085\097\077\101\089\107\076\088\067\078\078\055\108\107\074\101\050\097\089\101\066\107\048\115\078\107\107\112\110\107\074\101\120\097\077\055\050\097\115\112\117\107\076\082\118\097\076\088\065\107\106\051\056\097\112\083\107\078\078\055\117\078\078\055\117\078\078\055\117\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\097\089\090\081\107\068\101\076\107\048\109\074\097\115\118\052\107\048\115\078\107\107\112\110\078\078\055\108\107\076\118\099\107\074\082\087\097\076\088\065\107\074\101\114\107\106\051\056\097\112\083\107\078\078\055\108\097\115\097\118\107\078\051\082\097\074\112\100\097\074\118\072\108\102\050\081\065\086\118\067\084\105\109\071\121\082\112\089\073\105\112\109\087\118\112\055\082\118\086\109\087\118\090\103\084\086\073\050\101\086\118\067\084\105\073\050\101\086\090\103\048\086\101\072\106\082\109\104\066\086\109\071\121\082\109\067\116\105\109\122\101\118\086\078\073\086\101\072\106\082\109\104\066\086\109\115\068\105\101\121\116\105\118\067\116\110\081\055","\076\110\052\055\076\052\065\075";"\076\051\111\082\076\051\100\070","\102\070\087\054\090\075\111\066";"\107\103\082\088\097\076\086\105\097\112\051\075\107\048\105\052\097\089\051\099\107\048\088\070";"\074\051\120\121\043\104\053\116";"\076\122\052\073\077\073\065\069\098\072\119\099\080\116\061\061","\102\051\081\054\102\049\117\066","\080\083\052\122\043\071\061\061","\090\075\107\075\119\052\065\117\053\069\119\075\053\052\065\072\119\052\053\061","\107\068\051\052\097\089\097\104\107\076\101\071\097\077\090\077\097\115\118\099\105\116\061\061","\107\077\088\079\097\077\051\101\107\076\055\100\115\118\109\109\122\086\112\071\114\050\061\061";"\075\069\119\117\052\100\052\102\110\118\109\122\101\118\086\078\101\085\100\054\119\053\061\061","\102\070\087\066\108\083\071\071";"\102\070\067\071\102\070\067\071","\074\104\052\049\077\090\117\080\053\072\117\066\076\110\087\087\043\087\070\116\097\065\088\068\097\077\106\083\097\076\115\106\097\077\105\117\107\103\115\103\107\080\055\107\088\116\061\061";"\107\077\112\098\097\065\105\098";"\102\051\071\071\102\051\071\071","\108\071\061\061";"\077\051\069\121\098\083\120\068";"\102\070\056\071\080\083\071\071","\043\073\100\047\077\079\065\070\076\110\065\122\077\110\053\061";"\076\122\052\070\098\083\111\082\052\083\052\114\043\083\081\121\098\083\075\061","\102\051\081\065\090\075\087\054";"\107\077\082\086\107\047\101\087","\074\104\052\049\077\090\050\061";"\043\051\121\099\098\071\061\061","\097\076\115\106\097\077\105\117\107\103\115\103\107\080\055\107","\102\075\052\085\090\052\052\120";"\043\051\121\099\098\109\081\056\077\110\065\049";"\075\056\052\108\102\070\100\085\110\069\065\117\090\075\053\061","\076\110\052\055\076\075\107\121\080\109\052\079\090\075\053\061","\120\049\076\061","\102\070\111\054\102\070\056\071";"\102\070\067\071\108\079\117\054";"\075\069\119\117\052\100\052\102\110\069\117\090\102\069\119\100\053\069\119\108\090\052\120\075","\112\109\053\061","\107\068\101\076\107\077\055\097","\102\083\100\049\098\100\052\049\076\109\065\066\077\075\077\099\080\051\119\065\077\050\061\061";"\053\110\052\070\080\069\120\070\076\110\119\069\043\071\061\061","\076\109\077\048";"\102\049\117\065\108\085\087\054","\043\073\100\047\077\079\052\070\076\110\065\122\077\110\053\061","\102\051\081\054\108\085\087\054","\086\069\114\111","\113\083\120\073\077\084\050\071\108\079\117\073\077\116\061\061","\076\051\081\121\043\104\120\047\076\071\061\061","\075\069\119\117\052\100\052\102\110\118\109\089\073\118\109\078\082\082\073\076\122\118\109\089\087\118\109\082\084\071\061\061";"\107\097\086\078\107\076\106\068\107\112\118\078\107\068\088\106";"\097\065\088\068";"\107\076\051\054\107\076\106\047\107\112\097\116\107\103\073\047","\098\083\100\101\077\122\065\121\080\109\075\061","\077\083\052\049\076\071\061\061","\043\073\100\047\077\079\108\104\098\083\100\055\077\051\052\070","\107\080\101\082\107\076\106\047";"\098\073\100\066\098\109\075\055";"\075\069\119\117\052\100\052\102\110\070\100\052\052\085\111\083\102\070\081\108\102\069\043\061";"\097\074\051\066\107\077\055\089\107\112\118\078\107\068\088\106";"\098\073\100\066\098\109\075\081";"\119\122\065\121\080\109\075\061","\043\073\100\047\077\079\089\107\098\083\100\055\077\051\052\070";"\080\073\100\114\077\110\117\066\076\110\119\087\108\084\108\061";"\076\073\111\049\043\049\089\061","\080\109\100\103\075\073\100\082\077\051\075\061","\075\056\052\083\075\056\052\102\090\100\111\065\102\087\120\053\119\075\120\075","\102\051\081\065\108\079\117\065";"\120\049\043\051\120\053\061\061";"\112\110\120\120\080\104\077\047\080\073\043\061","\110\104\117\087\043\073\120\087\080\122\053\061","\119\051\052\070\075\104\119\121\098\072\052\049\102\122\052\114\076\073\052\055";"\098\083\111\070\076\109\081\075\112\109\120\048\043\071\061\061","\102\070\056\071\102\070\111\066";"\113\083\120\073\077\056\077\083\119\084\075\051\105\053\061\061","\102\051\081\066\102\051\081\066";"\076\122\052\070\098\083\111\082";"\097\089\086\106\107\076\106\068\097\074\086\113\097\077\106\054","\043\073\100\047\077\079\085\081\098\083\100\055\077\051\052\070";"\102\051\081\054\108\079\117\065";"\053\070\121\100\053\070\114\113\075\100\065\054\119\056\087\108\119\052\108\061","\107\077\055\068\097\089\083\115\107\112\090\047\107\097\106\110\107\076\118\084\097\074\097\102\107\076\086\097\107\068\101\053\107\076\106\113\107\047\112\111\107\048\105\052\107\068\106\050\097\089\105\111\107\074\118\121\107\068\083\099\107\076\118\115\107\107\082\082\107\106\088\072\107\097\051\065\107\074\118\121\107\068\083\099","\102\070\111\054\090\102\117\066";"\119\100\065\052\090\075\053\061","\053\116\061\061";"\090\085\121\088\119\116\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\049\089\061","\074\104\120\070\080\104\117\084\076\110\120\070\112\109\107\122\088\116\061\061";"\043\104\119\121\080\073\053\061","\102\070\087\054\080\079\117\066";"\080\073\100\114\077\110\117\066\076\110\119\087\108\084\076\061";"\109\070\085\061","\097\112\109\071\107\077\105\117\074\118\109\056\047\118\112\115\116\105\101\079\099\086\101\072\106\082\109\115\106\105\109\067\116\105\109\053\048\071\061\061","\102\070\087\066\108\085\056\071","\080\109\111\051\077\109\100\084\098\083\087\099\080\116\061\061";"\112\110\120\071\080\104\098\087\043\116\061\061";"\075\069\119\117\052\100\052\102\110\118\109\071\084\118\112\050\106\082\086\089\121\082\109\054\056\053\061\061";"\043\073\100\047\077\079\108\069\098\083\100\055\077\051\052\070","\076\104\065\047\098\100\120\071\077\109\081\066\043\071\061\061";"\077\073\111\082\098\072\120\070\043\073\087\082\077\071\061\061","\112\110\119\087\080\075\107\121\080\109\075\061","\053\070\052\105\052\085\052\090","\076\073\111\049\043\049\053\061";"\102\070\087\065\090\109\081\066";"\098\051\087\056\098\083\116\061","\090\075\107\109\052\100\087\053\119\052\111\110\119\075\100\053\102\070\107\120\053\075\087\105\090\085\100\105\119\050\061\061";"\102\049\117\054\108\079\117\066","\119\075\100\075\090\075\107\072\110\069\077\117\102\100\052\100";"\102\070\087\054\080\085\087\066","\102\070\087\054\090\075\067\071","\074\051\120\066\077\109\100\055\098\083\100\055\077\051\052\070";"\102\051\081\066\102\070\067\071";"\107\080\051\102\107\080\055\050\107\112\086\074\107\048\115\078\107\107\112\110\107\047\112\111\107\048\105\052\107\047\086\051\078\078\055\108\107\106\088\107\107\068\051\082\107\107\082\082\107\106\088\072\097\115\083\050\097\076\086\054\107\076\101\056\107\112\097\112\107\047\101\099\107\077\088\073\107\068\073\102\107\047\112\114\107\047\112\111\107\048\105\052\088\082\109\043\106\105\112\109\099\086\112\049\087\086\090\103\048\086\118\067\084\105\109\073\116\082\112\086\122\105\086\080\048\082\112\116\121\118\101\121\116\105\073\072\084\118\073\048\073\105\090\097\084\082\101\082\099\082\109\082\073\082\109\050\099\105\118\067\101\079\056\103\065\086\118\067\101\086\118\067\084\050\068\115\107\074\055\112\097\089\086\106\107\076\106\068\107\068\073\102\107\047\112\114\107\047\112\111\107\048\105\052\078\078\055\108\097\076\083\057\107\076\109\120\097\074\118\072\097\076\086\054\107\048\115\078\107\107\112\110\103\103\088\088\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\097\074\118\072\097\076\086\054\107\068\073\102\107\047\112\114\097\077\051\086\107\080\101\103\097\089\106\088\107\107\055\117\107\048\115\078\107\107\112\110\097\065\105\098\097\076\086\054\078\078\055\108\107\047\055\050\107\112\090\122\097\077\073\053\107\080\106\073\107\068\097\122\107\076\101\051\097\074\118\072\097\076\086\054\107\048\115\078\107\107\112\110\113\072\089\115\088\122\081\084\077\073\077\073\108\079\050\071\108\079\079\073\122\089\122\056\082\047\099\073\116\103\110\087\121\048\110\087\084\097\057\056\082\097\110\087\121\080\054\047\087\097\104\073\048\112\102\047\116\089\122\047\068\080\122\099\099\089\049\056\082\048\048\056\082\074\048\073\084\107\079\047\106\107\084\068\099\103\113\047\121\103\057\099\099\089\084\056\099\112\079\073\121\103\074\087\099\047\113\099\099\089\072\099\099\089\087\067\043\116\061\061","\075\056\052\079\053\075\081\079\110\070\121\100\053\075\081\102","\102\051\107\100\080\122\119\087\043\087\117\055\077\110\120\049\077\109\053\061","\102\070\111\065\090\075\111\065";"\043\073\100\047\077\079\089\055\098\083\100\055\077\051\052\070";"\074\104\050\116\107\076\083\043\107\106\051\101\053\075\111\100\088\116\061\061";"\102\070\087\065\108\085\087\054";"\076\122\052\070\098\083\111\082\052\051\087\056\098\083\116\061","\074\051\100\049\043\051\087\049\098\088\117\071\077\110\053\061";"\075\056\052\083\075\056\052\102\090\100\111\085\075\056\100\072";"\107\080\055\050\107\077\088\099\107\077\088\105\107\077\112\098\097\089\051\099","\102\109\100\122\112\109\108\061";"\080\109\111\082\098\083\116\061","\102\049\050\071\102\070\111\066";"\080\073\100\114\077\110\117\066\076\110\119\087\108\102\108\061","\102\070\067\071\102\070\111\066","\075\056\052\083\075\056\052\102\090\100\111\079\052\075\119\100\110\069\119\054\102\070\081\075\090\052\050\061","\102\051\071\071\102\049\117\065";"\119\051\100\114\077\075\077\099\080\122\119\089\112\109\098\068\080\083\087\122\112\072\119\102\080\109\100\066\080\050\061\061";"\119\075\100\075\090\075\107\072\110\069\120\075\053\052\119\052\075\071\061\061";"\043\073\100\047\077\079\089\051\098\083\100\055\077\051\052\070","\102\070\067\071\102\051\071\071";"\054\052\070\061","\119\052\100\052\090\052\117\113\053\070\121\117\102\056\098\100\119\050\061\061","\107\076\109\068\107\077\082\101\078\078\055\089\107\076\055\100\107\068\082\066\107\077\051\073\107\076\109\074\078\078\055\065\107\048\115\078\107\107\112\110\097\077\101\089\107\076\088\067","\075\056\052\108\102\070\100\085\110\069\052\065","\074\104\050\116\107\080\055\050\107\112\086\074\053\075\111\100\088\116\061\061","\112\110\119\087\080\075\087\056","\075\069\119\117\052\100\052\102\110\118\086\080\048\082\112\116\121\118\090\097\056\082\109\115\106\050\061\061","\102\049\117\065\090\075\111\066","\102\070\087\066\108\079\117\054";"\108\116\061\061","\090\085\116\081\108\084\120\075\076\109\089\061";"\065\110\085\061","\043\083\111\047\080\122\053\061";"\074\104\120\070\080\104\117\084\076\110\120\070\112\109\107\122\088\101\111\055\098\109\103\116\112\109\076\116\053\075\116\082\119\056\111\108\102\085\111\110\110\069\052\105\090\052\053\116\098\083\121\087\080\101\117\083\080\051\081\066\080\104\098\052\080\073\087\070\115\085\100\089\074\056\077\054\102\085\081\054\052\069\111\052\102\056\087\075\115\090\117\087\080\073\053\061","\097\074\051\066\097\074\106\048\105\102\079\087\082\106\076\061","\098\083\052\103\098\050\061\061";"\119\083\087\049\077\109\100\049\077\053\061\061","\052\052\120\100\119\056\111\054\119\050\061\061","\102\070\111\065\090\075\111\066";"\120\086\086\097\047\055\050\116\089\050\061\061","\119\073\052\047\077\051\107\085\077\109\100\070\112\050\061\061";"\120\084\076\051","\102\070\111\066\102\070\111\066";"\102\051\081\065\080\085\111\066";"\076\051\121\121\043\116\061\061","\102\070\087\065\090\102\050\071","\098\083\087\114\077\075\069\099\077\050\061\061";"\097\115\112\117\097\076\086\115\107\047\090\118\107\068\106\050\097\089\105\111\107\047\086\051\078\078\055\108\107\112\112\088\107\047\097\043\107\077\055\068\107\077\051\053\097\112\106\119\107\074\101\115\078\078\055\108\107\074\055\112\097\089\086\106\107\076\106\068\107\074\101\074\097\077\051\101\103\103\088\088";"\077\073\107\084","\102\049\050\071\102\070\087\054","\053\075\116\061","\043\073\100\082\077\083\111\114";"\098\083\100\055\077\051\052\070";"\102\051\081\065\108\083\081\066","\090\070\052\077\110\070\069\054\052\075\107\075","\080\073\100\114\077\110\117\066\076\110\119\087\108\102\050\061","\074\104\052\049\077\090\117\080\053\083\120\069\043\122\120\099\043\087\070\116\097\076\088\112\107\107\090\068\107\103\105\114\107\076\106\080\107\080\086\087\107\097\101\074\107\103\115\103\097\089\051\099\088\116\061\061";"\102\075\052\105\052\053\061\061","\075\069\119\117\052\100\052\102\110\070\065\108\053\075\120\074\102\085\087\102\052\050\061\061";"\076\122\052\073\077\087\077\121\080\072\052\087";"\102\051\107\100\077\083\087\070\119\073\111\084\098\110\120\108\080\104\120\070","\102\070\111\066\090\075\067\071","\076\051\111\069\080\122\053\061","\086\051\085\116\077\083\111\104\080\122\070\111\108\102\050\071\108\079\069\078\076\090\117\069\043\072\070\061";"\102\070\111\066\080\079\117\066";"\112\083\100\049\119\083\052\101\098\109\077\073";"\107\077\088\079\097\077\051\101\107\076\055\100","\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\102\085\111\110\090\085\052\117\102\050\061\061";"\113\083\120\073\077\056\077\083\120\070\053\071\053\086\109\098\047\082\109\100\101\118\090\067\073\105\109\100\101\050\061\061";"\102\070\087\066\080\085\067\071","\090\100\052\105\052\085\052\090","\107\076\097\113\107\077\055\071\097\074\051\066\107\077\055\089\107\107\106\085\107\047\086\051\107\076\088\077\078\078\055\108\097\076\086\072\107\107\090\068\107\080\118\048\097\076\088\113\097\074\051\066\107\077\055\089\107\047\112\107\107\080\055\054\078\078\055\108\107\080\082\097\097\115\097\082\107\074\101\120\097\115\112\117\107\076\082\118\097\076\088\065\107\106\051\056\097\112\083\107\078\078\055\108\107\107\055\074\097\074\109\104\107\047\051\087\097\077\051\086\107\074\106\097\107\080\086\087\107\047\105\120\107\074\051\043\103\103\088\088","\102\049\117\066\102\070\111\066","\107\097\086\078\107\076\106\068\107\047\088\043\107\078\090\101";"\080\073\100\114\077\110\117\066\076\110\119\087\120\053\061\061";"\102\070\111\065\080\085\067\071";"\052\056\100\108\052\075\052\113\107\074\118\098\107\077\083\111\097\115\083\050\097\076\086\054","\102\049\117\054\080\085\087\054","\112\083\052\121\080\072\119\068\080\109\100\103";"\102\051\107\100\043\051\120\121\043\083\052\053\043\073\052\049\043\051\052\056";"\107\080\051\102\097\089\086\106\107\080\086\081\097\115\083\050\097\076\086\054\107\076\051\081\107\047\055\097\107\047\086\051\078\078\055\108\097\089\086\106\107\076\106\068\107\077\088\079\107\078\105\109\107\068\101\109\097\089\088\100\107\077\112\098\107\078\106\101\109\118\086\066\047\082\112\109\121\118\112\055\082\118\086\109\087\118\101\120\048\118\112\071\114\100\104\099\099\089\084\122\099\074\048\122\122\089\072\068\068\076\079\047\121\103\057\068\099\103\113\056\099\076\078\056\082\068\103\049\120\090\110\099\099\089\056\061","\074\116\061\061","\102\051\107\100\080\122\119\087\043\116\061\061";"\102\083\087\101\090\083\052\121\080\085\120\099\080\109\070\114\120\088\103\071","\074\088\079\056\099\115\102\087\048\048\108\097\089\050\061\061";"\090\085\052\117\102\100\111\083\090\052\065\102\052\100\117\090\102\069\119\100\053\069\119\113\052\056\100\108\052\075\075\061","\098\083\087\071","\107\047\073\051\107\078\106\101\107\077\055\084\107\068\073\050";"\113\083\120\073\077\084\050\071\077\073\076\071\108\088\108\061","\075\056\100\072\119\053\061\061","\115\050\061\061","\097\077\101\113\107\074\055\120\107\068\097\122\107\076\101\051\107\112\097\054\107\080\086\055\107\078\082\054\107\076\101\080\107\080\082\097\078\078\055\112\088\082\101\104\122\118\073\112\084\118\112\089\056\090\057\087\116\077\049\073\048\112\074\068\114\107\057\047\073\068\067\099\097\076\088\079\107\077\083\111\097\074\086\113\097\077\106\054\074\118\109\120\084\118\109\115\106\086\112\075\082\118\109\072\082\055\057\047\121\103\104\068\099\080\104\122\087\076\049\047\122\112\089\099\107\080\055\050\107\112\086\074\053\075\111\100\074\118\109\117\122\105\112\114\068\056\100\054\119\086\118\067\116\053\061\061";"\107\078\082\104\107\080\101\073";"\043\104\119\099\043\083\100\070\098\083\100\084\112\071\061\061";"\107\077\086\043\097\115\083\050";"\090\085\052\117\102\100\111\083\090\052\065\102\052\100\119\117\102\056\114\113\052\056\100\108\052\075\075\061";"\107\076\083\043\107\106\051\101\107\097\086\078\107\076\106\068";"\074\104\052\049\077\090\117\080\053\072\117\066\076\110\087\087\043\087\070\116\097\076\088\112\107\107\090\068\107\103\105\114\107\076\106\080\107\080\086\087\107\097\101\074\107\103\115\103\097\089\051\099\088\116\061\061";"\107\076\118\049\107\097\086\078","\107\107\082\110\107\103\073\089\107\077\051\072\107\074\101\120\097\089\105\111\107\068\055\117\107\078\082\114\078\078\055\108\107\076\082\057\097\115\112\117\107\107\082\103\107\074\118\121\097\076\115\084\107\074\106\080\107\068\073\050\097\074\088\102\107\048\088\103\107\074\073\100\107\076\051\121\078\078\055\117";"\107\068\115\068\107\107\106\085\107\048\105\052\107\047\055\099\107\080\055\097\107\080\106\073\107\112\090\106\107\074\051\105\074\105\112\110\068\105\112\049\087\086\109\082\084\105\112\089\056\079\085\071\090\105\090\057\048\082\112\076\122\055\085\061";"\112\109\107\049\077\110\065\070","\052\071\061\061","\107\107\082\082\107\106\088\072\107\074\106\090\107\076\106\068","\097\077\101\057\107\080\088\075\107\076\051\121\107\076\112\099\107\107\106\085\107\112\097\098\107\080\106\102";"\075\069\119\117\052\100\052\102\110\118\101\072\106\082\109\115\106\105\090\103\101\118\073\047\048\050\061\061";"\080\083\052\122\043\049\089\061","\107\080\055\050\107\112\086\074\053\075\111\100";"\080\073\100\114\077\110\117\066\076\110\119\087\108\102\043\061","\102\049\117\066\108\083\071\071","\107\074\101\120\107\103\083\114\097\089\051\099\107\048\088\070","\052\070\100\090\075\056\087\054\075\116\061\061";"\075\083\081\121\086\109\052\055";"\074\050\061\061";"\086\109\052\121\043\116\061\061";"\076\073\052\073\080\104\065\087\102\109\100\084\043\073\067\061";"\043\104\119\099\043\085\077\099\080\083\081\099\098\071\061\061","\102\051\081\054\080\085\056\071";"\102\070\087\065\102\049\117\054";"\090\071\061\061";"\107\106\051\073\107\077\073\068","\075\069\119\117\052\100\052\102\110\118\109\057\106\118\073\050\122\118\101\111\048\105\109\043\101\050\061\061";"\090\050\061\061";"\097\115\083\050\107\068\088\122\107\103\082\088\107\068\088\090","\052\085\111\053\102\085\052\083\052\050\061\061";"\053\053\061\061";"\102\070\087\054\108\085\087\065";"\097\076\086\120\097\074\051\111\107\107\109\108\097\077\051\101","\080\073\052\087\077\085\119\087\076\122\052\073\077\056\087\056";"\043\073\100\047\077\079\108\070\098\083\100\055\077\051\052\070";"\107\076\055\078\107\074\118\098";"\110\050\061\061","\053\087\052\075\052\085\111\105\110\069\119\100\053\075\069\120\053\075\120\090\102\071\061\061","\107\076\083\043\107\106\051\101\107\047\112\111\107\048\105\052\089\050\061\061";"\102\053\061\061","\102\049\050\071\102\070\111\054";"\102\049\117\054\080\083\081\065","\097\112\051\075\107\048\105\052\107\107\090\043\097\077\051\101\107\076\055\100";"\120\105\086\097\047\055\050\116\089\050\061\061","\107\103\082\088\107\047\106\070","\043\073\100\047\077\079\108\055\098\083\100\055\077\051\052\070","\074\104\050\116\097\089\086\106\107\076\106\068\097\074\086\113\097\077\106\054\107\068\101\119\088\116\061\061","\090\085\052\117\102\085\052\090";"\074\104\050\116\107\076\083\043\107\106\051\101\097\074\086\113\097\077\106\054\107\068\101\119\088\116\061\061","\075\056\052\083\075\056\052\102\090\100\111\075\053\052\065\072\119\052\119\102","\043\072\065\087\098\073\087\099\098\110\120\053\080\104\098\087\043\116\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\102\056\061";"\043\073\052\071\077\109\100\070\098\083\087\114\077\053\061\061","\076\110\119\070\076\109\120\048","\074\118\101\104\066\069\070\061","\102\070\087\054\102\070\087\066";"\102\051\081\054\090\075\111\066";"\102\049\117\054\108\085\067\071","\107\048\105\052\107\047\055\099";"\080\073\100\114\077\110\117\066\076\110\119\087\108\071\061\061","\113\083\120\073\077\084\076\107\053\070\120\083\108\050\061\061";"\107\112\118\078\107\068\073\118\107\107\082\082\107\106\088\072","\113\083\120\073\077\073\076\071\108\079\050\071\108\105\109\111\056\118\109\065\084\086\109\056\121\105\090\097\084\082\109\087\047\086\112\098\122\105\109\071\087\105\109\065\048\118\112\043\048\105\109\056\087\101\071\116\107\106\101\121\107\068\082\113\097\115\097\121\107\097\097\110\107\076\106\116\107\074\101\115\108\102\075\087\107\112\115\086\107\074\055\056\089\110\081\055";"\052\085\121\065\102\056\111\052\052\085\081\065\102\056\075\061","\098\073\100\066\098\109\075\049","\102\051\107\079\080\083\087\084\112\071\061\061","\052\085\111\054\102\100\119\065\075\050\061\061","\107\080\088\083\097\076\088\065\107\068\082\047\097\077\101\113\107\076\118\074\107\076\106\116\107\076\109\087\107\074\055\076\107\076\109\089\107\048\115\078\107\107\112\110\107\048\101\100\107\076\051\052\078\078\055\108\107\097\055\066\107\074\101\050\107\047\086\051\097\077\086\070\107\112\118\107\107\074\082\109\107\074\082\066\107\074\118\098\107\068\106\056\078\078\055\117\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\112\109\111\107\077\118\097\107\076\118\074\107\078\082\089\107\074\106\105\107\074\101\120\107\068\088\052\102\069\102\056\082\068\076\066\107\076\118\099\107\074\082\087\107\080\088\083\097\077\055\050\097\115\112\117\107\103\073\107\107\076\101\048\107\076\109\049\107\103\109\122\107\107\106\085\097\077\101\113\107\076\118\074\107\076\106\116\107\076\109\087\107\074\055\076\107\076\109\089\107\076\101\110\097\115\083\068\078\078\055\108\107\074\055\112\107\097\055\066\107\074\101\050\107\047\086\051\097\077\086\070\097\112\073\081\107\047\109\084\107\077\115\108\107\048\115\078\107\107\112\110\078\078\055\117\088\116\048\087\048\078\122\056\082\068\078\073\122\107\079\056\082\047\099\122\101\080\122\087\048\047\048\087\122\074\048\087\056\089\084\099\099\089\049\087\084\097\048\047\122\089\079\068\047\068\072\073\066\048\099\122\087\047\113\122\101\080\122\087\048\047\048\056\082\089\079\056\082\115\048\073\101\065\080\068\116\089\110\087\121\097\079\056\082\115\048\047\073\065\057\087\084\103\099\087\084\097\057\056\082\097\110\056\099\080\057\122\087\115\084\073\122\115\049\073\087\048\122\087\099\089\057\099\099\089\049\122\121\074\080\087\056\089\078\056\082\089\104\068\047\068\072\087\101\078\078\047\116\089\122\056\082\089\048\047\122\112\074\122\073\068\102\087\121\112\084\087\073\097\074\073\066\048\099\122\087\047\113\056\082\065\102\087\101\078\078\047\116\089\122\122\073\097\078\073\068\089\113\056\099\065\084\087\121\076\084\084\116\089\089\115\107\106\118\075\107\112\112\088\052\085\100\119\107\076\118\108\107\112\051\053\107\048\115\078\107\107\112\110\107\068\101\076\107\112\105\048\052\105\109\090\084\100\120\102\052\105\086\112\121\105\112\110\114\082\109\050\073\086\118\067\084\105\073\050\101\086\112\074\106\052\120\102\107\077\115\108\107\068\101\076\107\112\105\048\107\074\055\076\107\076\109\089\078\078\055\108\107\103\090\051\107\077\088\105\097\076\088\065\107\068\082\047\107\076\118\106\107\048\115\078\107\107\112\110\107\074\055\076\107\076\109\089\107\076\101\110\097\115\083\068\113\072\089\061";"\098\110\120\087\053\104\065\047\098\050\061\061";"\075\051\052\070\052\072\065\121\076\051\114\047\080\073\043\061","\086\073\121\075\052\071\061\061","\120\049\043\069";"\107\112\109\087\107\112\112\082\107\076\109\074\107\080\101\108\107\074\106\112\107\107\106\085\107\080\086\101\107\097\073\070","\102\049\117\054\102\051\081\054","\098\110\120\087\119\110\065\055\080\104\089\061","\043\073\100\082\112\071\061\061";"\108\053\061\061";"\043\073\100\047\077\079\108\051\098\083\100\055\077\051\052\070","\043\073\100\047\077\079\100\070\076\110\065\122\077\110\053\061";"\043\073\100\047\077\079\085\107\098\083\100\055\077\051\052\070","\089\071\061\061";"\098\083\087\071\052\083\087\070\080\083\075\061";"\119\100\065\065\102\056\114\065\102\056\098\113\052\056\100\108\052\075\075\061","\113\083\120\073\077\073\076\071\108\079\050\071\108\105\112\112\116\082\109\117\122\072\081\055";"\080\073\087\066","\102\070\087\054\080\085\111\054","\102\049\117\065\090\109\081\065","\052\051\052\121\043\083\111\082","\098\083\100\055\077\051\052\070\090\051\052\107";"\075\069\119\117\052\100\052\102\110\118\112\089\073\105\109\043\082\082\109\053\084\086\086\122\066\050\061\061";"\080\073\111\049\098\083\100\082\076\051\075\061","\077\083\052\066\076\110\087\075\112\109\069\087","\065\052\056\087\080\090\052\056";"\075\069\119\117\052\100\052\102\110\118\101\072\106\082\109\115\106\105\112\074\099\082\109\054\087\116\061\061";"\075\056\052\108\102\070\100\085\110\069\117\117\102\056\052\108","\080\073\100\114\077\110\117\066\076\110\119\087\108\084\116\061","\097\076\088\112\107\107\090\068\107\103\105\114\107\076\106\080\107\080\086\087\107\097\101\074\107\103\115\103\097\089\051\099\097\074\106\048\097\074\097\107";"\086\051\053\116\077\083\111\104\080\122\070\111\108\102\050\071\108\079\069\078\077\088\117\069\043\072\070\061","\076\051\121\087\043\104\053\061";"\102\050\061\061","\075\056\052\083\075\056\052\102\090\100\111\075\102\070\111\108\052\085\087\053";"\075\051\052\070\053\051\111\082\077\073\087\122";"\043\073\100\047\077\079\053\071\098\083\100\055\077\051\052\070";"\119\056\087\090\075\069\119\108\090\052\120\075";"\107\077\112\098\107\048\088\070";"\102\070\087\054\102\070\087\065";"\102\070\111\065\080\079\050\071","\102\051\081\066\108\085\056\071","\107\047\055\099";"\080\073\100\114\077\110\117\066\076\110\119\087\108\053\061\061";"\080\073\087\066\089\083\069\049\077\071\061\061","\075\069\119\117\052\100\052\102\110\118\101\072\106\082\109\115\106\105\086\088\082\105\109\067\082\053\061\061";"\112\110\120\088\080\104\120\049\119\083\052\101\098\109\077\073";"\113\083\120\073\077\056\077\083\119\084\075\051\105\086\109\099\082\118\112\050\106\122\081\055","\113\053\061\061","\107\076\112\080\097\112\073\066";"\076\073\111\049\043\049\076\061";"\120\118\086\097\047\055\050\116\089\050\061\061";"\043\073\100\047\077\079\108\071\098\083\100\055\077\051\052\070","\080\073\100\114\077\110\117\066\076\110\119\087\108\049\043\061","\107\068\090\089\107\077\088\089","\053\052\052\075\102\069\111\083\102\070\081\108\102\069\043\061";"\102\070\056\071\102\070\111\054";"\102\070\111\054\108\085\056\071";"\043\083\100\055\098\072\056\055\098\083\100\055\077\051\052\070";"\043\073\100\047\077\079\108\107\098\083\100\055\077\051\052\070","\113\083\120\073\077\073\076\071\108\079\050\071\108\105\090\103\082\118\109\115\106\105\109\067\116\105\112\050\106\122\081\055","\080\073\100\114\077\110\117\066\076\110\119\087\075\051\121\099\098\070\052\082\077\109\069\047\077\110\108\061";"\108\079\056\061";"\077\104\052\047\077\050\061\061","\107\074\051\057\107\107\090\068\107\047\055\050\097\089\106\088\107\107\055\117\097\065\105\098\097\076\086\054\107\068\101\109\107\074\051\105\107\078\106\122\107\048\115\078\107\107\112\110\107\048\105\052\107\047\055\099\078\078\055\108\107\047\055\050\107\080\088\054\097\074\118\072\097\076\086\054\107\106\101\121\107\080\055\054\107\047\051\087\097\074\118\080\097\115\083\108\107\048\115\078\107\107\112\110\078\078\055\108\097\112\115\085\107\048\109\074\107\076\106\116\097\115\083\050\097\077\101\089\107\076\088\067\120\049\075\087\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\048\115\078\107\107\112\110\097\077\101\089\107\076\088\067\097\115\097\121\107\097\097\110\107\047\112\107\107\080\055\054\078\078\055\112\107\106\118\075\107\112\112\088\107\107\082\082\107\106\088\072\097\077\055\050\097\115\112\117\107\048\115\078\107\107\112\110\108\102\050\071\097\115\083\050\097\076\086\054\078\078\055\108\108\086\086\097\047\118\112\049\087\086\112\043\048\049\043\069\107\103\115\107\078\078\055\108\108\082\086\097\047\049\085\071\108\105\086\088\082\086\118\067\084\079\054\122\082\106\043\081\108\084\079\122\116\048\122\084\116\089\074\068\048\106\072\122\048\047\113\087\122\076\113\056\082\089\104\068\116\089\054\068\073\077\072\073\073\048\102\087\121\078\099\084\116\089\089\115\088\082\086\043\116\086\101\102\122\086\112\068\068\086\109\067\084\118\118\067\073\084\085\071\108\088\068\071\074\084\043\069\054\102\043\069\115\079\072\122\082\106\043\047\088\082\112\116\121\118\109\072\121\082\112\068\068\086\109\067\084\118\118\067\073\084\085\071\108\088\068\081\108\079\050\087\054\102\085\071\108\105\118\067\101\079\074\122\082\106\113\099\099\089\056\115\097\074\118\072\097\076\086\054\107\106\101\121\107\080\055\054\078\078\055\112\108\102\050\071\115\084\085\082\108\084\075\111\108\102\089\069\078\078\055\089\108\118\086\097\047\118\118\067\101\110\081\055\088\116\047\067\076\051\077\073\119\056\076\104\119\079\117\117\107\074\101\097\107\074\106\083\097\074\097\118\107\076\101\071\107\078\115\118\107\097\083\082\107\048\115\078\107\107\112\110\078\078\055\108\097\115\118\104\107\080\088\111\107\076\118\099\097\089\105\111\107\112\090\112\107\107\106\085\107\076\082\118\097\076\088\065\107\077\088\085\107\078\106\122\107\048\115\078\107\107\112\110\107\048\105\052\107\047\055\099\078\078\055\117\113\072\089\061";"\097\077\055\050\097\115\112\117\107\068\073\074\107\076\106\068\107\047\105\120\107\074\051\043\107\047\086\051\078\078\055\108\107\076\082\118\097\076\088\065\107\047\106\088\107\076\083\043\107\076\083\043\107\106\051\101\097\074\118\053\097\115\083\108\103\103\088\088\079\053\048\087\084\097\057\056\082\097\110\056\099\080\057\122\087\115\084\087\066\089\057\047\087\115\078\122\073\107\084\047\073\078\080\099\099\089\116\071\078\078\055\065\107\080\118\048\107\068\051\104\097\077\090\082\107\076\101\072\107\068\051\101\074\118\112\089\087\082\101\050\121\086\090\111\099\118\086\075\106\100\099\073\073\068\074\087\116\077\081\098\107\112\097\054\097\074\118\080\097\115\083\108\107\076\101\072\107\068\051\101\103\103\088\088\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\112\097\054\097\115\097\118\107\078\051\082\105\116\068\099\043\122\052\082\089\100\119\099\077\051\098\066\077\052\117\121\098\110\120\087\115\088\087\067\043\116\061\061","\053\110\052\070\080\070\121\087\080\072\050\061","\097\076\088\065\107\068\082\047\097\115\097\118\107\078\051\082\097\089\086\106\107\076\106\068\097\074\086\113\097\077\106\054\107\107\082\082\107\106\088\072\079\053\048\047\116\089\122\073\101\097\122\122\073\097\078\073\068\089\113\087\056\089\078\099\099\089\049\122\116\048\122\087\121\078\099\073\048\112\102\073\084\089\122\047\056\106\078\068\114\107\057\047\073\068\057\122\073\097\078\073\068\089\043\120\088\082\101\104\122\118\073\112\084\118\086\115\114\082\112\050\116\086\090\103\048\086\118\067\084\105\086\088\082\086\109\072\082\118\112\114\047\105\112\108\101\086\073\090\048\082\109\117\122\105\112\114\068\082\101\104\122\118\073\112\084\071\070\115\079\053\048\087\084\097\048\068\116\078\104\068\114\107\057\047\073\068\057\087\073\097\074\047\073\065\057\073\101\065\080\047\073\065\057\056\099\089\104\122\073\097\078\073\068\089\043\061";"\043\073\100\047\077\079\087\070\076\110\065\122\077\110\053\061","\113\100\053\055\108\049\076\103\120\049\053\097\108\102\053\097\108\102\119\067\098\050\061\061","\076\051\111\114\043\050\061\061","\102\051\081\066\108\083\081\066","\076\051\081\121\043\104\108\061";"\097\080\082\119\107\077\088\120\107\076\051\052";"\043\073\100\047\077\079\085\055\098\083\100\055\077\051\052\070","\077\073\111\084\098\110\108\061","\075\069\119\117\052\100\052\102\110\069\065\100\075\070\052\075\119\085\052\083\053\052\052\108\052\050\061\061","\107\076\083\043\107\106\051\101\097\074\086\113\097\077\106\054","\043\073\100\047\077\079\108\103\098\083\100\055\077\051\052\070";"\102\070\056\071\108\079\050\071","\097\076\088\065\107\068\082\047\107\076\106\116\107\076\109\087\107\068\101\076\107\077\055\097";"\076\051\108\081\108\084\108\061","\120\050\061\061";"\080\109\111\069\043\051\052\099\098\073\052\055","\097\074\086\049\097\074\086\079","\080\122\052\114\076\073\052\055","\043\083\100\055\098\072\056\049\098\083\100\055\077\051\052\070","\080\051\077\073\043\051\052\070","\107\077\112\098\107\076\106\116\097\076\088\113\097\089\051\099\107\048\088\070","\086\069\052\071\089\083\119\099\098\051\107\111\054\102\085\071\108\079\069\078\052\110\050\116\098\110\117\111\086\070\119\099\098\051\103\116\077\083\111\104\080\122\070\111\108\084\050\071\054\110\114\085\080\104\098\082\089\072\052\071\113\053\061\061","\098\109\107\047\098\085\120\121\043\104\119\087\043\116\061\061","\107\068\083\101\107\112\090\120";"\102\070\056\071\090\102\050\071","\075\083\087\084\112\104\052\071\053\051\111\082\098\083\100\047\080\073\052\055\090\110\119\087\080\053\061\061","\053\051\100\066\076\104\052\066\076\110\119\087\090\083\052\121\080\083\087\082\077\071\061\061","\113\083\120\073\077\056\077\083\119\084\075\051\105\086\090\097\056\082\109\115\106\072\081\055","\102\070\056\071\090\075\111\066","\110\102\070\061";"\102\051\081\054\090\102\117\066";"\086\069\081\111","\102\051\071\071\090\102\050\071","\053\104\052\055\043\051\075\061","\077\122\052\066\080\085\107\121\080\109\075\061","\113\083\120\073\077\056\077\083\119\084\075\051\105\086\112\074\099\082\109\054\087\122\081\055","\113\100\053\055\108\049\076\103\120\049\085\097\108\102\053\097\108\102\119\067\098\050\061\061","\077\051\081\099\098\073\052\049";"\080\073\100\114\077\110\117\066\076\110\119\087\108\102\076\061";"\074\104\065\069\080\101\117\102\077\110\119\079\080\051\107\073\112\109\043\068\089\087\120\075\053\052\119\052\075\069\057\122\073\097\078\073\068\089\113\056\082\047\074\087\101\106\116\101\074\088\117\073\076\109\081\049\077\090\056\078\088\101\111\071\089\105\073\050\116\118\109\119\099\086\101\104\122\118\073\112\084\118\112\089\056\053\068\061";"\052\073\052\068\112\109\120\066\077\053\061\061";"\102\051\081\065\080\079\117\065","\107\080\088\083\097\077\101\113\107\076\118\074\107\076\106\116\107\076\109\087\107\074\055\076\107\076\109\089\107\074\118\098\107\068\106\056\107\112\118\107\097\074\083\121","\075\069\119\117\052\100\052\102\110\069\065\100\075\070\120\052\075\056\087\075";"\076\073\111\049\043\049\108\061","\043\073\100\047\077\079\085\104\098\083\100\055\077\051\052\070","\075\069\119\117\052\100\052\102\110\118\090\103\084\086\086\117\048\086\101\120\048\118\112\071\114\050\061\061","\102\070\067\071\108\085\111\066";"\120\084\076\061";"\076\051\100\082\053\110\119\070\076\109\120\048";"\043\083\100\055\098\072\056\061","\097\074\051\066\097\074\106\048";"\076\051\111\114\080\109\100\082\077\085\114\087\086\053\061\061","\043\073\111\066\077\053\061\061","\102\070\111\065\090\109\081\066","\077\073\111\082\098\100\120\047\086\073\075\061";"\075\069\119\117\052\100\052\102\110\118\109\110\122\105\101\121\116\105\086\089\121\082\109\054\056\053\061\061","\098\083\065\084","\090\075\107\109\052\100\087\053\119\052\111\102\090\085\087\100\102\085\053\061";"\113\083\120\073\077\073\076\071\108\079\050\071\108\105\101\057\121\118\073\072\084\118\112\065\056\118\112\109\048\053\061\061";"\102\051\081\066\080\083\081\066","\053\075\116\082";"\074\104\065\069\080\101\117\052\090\075\052\055\043\073\111\055\043\070\077\055\076\109\069\087\105\056\120\066\077\109\100\055\115\088\056\115\074\104\065\069\080\101\117\102\077\110\119\079\052\073\100\055\115\088\098\102\080\104\052\082\077\100\111\100\080\073\100\101\080\083\052\102\119\087\116\122\074\072\120\073\086\088\056\078\088\116\061\061","\102\056\111\105\119\053\061\061";"\052\056\100\108\052\075\052\113","\107\076\106\116\097\076\088\113\097\089\051\099\107\048\088\070\074\116\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\101\120\048\118\112\071\114\105\109\054\048\118\090\078\047\086\109\056\073\082\073\050\101\086\118\067\084\105\109\071\121\082\112\108\101\086\086\100\047\118\090\103\101\118\073\098\068\082\073\121\082\082\109\097\084\118\090\067\073\105\109\100\101\105\090\111\099\118\086\075\106\105\118\067\073\116\068\081\074\101\079\056\082\089\104\122\116\112\104\068\084\112\057\073\066\074\053\115\108\101\103\116\107\076\106\116\097\076\088\113\097\089\051\099\107\048\088\070\088\084\108\082\089\105\086\074\116\082\073\072\084\082\073\114\087\105\112\049\087\086\101\120\048\118\112\071\114\105\118\067\116\110\081\055","\088\122\081\084\077\073\076\071\108\083\077\073\108\079\079\047\116\089\122\073\101\097\122\068\047\068\072\087\101\106\079\087\121\112\110\122\073\068\102\073\101\065\084\087\122\074\048\099\099\089\049\087\066\089\080\068\121\097\048\087\101\106\084\073\084\047\074\047\073\065\057\084\116\089\072\068\099\107\099\087\121\112\110\084\116\089\072\047\116\089\079\087\121\078\047\067\043\116\061\061";"\105\101\050\061","\077\109\119\122\077\075\077\047\080\083\075\061";"\080\109\100\070\076\051\116\061","\077\083\052\101\098\109\077\073\102\073\100\114\077\075\120\065\119\079\089\061","\097\074\090\067";"\098\083\111\071\080\083\052\073\098\100\056\061";"\102\051\081\065\080\079\117\066","\107\068\106\050\097\089\105\111","\120\049\043\104","\102\049\117\054\080\085\111\066","\102\070\111\065\090\075\087\065","\102\051\107\085\043\073\100\122\075\104\119\099\043\050\061\061";"\097\074\086\113\097\077\106\054\078\078\055\112","\090\075\107\109\052\100\087\053\119\052\111\110\119\075\100\053\102\070\103\061","\107\074\101\105\107\107\082\082\107\106\088\072\107\074\106\090\107\076\106\068","\120\049\043\049","\043\104\117\087\080\083\081\075\112\109\069\087","\076\051\085\081\108\084\108\061","\120\053\061\061";"\107\080\088\054\107\068\088\106";"\075\069\119\054\075\085\077\054\102\085\081\054\052\071\061\061";"\113\083\120\073\077\056\076\069\105\085\120\088\053\053\061\061","\102\049\117\054\102\070\067\071","\098\109\107\047\098\050\061\061";"\043\073\100\047\077\079\085\103\098\083\100\055\077\051\052\070";"\102\049\117\054\080\083\081\066";"\090\070\052\077\110\069\120\075\102\069\117\117\052\100\119\117\053\070\066\061";"\112\083\052\121\080\083\052\055\074\083\069\099\080\051\107\048\112\109\103\066\076\051\100\070\074\083\065\087\076\110\089\061","\080\073\100\114\077\110\117\066\076\110\119\087\108\084\075\061";"\080\109\120\099\108\102\089\049";"\080\051\081\056\098\073\100\066\098\109\075\061","\097\076\086\105\097\112\051\075\107\048\105\052\097\089\051\099\107\048\088\070\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\097\089\051\099\107\048\088\070\107\076\118\099\107\074\082\087\107\112\090\112\097\076\088\065\078\078\055\108\107\080\088\083\107\068\055\065\107\103\109\122\107\074\101\074\097\077\051\101\097\112\083\097\107\080\106\054\107\074\055\076\107\076\109\089\107\074\051\057\107\107\090\068\078\078\055\112\088\084\085\082\089\105\090\103\084\086\086\117\048\086\101\120\048\118\112\071\114\050\068\055\074\101\079\087\101\106\079\047\116\065\057\068\084\112\057\073\066\074\053\115\108\055\103\116\107\103\082\088\097\076\086\105\097\112\051\075\107\048\105\052\097\089\051\099\107\048\088\070\078\078\055\117\113\072\089\061";"\075\069\119\117\052\100\052\102\110\118\101\111\048\105\109\043\101\105\109\099\082\118\112\050\106\116\061\061";"\043\073\052\114\076\109\087\082\043\071\061\061","\080\073\100\114\077\110\117\066\076\110\119\087\108\084\089\061","\080\073\100\114\077\053\061\061";"\052\052\117\085\053\052\119\100\110\070\120\108\052\052\120\075\119\052\065\102","\105\101\116\087\077\088\068\047\105\116\061\061","\043\083\052\070","\107\068\097\122\107\076\101\051","\102\051\081\065\090\075\087\066";"\076\109\077\070\077\110\065\120\076\109\120\055\080\071\061\061","\080\073\100\114\077\110\117\066\076\110\119\087\120\071\061\061","\113\083\108\071\108\079\050\071\077\073\077\073\077\116\061\061";"\097\115\097\118\107\078\051\082\107\077\051\073\107\076\109\074\107\048\115\078\107\107\112\110\097\077\101\089\107\076\088\067\078\078\055\108\107\078\055\097\107\107\055\117\120\084\050\087\103\103\088\088\107\112\112\088\107\047\097\043\107\077\051\073\107\076\109\074\097\115\083\050\097\076\086\054\097\074\112\100\097\074\118\072\120\084\050\087\078\078\055\108\107\076\101\077\107\068\055\065\107\103\109\122\107\076\109\068\107\077\082\101\107\048\115\078\107\107\112\110\097\077\101\089\107\076\088\067\097\074\118\080\097\115\083\108\107\048\115\078\107\107\112\110\078\078\055\108\107\112\112\088\107\047\097\043\107\077\051\073\107\076\109\074\097\115\083\050\097\076\086\054\107\074\051\105\107\074\106\105\120\084\050\087\078\078\055\108\107\076\101\077\107\074\055\076\107\076\109\089\107\048\115\078\107\107\112\110\107\077\051\073\107\076\109\074\078\078\055\117\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\074\097\074\107\112\112\088\107\077\051\073\107\076\109\074\097\115\083\050\097\076\086\054\120\084\075\087\078\078\055\108\107\077\082\101\107\077\083\076\053\086\101\121\116\105\073\072\084\049\076\081\065\086\118\067\084\105\109\089\073\086\112\055\082\118\086\109\087\118\109\080\068\082\109\119\073\085\072\099\099\089\049\087\047\068\074\073\122\047\049\087\122\112\080\087\121\076\099\068\068\076\079\047\121\103\067\069\105\090\110\099\099\089\049\087\073\097\074\087\056\077\121\117\097\115\083\050\097\076\086\054\108\101\110\099\099\089\049\087\101\065\122\056\099\065\084\087\121\076\084\073\066\048\099\122\087\047\113\087\122\112\080\087\121\076\099\084\116\089\074\068\048\048\078\122\099\112\078\068\099\103\113\047\106\107\084\087\122\112\080\087\121\076\099\056\099\065\084\087\121\076\084\047\073\089\084\087\116\074\049\099\099\089\049\087\066\089\080\087\121\103\057\087\066\065\072\087\073\097\074\047\073\065\057\087\101\106\079\068\068\076\079\047\068\047\072\122\084\068\113\099\099\089\049\087\082\080\080\047\122\077\078\073\073\089\078\073\073\080\048\056\082\076\099\056\082\074\078\084\116\089\065\067\043\116\061\061";"\097\112\109\071\107\077\105\117\074\118\109\056\047\118\112\115\116\105\101\079\099\086\109\043\106\050\061\061";"\053\073\100\084\112\070\119\055\080\104\117\075\077\109\069\071\080\083\100\070\077\053\061\061","\076\104\065\087\076\110\119\087";"\043\073\100\047\077\079\089\081\098\083\100\055\077\051\052\070","\102\051\081\066\090\102\117\065";"\076\110\052\055\076\075\065\107\075\083\081\121\086\109\052\055";"\053\109\081\066\112\109\100\082\076\051\075\061","\074\051\120\066\112\109\120\048\089\085\065\121\098\072\119\066\077\109\098\055\080\104\052\082\077\100\119\107\043\083\075\081\088\101\111\084\080\083\087\084\112\055\117\088\076\110\119\070\080\083\052\073\112\109\052\066\077\085\077\055\076\109\069\087\090\073\111\047\080\056\065\069\098\072\119\099\080\116\061\061";"\088\101\111\069\043\051\075\116\108\102\053\061";"\102\049\050\071\080\079\117\065","\107\103\073\122";"\077\083\052\101\098\109\077\073\102\122\052\114","\110\122\117\121\043\122\119\107\115\088\052\056\115\055\056\056";"\076\051\100\049\098\085\107\121\080\109\075\061","\043\083\100\055\098\072\087\071\077\110\053\061";"\102\051\081\065\108\083\081\065";"\077\109\119\047\098\083\065\099\086\050\061\061";"\090\070\052\077\110\070\100\052\052\085\111\088\053\052\119\075\102\085\075\061";"\107\076\051\054\107\076\106\047\107\047\090\078\107\076\086\078\078\078\055\108\107\076\051\054\107\076\106\047\097\077\101\113\107\076\118\074\107\077\055\068\107\068\101\076\107\047\112\110\107\047\086\051\097\074\118\080\097\115\083\108\107\047\090\078\107\076\086\078\078\078\055\108\107\076\118\106\097\089\105\111\097\076\088\065\107\068\082\047\097\077\101\113\107\076\118\074","\102\052\050\055","\075\100\065\065\119\052\120\075";"\102\049\117\054\090\109\071\071";"\102\049\117\065\080\079\117\054";"\102\070\056\071\090\109\081\054","\052\085\052\102\052\100\111\120\102\069\077\100","\102\070\087\065\090\109\071\071","\043\083\100\055\098\072\056\068\065\109\053\047\098\083\100\055\077\051\052\070","\102\070\111\065\102\070\111\054";"\090\075\107\109\052\100\087\053\119\052\067\055\090\100\098\100\053\052\117\054\102\116\061\061";"\102\051\107\085\043\073\100\122\075\104\119\121\043\122\053\061","\088\101\111\069\043\051\075\116\120\050\061\061";"\074\051\100\049\043\051\087\049\098\088\117\050\098\083\100\055\077\051\052\070";"\080\083\111\049\098\050\061\061";"\102\049\050\071\090\075\067\071","\065\109\053\087\077\088\052\056\054\055\052\056\054\055\052\056\054\055\052\056\054\055\052\056\054\055\052\056\054\071\061\061","\043\083\100\055\098\072\056\070\098\083\100\055\077\051\052\070","\102\070\111\054\102\049\117\065","\076\073\111\049\043\049\056\061";"\043\073\100\047\077\079\077\070\076\110\065\122\077\110\053\061","\119\051\052\070\090\110\119\087\080\075\120\099\080\051\081\056\080\104\098\082","\043\073\100\047\077\079\089\071\098\083\100\055\077\051\052\070","\043\073\052\066\080\051\100\056","\105\053\061\061","\107\074\101\120\107\103\083\114\097\089\051\099\107\076\073\088","\102\049\117\065\080\085\087\066";"\053\052\052\075\102\070\077\054\102\085\081\054\052\071\061\061","\074\104\119\121\043\073\098\087\098\088\117\050\098\083\100\055\077\051\052\070","\043\073\100\047\077\079\085\069\098\083\100\055\077\051\052\070","\107\078\106\049\107\076\109\074\097\065\088\068\107\103\097\080\107\047\112\099","\076\051\121\087\076\051\114\101\080\104\116\061";"\102\070\111\054\108\085\087\065","\119\053\061\061";"\119\051\052\070\053\051\111\082\077\073\087\122","\108\102\117\089\107\074\118\082\107\047\101\113\107\080\082\097\097\115\097\082\109\118\090\111\099\118\086\075\106\105\101\077\106\118\086\118\047\105\086\114\101\086\086\097\047\069\070\097","\086\069\120\071\076\109\120\087\113\110\114\085\080\104\098\082\089\083\119\099\098\051\107\111\054\102\085\071\108\079\050\111\086\070\119\099\098\051\103\116\098\110\117\111","\075\069\119\117\052\100\052\102\110\070\100\102\075\070\087\102\052\100\052\105\090\052\119\088\052\052\119\075\102\070\103\061","\097\074\051\066\107\077\055\089";"\107\047\086\116","\075\069\119\117\052\100\052\102\110\118\101\072\106\082\109\115\106\105\109\053\116\118\086\049\087\116\061\061";"\119\116\061\061";"\075\069\119\117\052\100\052\102\110\118\109\115\068\105\073\050\122\118\101\120\048\118\112\071\114\050\061\061","\090\056\111\065\102\087\057\073\101\065\084\087\122\074\068\061";"\086\070\081\087\077\122\053\116\077\083\111\104\080\122\070\111\108\084\075\071\054\110\114\108\077\109\077\070\089\072\052\071\113\053\061\061";"\097\089\083\108\107\074\101\112\107\103\101\083\107\076\118\119\107\068\106\050\097\089\105\111\107\076\051\121\053\070\102\047\121\103\048\073\087\074\103\066\089\105\109\104\047\086\086\068\101\118\112\065\101\118\109\087\087\055\057\047\047\080\079\087\056\103\085\099\107\097\086\120\107\047\086\054\107\068\106\050\097\089\105\111\109\118\109\100\099\086\090\097\082\082\101\121\116\105\112\050\047\118\086\074\116\082\112\050\056\101\071\116\107\080\086\068\097\112\051\075\107\103\082\088\107\047\106\070\110\086\105\050\116\116\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\112\114\047\105\073\050\101\086\073\121\082\086\090\103\082\082\112\072\056\082\090\097\082\082\073\050\101\086\112\074\106\090\049\056\082\089\104\073\114\112\048\068\114\074\122\056\082\078\099\056\099\077\110\122\101\089\080\087\084\107\072\073\101\068\079\068\116\078\104\099\099\089\100\067\043\116\061\061";"\076\104\108\081\108\084\108\061";"\107\080\118\048\097\076\088\113\097\074\051\066\107\077\055\089\107\112\118\078\107\068\088\106","\053\087\052\075\052\085\111\105\110\118\073\084\122\118\086\065\106\086\073\050\101\086\112\074\106\053\061\061";"\080\073\052\087\077\085\100\069\043\073\100\065\077\050\061\061","\097\076\088\065\107\068\082\047\097\089\086\106\107\076\106\068\107\077\088\079\107\107\106\085\097\112\105\113\107\103\073\047","\076\109\120\070\112\110\077\087","\075\056\111\072\052\075\075\061","\107\068\101\076\107\047\112\110\107\103\106\051\107\068\088\117\097\077\090\077\097\115\118\099\107\107\106\085\107\076\106\068\107\074\051\043\090\075\053\097";"\097\089\083\108\107\074\101\112\107\112\097\054";"\080\073\100\114\077\110\117\066\076\110\119\087\108\049\050\061","\113\072\089\061";"\108\079\053\061";"\053\109\077\070\077\110\089\061";"\097\076\088\065\107\068\082\047\097\112\105\113\107\103\073\047","\077\104\120\069\076\116\061\061";"\102\070\087\066\080\085\111\065";"\102\049\117\054\102\049\117\054","\107\074\101\120\107\103\083\114\097\089\051\099\107\076\073\088\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\097\089\051\099\107\048\088\070\107\076\118\099\107\074\082\087\107\112\090\112\097\076\088\065\078\078\055\108\107\080\088\083\107\068\055\065\107\103\109\122\107\074\101\074\097\077\051\101\097\112\083\097\107\080\106\054\107\074\055\076\107\076\109\089\107\074\051\057\107\107\090\068\078\078\055\112\088\084\085\082\089\105\090\103\084\086\086\117\048\086\101\120\048\118\112\071\114\050\068\055\074\101\079\087\101\106\079\047\116\065\057\068\084\112\057\073\066\074\053\115\108\055\103\116\107\103\082\088\097\076\086\105\097\112\051\075\107\048\105\052\097\089\051\099\107\048\088\070\078\078\055\117\113\072\089\061","\097\089\090\081\107\068\101\076\107\077\088\105\078\078\055\108\107\106\088\107\107\068\051\082\097\115\097\118\107\112\097\112\097\115\083\050\097\076\086\054\097\089\086\106\107\076\106\068\107\077\088\079\097\077\051\101\107\076\055\100\107\097\051\065\097\112\105\113\107\103\073\047\078\078\055\108\107\074\101\078\097\115\112\117\107\047\101\099\107\048\105\052\107\080\101\089\097\112\051\075\107\048\105\052\107\076\101\051\097\076\088\116\097\077\051\101\107\076\055\100\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\078\055\097\107\107\055\117\097\115\097\118\107\078\051\082\107\074\101\097\097\065\105\098\097\076\086\054\107\074\051\105\107\074\106\105\120\102\050\087\097\089\090\081\107\068\101\076\097\089\086\106\107\076\106\068\107\077\112\098\107\048\088\070\113\072\089\061","\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\075\085\100\052\075\070\075\061";"\097\089\051\099\107\076\073\088","\076\110\052\055\076\075\107\121\080\109\052\079\090\075\053\055";"\086\069\052\071\113\110\114\085\080\104\098\082\113\053\061\061";"\076\073\100\049\077\075\121\087\076\109\081\117\080\109\111\069\080\122\053\061";"\107\080\051\102\107\107\082\082\097\074\118\080\107\076\109\087\097\077\106\054\107\047\055\097\107\076\073\099\107\047\055\066\107\047\086\051\078\078\055\108\097\089\086\106\107\076\106\068\097\115\097\118\107\078\051\082\107\077\051\073\107\076\109\074\107\074\101\097\107\076\051\054\107\076\106\047\107\047\090\078\107\076\086\078\107\112\118\107\097\074\083\121\103\103\088\088\107\077\082\101\107\047\055\066\107\106\051\056\107\076\106\113\097\089\105\111\107\074\101\120\107\074\055\112\107\107\090\113\107\047\109\089\074\101\050\115\088\082\112\114\047\105\109\115\122\118\101\079\099\086\109\054\106\082\109\043\106\105\101\118\056\118\109\072\082\082\112\068\068\086\109\067\084\118\090\103\101\118\090\103\082\082\086\067\082\082\086\043\116\086\109\074\099\082\073\050\101\086\118\067\084\105\109\078\082\082\101\082\048\082\112\055\082\118\086\109\087\118\112\068\068\086\109\067\084\118\090\103\084\086\101\073\116\086\073\050\101\086\112\074\106\086\105\050\116\116\061\061";"\102\070\087\065\108\085\111\065","\113\083\120\073\077\084\050\071\077\073\076\071\108\105\101\072\106\082\109\115\106\105\109\103\048\082\090\111\068\105\112\105\056\082\112\089\073\105\109\043\082\101\057\068\099\107\099\087\121\112\110\073\101\065\084\087\122\074\068\099\097\076\088\050\107\076\086\097\107\068\101\076\107\077\055\097\078\078\055\108\107\107\090\081\107\074\106\105\107\047\106\070\097\077\082\106\107\112\118\107\107\068\101\076\107\077\055\097\107\068\097\122\107\076\101\051\107\074\101\087\107\106\088\067\078\078\055\108\107\112\097\107\107\047\101\102\097\115\115\048\107\074\101\118\107\068\106\087\078\078\055\108\107\076\101\072\107\076\082\057\107\077\055\068\107\068\101\076\107\077\055\097\107\068\055\088\107\047\055\097\078\078\055\117\078\078\055\117\078\078\055\117\113\072\089\061","\080\073\100\114\077\110\117\066\076\110\119\087\120\116\061\061","\107\107\082\082\107\106\088\072\107\048\115\078\107\107\112\110\078\078\055\108\107\074\055\076\107\076\109\089\107\078\082\077\107\080\051\102\107\076\073\120\107\107\082\082\107\106\088\072\107\068\101\109\097\089\088\100\107\080\051\102\107\076\073\120\107\047\109\108\107\074\106\097\107\107\106\085\107\107\082\082\107\106\088\072\107\076\106\116\097\115\083\050\078\078\055\108\107\074\101\078\097\115\112\117\107\107\090\068\107\074\106\105\107\077\051\073\107\076\109\074\107\074\101\102\097\077\086\068\107\048\115\078\107\107\112\110\107\068\101\109\097\089\088\100\107\103\073\107\107\112\097\112\107\103\097\047\107\112\097\051\107\048\115\078\107\107\112\110\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\076\118\099\107\074\082\087\097\076\088\065\107\068\082\047\107\080\051\102\107\076\073\120\053\056\111\102\075\118\118\067\084\105\109\071\121\082\090\067\073\105\109\100\101\105\086\078\073\109\065\099\043\104\054\122\073\068\102\122\073\097\078\073\068\089\113\087\101\106\079\068\068\076\050\115\088\082\109\073\116\082\112\086\122\105\101\057\073\105\101\082\099\082\086\111\048\082\090\097\121\082\109\108\082\118\090\057\122\086\109\089\087\118\101\121\106\105\118\067\084\105\109\089\073\086\109\053\084\105\112\110\114\082\109\089\047\105\109\082\073\082\086\080\048\082\112\116\121\118\112\089\087\082\101\050\121\086\109\108\082\118\090\057\122\086\109\089\087\118\101\121\106\105\101\057\073\118\101\121\084\105\109\115\068\105\101\121\116\105\118\067\084\105\112\099\087\105\109\073\116\087\119\117\075\086\109\054\084\105\109\114\056\105\112\055\082\118\086\109\087\069\120\102\052\105\109\090\084\105\112\089\073\105\109\084\106\069\102\099\099\089\049\087\084\097\057\056\082\097\110\087\066\089\077\102\075\118\109\090\084\105\112\089\073\105\109\084\106\118\109\115\068\105\109\100\047\086\109\108\082\118\090\057\122\086\118\067\084\105\109\071\121\082\109\054\106\082\086\078\073\086\101\057\073\086\090\103\047\105\090\103\106\082\090\097\082\082\109\115\068\105\101\121\116\105\118\067\116\110\081\055";"\119\100\065\065\102\056\114\065\102\056\098\113\075\069\119\117\052\100\052\102","\115\053\061\061","\102\070\056\071\080\079\050\071","\097\089\086\106\107\076\106\068\107\076\051\072\107\078\106\122\107\074\051\057\107\107\090\068\078\078\055\108\107\097\082\077\107\077\055\068\107\047\118\053\107\074\101\106\107\077\055\071\107\047\112\107\078\078\055\108\097\089\086\106\107\076\106\068\107\112\118\078\107\068\073\118\107\068\088\106\107\103\073\047\107\047\090\078\107\076\086\078\078\078\055\108\107\068\101\109\097\089\088\100\097\089\086\106\107\076\106\068\097\076\088\065\107\068\082\047\107\076\073\120\107\047\112\107\107\068\088\106\107\103\073\047\097\074\118\080\097\115\083\108\107\047\090\078\107\076\086\078\103\103\088\088\107\047\055\065\107\074\101\065\107\097\086\120\107\112\118\078\107\068\088\106\107\047\112\107\107\080\055\054\078\078\055\112\088\116\068\115\088\122\081\084\077\073\076\071\108\083\077\073\108\079\050\081\074\082\109\105\122\118\109\043\066\105\101\111\048\105\109\043\101\105\118\067\084\105\109\043\106\105\109\105\122\118\109\043\066\105\101\111\048\105\109\043\101\105\112\053\122\105\086\070\068\116\068\055\074\082\086\122\082\118\109\115\106\105\112\053\122\105\086\070\068\082\118\067\084\105\109\053\056\086\109\065\084\086\086\122\082\118\109\115\106\105\086\085\114\082\109\053\084\082\109\054\066\118\101\111\048\105\112\053\122\105\086\070\068\116\068\049\074\082\101\072\106\082\109\115\106\105\073\050\101\086\112\074\106\086\109\065\084\086\112\109\082\086\112\052\084\105\109\099\082\086\086\080\048\082\112\116\121\118\105\050\116\116\068\115\107\077\055\068\097\115\097\118\107\078\051\082\097\112\083\069\097\077\051\101\107\076\118\099\097\074\118\080\097\115\083\108\097\115\097\118\107\078\051\082\103\103\088\053\097\074\051\066\107\077\055\089\107\112\118\078\107\068\088\106\074\118\086\122\082\118\109\115\106\105\109\099\082\118\112\050\106\082\118\067\084\105\073\079\099\086\090\103\084\086\073\050\101\086\109\089\073\086\109\054\106\082\112\053\122\105\086\070\068\082\109\065\084\086\112\109\082\086\086\080\048\082\112\116\121\118\105\050\056\090\050\061";"\086\069\065\047\077\051\121\070\089\083\119\099\098\051\107\111\054\102\085\071\108\079\050\111\086\069\065\047\077\051\121\070\089\072\052\071\113\053\061\061";"\120\049\076\070","\043\051\114\047\080\083\081\075\086\110\117\087";"\065\053\061\061";"\107\080\086\073\097\074\051\066\120\079\110\087\082\106\076\061","\097\076\088\065\107\068\082\047\107\106\051\056\097\112\083\107\078\078\055\108\097\077\051\086\107\068\101\076\107\047\112\110\107\074\101\114\107\076\118\099\107\074\082\087\107\074\101\078\107\076\106\068\107\047\090\078\107\076\086\078\097\076\088\065\107\074\101\114\107\107\106\085\107\047\109\108\107\112\118\107\107\107\082\082\107\106\088\072\078\078\055\108\107\074\101\120\097\076\088\065\107\068\082\047\107\106\051\056\097\112\083\107\078\078\055\108\107\076\118\106\107\047\055\065\097\074\118\080\107\076\109\087\107\068\101\076\107\047\112\110\107\103\106\051\107\068\088\117\107\068\073\120\107\080\055\050\107\112\086\074\097\089\086\106\107\076\106\068\107\047\090\078\107\076\086\078\107\047\109\108\107\112\118\107\107\107\082\082\107\106\088\072","\098\083\100\101\080\083\075\061";"\119\056\089\061";"\080\109\087\082\075\073\100\082\077\051\075\061";"\113\100\053\061","\097\089\051\099\107\048\088\070","\043\083\111\104\077\110\065\079\080\104\120\070";"\108\050\061\061";"\107\106\051\084\107\103\073\089\107\047\082\070\107\047\112\071\105\073\100\069\098\083\111\068\077\109\081\071\074\073\120\084","\107\068\106\050\097\089\105\111\107\047\101\118\107\097\090\097";"\107\068\101\076\097\112\073\066","\108\079\085\055\108\049\053\069\120\084\043\103\105\090\066\099\053\075\065\079\119\085\052\083\119\070\121\065\090\056\114\108\102\075\107\054\075\100\100\090\075\069\119\052\052\087\098\076\109\052\047\121\076\073\120\056\077\109\077\122\112\083\087\106\112\051\081\114\080\073\111\071\043\110\065\049\098\072\052\051\098\104\121\107\086\116\061\061","\090\070\052\077\110\070\052\117\052\085\087\105\119\071\061\061","\090\075\107\109\110\070\069\065\075\070\120\113\075\052\052\100\075\069\119\065\102\070\107\120\053\052\065\074","\102\049\117\066\090\075\111\066","\107\048\105\052\107\047\055\099\115\050\061\061","","\113\083\120\073\077\084\050\071\077\073\076\071\108\105\086\043\116\086\101\102\122\110\081\055";"\102\051\081\054\102\070\111\066","\119\051\052\070\053\051\111\082\098\083\100\047\080\073\052\055\090\110\119\087\080\075\081\047\080\073\066\061","\097\115\097\118\107\078\051\082\107\077\051\073\107\076\109\074\107\074\055\076\107\076\109\089\107\048\115\078\107\107\112\110\074\105\109\098\047\082\109\100\101\118\101\121\116\105\073\072\084\118\090\111\084\082\090\097\084\082\101\082\099\082\109\082\073\082\109\050\099\105\090\067\073\105\109\100\101\105\112\055\082\118\086\109\087\118\109\098\047\082\109\100\101\071\070\115\107\077\051\073\107\076\109\074\107\080\118\100\097\112\083\078\097\076\088\112\097\074\118\072\107\077\082\101\097\077\101\113\107\106\083\083\107\047\097\051\097\115\097\118\107\078\051\082\103\103\088\088\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\107\047\055\066\097\076\088\065\097\112\083\107\097\112\082\076\107\074\106\105\107\076\109\068\107\077\082\101\107\048\115\078\107\107\112\110\078\078\055\108\107\080\051\102\107\077\051\073\107\076\109\074\097\115\083\050\097\076\086\054\107\074\051\105\107\074\106\105\097\115\097\118\107\112\097\112\107\076\088\067\078\078\055\108\107\076\051\049\107\074\051\057\107\076\109\051\107\074\082\109\097\089\083\108\107\074\101\112\097\115\083\050\097\076\086\054\107\047\082\070\107\074\051\105\107\074\097\098\107\103\090\051\107\074\055\076\107\076\109\089\107\048\115\078\107\107\112\110\107\077\051\073\107\076\109\074\113\072\089\061","\075\069\119\117\052\100\052\102\110\070\119\100\053\087\052\072";"\102\051\081\065\090\109\071\071","\107\074\101\074\097\112\073\066";"\074\104\065\087\080\083\111\121\077\050\061\061";"\107\068\083\101\107\112\090\120\107\068\073\050\107\047\055\065\107\078\055\097\107\107\055\117\107\076\088\067","\090\085\052\117\102\100\111\075\053\052\065\072\119\052\053\061","\043\104\119\121\098\072\052\049","\088\101\111\069\043\051\075\116\108\102\050\061";"\098\072\087\071\077\053\061\061";"\052\104\065\099\080\073\043\116\112\051\052\107\089\050\061\061","\074\104\065\069\080\101\117\052\090\075\052\055\043\073\111\055\043\070\077\055\076\109\069\087\105\056\120\066\077\109\100\055\115\088\056\115","\053\075\081\108\110\070\121\100\053\075\081\102";"\098\083\087\070\080\083\075\061","\053\071\061\061","\107\080\086\073\107\097\086\078","\074\088\079\068\073\112\099\122\099\106\102\056\099\115\102\087\048\048\108\097","\097\076\088\065\107\068\082\047\107\077\112\098\107\048\088\070";"\076\051\111\082\077\073\087\055\080\053\061\061","\076\073\111\049\043\055\052\056";"\102\051\081\065\108\079\117\054";"\080\073\100\114\077\110\117\066\076\110\119\087\120\079\050\061","\080\109\111\069\043\051\052\099\098\073\052\055\098\083\100\055\077\051\052\070","\080\110\050\061";"\075\085\100\108\053\075\119\065\102\116\061\061";"\053\056\081\117\053\070\114\113\102\085\087\102\052\050\061\061","\052\085\111\053\075\056\087\072\090\100\053\061";"\043\104\117\087\080\083\081\102\098\109\065\105\076\109\069\087","\076\104\065\047\098\072\108\061","\119\050\061\061";"\043\110\052\087\098\109\052\056";"\076\051\121\121\080\073\098\087\075\104\119\121\080\073\120\087","\080\073\100\114\077\110\117\066\076\110\119\087\108\049\085\061","\102\051\071\071\080\085\111\054";"\090\070\052\077\110\070\047\054\090\075\107\088\053\052\119\075\102\085\075\061";"\102\070\087\066\080\079\117\065";"\077\122\052\082\076\104\119\047\080\051\103\061","\109\069\103\061";"\053\087\052\083\119\087\111\110\053\052\119\079\090\050\061\061","\107\106\051\078";"\077\083\052\121\077\050\061\061";"\108\083\111\119\109\100\120\089\052\075\075\051\098\053\061\061";"\102\070\111\066\090\102\050\071","\043\073\100\047\077\085\087\084\080\051\103\061";"\054\102\070\061","\043\104\117\087\080\083\081\090\076\109\107\048\052\083\100\101\080\083\052\085\076\110\119\121";"\102\075\100\065\102\087\119\117\102\056\066\061","\107\076\106\116\097\076\088\113\097\089\051\099\107\048\088\070","\052\052\117\085\053\052\119\100\110\070\100\072\119\069\065\054";"\098\073\052\055\043\051\087\099\080\116\061\061";"\107\068\073\102\107\080\055\050\097\077\101\113\107\074\055\120\107\068\097\122\107\076\101\051\107\076\106\113\097\089\105\111\078\078\055\112\097\089\086\106\107\076\106\068\097\074\086\113\097\077\106\054\074\118\109\117\122\105\112\114\068\082\101\104\122\118\073\112\084\055\057\087\084\076\057\087\101\106\122\073\087\074\099\087\121\078\066\099\097\074\086\113\097\077\106\054\097\076\088\079\107\077\083\111\089\105\086\114\101\086\118\067\084\105\073\050\073\082\101\057\121\118\073\076\122\118\090\067\084\090\057\087\073\097\074\047\073\065\067\099\107\097\086\117\107\112\118\083\107\076\118\119\097\076\088\117\107\077\083\111\107\074\082\056\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\074\104\050\116\097\089\086\106\107\076\106\068\097\074\086\113\097\077\106\054\089\050\068\099\043\088\079\087\116\077\049\073\048\112\074\068\114\107\057\047\073\068\067\115\074\104\050\116\107\076\051\054\107\076\106\047\107\047\090\078\107\076\086\078\088\101\111\071\089\105\101\104\122\118\073\112\084\118\073\050\116\118\109\119\099\110\081\055";"\077\073\100\084\098\083\111\047\080\116\061\061";"\119\051\052\070\075\104\119\121\098\072\052\049";"\102\070\111\066\090\075\111\065","\120\049\043\069\120\053\061\061","\074\104\052\049\077\090\117\080\053\083\120\069\043\122\120\099\043\087\070\116\097\065\088\068\097\077\106\083\097\076\115\106\097\077\105\117\107\103\115\103\107\080\055\107\088\116\061\061";"\108\118\086\097\047\055\050\116\089\050\061\061","\043\073\052\070\098\110\065\082\089\050\061\061","\107\074\101\056\107\106\055\121\107\068\106\050\097\089\105\111\107\074\073\074\097\077\086\070\078\078\055\108\107\107\090\081\107\074\106\105\107\078\051\119\107\078\082\043\107\080\082\051\097\074\118\113\107\076\118\115\107\097\101\074\107\080\106\054\097\074\118\053\097\115\083\108\107\097\051\065\107\076\097\113\107\077\082\116\078\078\055\108\107\074\101\050\097\089\101\066\107\074\055\112\107\047\055\065\108\088\103\055\107\097\086\090\097\089\086\049\108\088\103\049\120\086\086\122\056\082\073\110\114\105\073\112\087\105\109\078\114\082\101\057\122\118\118\067\084\105\090\111\099\118\086\075\106\105\112\114\047\105\073\050\101\086\073\121\082\086\118\067\084\105\090\067\073\082\090\111\099\118\086\075\106\105\073\101\121\105\101\099\082\118\112\109\099\086\112\049\087\086\112\115\116\105\101\079\099\086\112\109\082\086\109\067\084\118\118\067\084\105\109\082\084\105\109\100\106\105\112\051\101\105\073\077\047\105\090\103\047\105\112\066\068\086\112\109\099\086\112\049\087\086\073\110\114\105\073\112\087\105\086\112\121\105\109\078\114\082\101\057\122\118\112\110\114\082\073\110\114\105\118\067\084\105\112\043\116\105\109\056\047\118\109\108\087\082\112\115\116\105\101\079\099\086\109\118\106\082\086\105\048\118\112\052\101\105\086\105\121\118\105\050\116\116\068\115\113\083\120\073\077\084\050\071\077\073\076\071\108\105\109\099\082\086\090\097\084\082\101\118\056\118\109\072\082\082\101\117\084\105\090\103\073\082\118\067\084\105\073\050\101\086\112\074\106\086\112\114\047\105\073\050\101\086\073\121\082\086\109\071\121\082\112\076\084\082\112\076\099\082\112\054\056\105\073\048\073\085\119\053\075\118\118\067\084\105\109\099\082\086\090\097\084\082\112\055\082\118\086\109\087\118\101\117\084\105\090\103\073\082\118\067\084\105\112\114\047\105\073\050\101\086\073\121\082\086\112\043\101\086\109\054\048\118\101\079\099\086\109\099\099\105\101\072\114\105\101\102\122\086\073\072\084\118\112\051\101\105\101\050\087\118\101\057\121\118\109\057\106\118\118\067\084\105\101\099\114\118\112\116\082\086\112\120\048\082\101\072\106\082\109\104\066\086\112\089\073\105\112\109\087\118\112\110\114\082\073\052\099\118\073\050\101\086\112\074\106\086\105\050\116\122\081\055","\076\051\100\082\090\109\107\070\077\110\065\055\098\110\117\070";"\102\051\071\071\102\070\067\071","\112\072\050\061";"\107\076\118\049\097\074\051\066\120\079\110\087\082\106\076\061";"\102\070\056\071\102\051\081\054","\098\051\111\104\076\109\120\070\112\109\111\082","\074\051\120\121\043\104\053\116\109\104\119\121\043\073\098\087\098\079\069\050\098\083\100\055\077\051\052\070\110\090\050\061","\088\101\111\069\043\051\075\116";"\097\115\097\118\107\078\051\082\107\076\109\068\107\077\082\101\078\078\055\089\107\076\055\100\107\068\082\066\107\077\051\073\107\076\109\074\078\078\055\065\107\048\115\078\107\107\112\110\097\077\101\089\107\076\088\067\078\078\055\108\107\078\055\097\107\107\055\117\105\102\050\087\078\078\055\108\107\068\118\053\097\112\082\076\107\068\101\109\097\089\088\100\097\077\073\120\107\074\051\105\097\115\118\087\097\115\097\118\107\112\097\112\078\078\055\108\107\076\118\099\107\074\082\087\107\047\090\107\107\076\118\076\107\076\106\116\097\115\083\050\097\112\115\119\107\103\097\072\103\103\088\088\107\076\101\072\107\076\082\057\097\115\097\118\107\078\051\082\097\074\112\100\097\074\118\072\108\102\050\071\107\107\106\085\107\076\088\067\078\078\055\117";"\075\069\119\117\052\100\052\102\110\070\069\054\075\056\052\089\119\075\100\108\053\087\052\075\052\085\111\105","\107\080\051\102\107\076\073\120\107\048\105\052\107\047\055\099\107\080\055\097\107\080\106\073\105\101\050\061","\074\104\120\070\076\110\065\070\076\110\119\070\076\109\120\048","\086\104\119\121\076\122\070\061";"\090\110\119\087\080\053\061\061","\074\051\120\066\112\109\120\048\089\100\117\109\075\100\065\087\076\109\119\107\119\083\087\121\080\083\111\122\119\109\107\070\077\110\065\088\076\110\119\070\080\083\052\088\098\110\119\070\080\051\103\061";"\075\050\061\061","\102\070\087\066\090\109\081\066";"\102\070\111\054\108\085\067\071","\076\073\111\049\043\049\043\061";"\113\050\061\061","\098\051\087\071\077\053\061\061";"\107\103\115\107\107\076\086\078\107\076\101\080\107\080\082\097\097\077\101\113\107\074\055\120\107\068\097\122\107\076\101\051\107\112\097\054\078\078\055\108\089\105\109\108\121\086\112\074\048\105\109\120\084\118\109\115\106\086\112\075\082\118\109\072\082\055\057\068\121\097\048\087\101\106\084\068\114\107\057\047\073\068\057\122\048\076\122\087\048\068\057\099\099\089\049\068\048\078\113\068\121\097\048\068\068\076\049\056\082\103\078\087\048\068\057\073\101\107\080\087\121\112\110\087\099\097\099\073\084\080\113\047\087\115\078\056\099\080\057\122\087\115\116\061";"\043\083\111\104\077\110\065\114\076\110\116\061";"\090\070\052\077\110\070\119\090\090\075\107\074\090\075\107\072","\080\073\100\114\077\110\117\066\076\110\119\087\108\102\089\061","\074\051\120\099\080\122\120\099\080\083\075\116\075\051\111\069\080\073\119\113\119\109\107\121\076\073\081\087\119\110\065\055\080\104\065\102\043\083\052\087\076\051\116\116\108\050\068\061";"\119\075\107\100\075\056\098\077","\077\051\081\099\098\073\052\049\108\116\061\061";"\102\070\087\065\108\085\087\066","\102\070\111\054\102\051\081\065","\113\100\053\055\108\049\076\103\120\084\116\097\108\102\053\097\108\102\119\067\098\050\061\061";"\097\089\082\081\107\076\082\072","\090\109\107\070\077\110\065\073\076\109\120\087\110\100\119\099\080\051\081\070\112\110\117\049\110\100\052\065\074\052\119\099\080\051\081\070\112\110\050\114\053\073\111\055\077\083\052\055";"\097\112\106\119","\075\069\119\117\052\100\052\102\110\070\100\052\052\085\111\065\102\087\119\100\075\087\065\052\075\100\053\061";"\075\100\065\054\052\085\052\079\052\085\081\065\075\069\053\061","\080\073\100\114\077\110\117\066\076\110\119\087\108\084\043\061";"\107\106\055\101\097\074\118\105\107\074\051\057\107\107\090\068\053\110\052\070\080\070\121\087\080\072\079\099\099\089\049\056\082\103\110\056\099\047\099\087\121\068\110\047\116\097\084\056\082\106\102\073\114\076\072\087\048\112\080\056\082\112\079\099\099\089\049\068\048\078\113\087\101\078\057\122\087\115\084\056\082\068\078\087\121\080\080\056\082\107\080\122\087\115\084\047\116\065\102\084\116\089\089\061";"\053\069\065\100\053\052\119\100\075\070\052\079\052\052\065\100";"\112\083\052\047\077\051\121\070","\089\050\061\061","\052\056\103\061","\112\083\087\056\077\053\061\061";"\105\050\061\061";"\113\083\077\073\077\073\076\071\108\079\050\071\090\109\107\051\076\109\081\047\077\088\117\084\076\109\081\066\089\072\119\099\089\085\098\087\098\100\120\071\077\109\081\066\090\109\107\073\080\055\117\073\080\104\089\116\043\104\117\087\080\083\081\065\119\079\068\116\113\072\089\061";"\107\103\055\105","\107\112\112\088\107\047\097\043\097\076\088\065\107\068\082\047\078\078\055\108\107\080\088\054\107\068\088\106\107\074\073\113\107\074\051\057\107\107\090\068\107\103\101\083\107\076\118\119\107\068\106\050\097\089\105\111\078\078\055\108\107\106\118\075\107\112\112\088\107\068\073\102\107\080\088\054\107\047\055\066\074\118\073\112\084\118\112\043\082\082\112\043\048\088\057\073\122\115\084\073\068\112\122\122\048\076\122\099\099\089\049\056\082\089\104\047\116\089\122\073\101\097\122\073\048\112\102\047\116\089\122\047\068\080\122\087\101\065\122\087\084\097\048\073\122\089\122\047\106\048\113\047\106\103\110\122\082\106\098\088\102\069\120\102\107\068\073\120\097\089\086\106\107\076\106\068\107\080\055\050\107\077\088\099\107\103\101\083\107\076\118\119\107\068\106\050\097\089\105\111\103\103\088\088","\113\083\120\073\077\056\077\083\120\070\053\071\053\052\114\117";"\102\070\111\066\090\109\081\066","\090\100\070\116","\076\110\052\055\076\075\107\069\080\053\061\061";"\075\056\100\108\052\088\069\098","\088\101\111\069\043\051\075\116\108\102\108\061";"\102\070\111\054\080\085\087\066","\053\056\081\117\053\070\114\108\090\052\120\075","\076\073\100\049\077\052\065\121\080\073\098\087";"\112\083\052\121\080\083\052\055","\098\083\100\101\076\122\119\082";"\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\052\085\111\072\119\070\081\100\110\070\100\102\075\070\087\102\052\100\052\105\090\052\053\061";"\102\049\117\054\090\075\087\054","\080\073\100\114\077\110\117\066\076\110\119\087\108\102\085\061";"\107\112\118\078\107\068\088\106\107\047\112\107\107\080\055\054\107\074\101\097\107\077\088\119\107\076\073\120\097\074\118\080\107\074\101\050\107\106\097\069\097\074\086\098\107\097\112\078\107\076\118\049\097\074\051\066\078\078\055\108\107\074\101\050\107\097\086\120\107\097\086\078\107\076\106\068\107\047\112\107\107\080\055\054\107\112\118\078\107\068\073\118\107\068\088\106\107\103\073\047\103\103\088\088\107\112\112\088\107\047\097\043\097\076\105\111\107\074\101\120\097\076\088\065\107\068\082\047\078\078\055\108\107\080\088\083\107\074\055\112\107\076\118\106\097\076\088\065\107\068\082\047\107\076\073\120\107\047\112\107\107\107\082\082\107\106\088\072\103\103\088\088";"\107\077\112\098\107\103\082\088\097\076\086\105\097\112\051\075\107\048\105\052\097\089\051\099\107\048\088\070";"\098\083\111\099\080\072\119\047\043\100\119\087\086\072\053\061";"\102\051\081\066\108\083\071\071","\102\070\087\066\080\085\111\054";"\043\073\100\047\077\088\116\087\077\088\087\070\076\110\065\122\077\110\053\061","\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\119\056\087\090\075\069\119\075\053\075\107\074";"\107\077\051\073\107\076\109\074\107\048\115\078\107\107\112\110\097\077\101\089\107\076\088\067";"\075\069\119\117\075\087\119\117\052\052\119\054\075\087\052\105";"\107\077\088\105\097\074\086\049","\119\051\052\070\052\072\065\121\076\051\114\047\080\073\098\065\080\073\077\099","\077\083\052\101\098\109\077\073\053\122\087\053\080\083\100\107\077\110\089\061","\043\073\100\047\077\079\089\103\098\083\100\055\077\051\052\070";"\102\070\067\071\080\083\081\066","\077\122\065\121\080\109\075\061","\090\085\100\102\119\052\121\053\090\052\065\100","\102\049\117\066\080\085\111\054";"\077\073\111\055\080\109\100\070","\077\073\081\099\080\104\089\061";"\086\069\065\047\077\051\121\070\089\083\119\099\098\051\107\111\054\102\089\069\108\079\069\078\075\073\087\122\112\072\053\116\098\110\117\111","\102\051\081\054\102\051\081\054","\107\077\088\079\107\077\112\098","\053\087\052\075\052\085\111\105\110\118\073\114\087\105\112\049\087\086\112\071\114\105\073\050\101\086\112\074\106\053\061\061","\102\070\111\066\080\085\111\054";"\090\070\052\077\110\069\120\075\102\069\117\079\053\052\120\075";"\043\104\117\087\080\083\081\105\076\109\069\087";"\112\110\120\102\098\083\052\121\080\083\100\101\080\083\075\061","\075\070\052\075\110\069\119\065\075\100\053\061","\107\080\088\054\107\068\088\106\107\074\073\113\107\074\051\057\107\107\090\068\107\103\101\083\107\076\118\119\107\068\106\050\097\089\105\111";"\102\070\111\066\108\085\087\054","\076\073\111\049\043\049\116\061","\075\069\119\117\052\100\052\102\110\118\109\120\084\118\109\115\106\086\109\098\047\082\109\100\101\071\061\061";"\090\085\121\102\119\084\056\055\108\053\061\061","\076\109\120\070\112\109\111\082\112\051\052\107";"\043\051\052\070\098\083\087\082\077\071\061\061","\074\104\120\070\076\110\065\070\076\110\119\070\076\109\120\048\088\116\061\061";"\107\048\101\100\097\077\073\056\107\107\082\082\107\106\088\072";"\097\076\088\079\107\077\083\111\097\074\086\113\097\077\106\054","\102\070\087\066\102\070\111\065","\080\073\100\114\077\110\117\066\076\110\119\087\108\084\050\061";"\102\051\107\100\077\083\087\070\119\073\111\084\098\110\120\072\076\109\087\082\077\109\053\061","\098\083\052\103\098\072\052\055\077\053\061\061","\080\083\052\051\077\109\071\061";"\102\051\071\071\108\085\111\065";"\119\051\052\070\053\051\111\082\098\083\100\047\080\073\052\055\102\122\052\114\075\051\081\099\098\072\108\061";"\076\051\111\082\080\073\052\084\098\083\052\056";"\053\051\100\066\076\104\052\066\076\110\119\087\090\083\111\070\090\083\052\121\080\083\087\082\077\071\061\061";"\102\070\087\054\108\083\081\054";"\077\073\087\082\077\050\061\061";"\097\076\088\065\107\074\101\114\107\107\082\082\107\106\088\072","\112\083\052\121\080\100\119\107\043\083\075\061";"\043\104\117\087\080\083\081\065\077\050\061\061","\102\069\077\100\075\056\081\117\109\053\061\061","\077\083\052\101\098\109\077\073\102\073\100\114\077\053\061\061";"\105\116\061\061","\113\083\120\073\077\056\077\083\120\070\053\071\053\086\086\080\048\082\112\116\121\118\090\067\073\105\109\100\101\050\061\061","\102\070\111\065\102\070\111\065";"\043\104\119\099\043\085\069\099\098\073\087\082\077\071\061\061","\076\051\100\049\098\083\087\082\077\069\119\047\080\109\075\061","\097\089\086\106\107\076\106\068\097\074\118\080\107\076\109\087\107\068\101\076\107\077\055\097","\102\070\111\065\102\070\067\071";"\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\053\075\111\100";"\043\073\100\047\077\079\085\051\098\083\100\055\077\051\052\070";"\076\051\121\087\043\104\053\055";"\102\075\100\105\053\053\061\061","\102\070\087\066\080\083\081\065","\102\051\081\054\090\102\050\071";"\052\052\117\085\053\052\119\100\110\069\065\117\102\056\098\100","\120\071\061\061";"\115\071\061\061","\112\109\107\056\077\110\116\061","\112\051\052\107";"\102\085\052\083\052\050\061\061";"\102\070\087\066\090\109\081\065","\107\047\086\051\107\080\055\050\107\077\088\099";"\107\076\083\043\107\106\051\101\053\075\111\100";"\102\049\117\054\090\075\087\065";"\102\049\117\065\102\049\117\065";"\043\083\052\055\076\051\052\082\098\050\061\061";"\102\049\117\066\090\109\081\054","\107\068\106\050\097\089\105\111\107\097\051\065\107\078\106\122\097\076\088\065\107\068\082\047","\076\051\111\114\112\051\052\107","\077\083\052\101\098\109\077\073\102\073\100\114\077\075\120\065\119\050\061\061","\075\116\061\061","\107\047\086\051\107\077\088\079\107\103\101\083\107\076\118\119\097\089\051\099\107\076\073\088\109\118\086\074\116\082\073\072\084\082\073\114\087\105\112\049\087\086\101\120\048\118\112\071\114\088\057\087\101\106\079\047\116\065\057\068\084\112\057\073\066\074\119\098\074\088\079\068\048\078\113\087\122\115\084\068\116\103\049\087\084\089\110\056\099\107\104\122\087\077\122\068\114\048\054\087\047\065\057\122\073\068\102\068\084\112\057\087\101\076\074\084\116\089\089\115\088\122\081\084\077\073\076\071\108\083\077\073\108\079\079\073\048\112\102\087\101\047\057\068\116\078\104\087\084\097\048\087\122\115\084\122\073\097\078\073\068\089\113\056\082\074\048\047\106\048\113\047\106\103\110\122\082\106\098\088\102\069\120\102\107\047\086\051\107\068\073\120\097\115\086\073\107\076\118\119\078\078\055\117\088\116\047\067\076\051\077\073\108\079\117\073\077\084\050\071\097\076\115\106\119\085\099\087\084\097\049\087\087\115\102\087\047\115\122\047\048\074\049\087\066\089\080\068\121\097\048\087\101\106\084\047\116\089\122\073\101\097\122\087\101\106\079\047\116\065\057\068\084\112\057\073\066\074\102\084\116\089\065\067\043\116\061\061";"\074\104\120\070\080\104\117\084\076\110\120\070\112\109\107\122","\053\104\065\087\076\110\119\069\043\073\075\061","\076\051\111\114\080\109\100\082\077\050\061\061";"\043\073\100\047\077\079\089\070\098\083\100\055\077\051\052\070";"\120\049\043\051\120\116\061\061";"\107\048\105\052";"\107\048\115\078\107\107\112\110";"\097\074\118\080\097\112\105\113","\074\104\050\116\107\080\055\050\107\112\086\074\107\076\051\054\107\076\106\047\107\068\101\119\088\116\061\061","\102\049\117\065\102\070\067\071","\102\070\087\054\080\079\117\065";"\075\069\119\117\052\100\052\102\110\118\090\103\082\118\109\115\106\105\109\067\116\105\112\050\106\116\061\061";"\043\073\100\047\077\079\098\070\076\110\065\122\077\110\053\061";"\075\069\119\117\052\100\052\102\110\070\077\054\102\085\081\054\052\069\111\088\052\052\119\075\102\070\103\061";"\074\104\120\070\080\104\117\121\098\072\119\121\076\051\066\061","\090\070\052\077\110\069\120\075\053\052\065\075\053\052\119\075\053\075\120\074","\102\083\087\101\075\073\100\082\077\051\052\079\112\083\052\084\112\055\070\049\074\084\050\061";"\120\049\076\051\120\116\061\061","\088\122\081\084\077\073\076\071\108\083\077\073\108\079\079\047\073\112\102\056\082\068\080\122\066\078\099\122\082\107\057\122\099\074\048\122\122\089\072\122\073\068\102\047\048\077\102\073\066\107\110\073\066\074\102\087\084\097\057\056\082\097\110\068\121\097\048\087\101\106\084\087\056\089\054\087\087\047\104\099\099\089\049\068\099\107\122\047\121\103\049\087\084\097\057\056\082\097\110\047\116\089\122\073\101\097\122\056\099\112\079\068\047\068\072\087\087\047\104\122\073\068\102\073\066\074\102\099\099\089\049\122\101\112\122\122\056\089\080\068\116\076\049\056\082\065\048\073\087\097\079\073\087\076\084\099\099\089\100\067\043\116\061\061";"\090\085\052\117\102\100\111\102\052\085\100\075\052\052\120\113\053\052\052\075\102\070\121\100\053\075\071\061","\043\083\052\070\098\083\100\055\077\051\052\070";"\102\069\077\100\075\056\121\100\053\075\081\113\052\056\100\108\052\075\075\061";"\119\051\100\114\077\075\069\087\080\122\052\088\098\110\119\070\080\051\107\075\077\109\069\071\080\083\100\070\077\053\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\120\050\061\061","\102\051\081\066\102\070\111\065","\107\112\109\087\107\047\051\043\107\080\088\075";"\076\051\081\121\043\104\120\105\076\109\069\087";"\097\089\086\106\107\076\106\068\107\076\051\072\107\078\106\122\107\074\051\057\107\107\090\068\078\078\055\108\107\047\051\050\107\106\051\078\107\068\088\106\107\103\073\047\107\077\088\105\097\089\086\106\107\076\106\068\107\068\082\118\107\076\118\109","\098\083\100\055\077\051\052\070\090\109\107\073\080\071\061\061","\043\104\119\055\112\109\107\122","\112\110\119\087\080\102\068\068\065\109\053\048\115\090\103\048\065\052\066\068\074\101\066\047\065\052\070\061","\075\056\087\072\090\100\053\061","\097\077\101\055\107\106\051\101\107\047\106\088\107\097\112\078","\089\055\108\084\089\118\112\088\106\105\086\112\121\105\109\082\084\118\090\111\084\086\086\111\048\082\112\078\068\086\090\097\121\101\071\116\097\115\118\104\107\076\101\116\097\077\073\056\107\074\101\120\107\107\090\068\107\107\106\085\107\112\097\054\074\105\086\075\106\105\112\098\047\086\109\089\073\118\109\078\082\082\101\117\084\105\090\103\073\082\109\082\084\055\085\084\089\055\108\084","\107\106\088\072\107\076\086\083","\107\076\051\054\107\076\106\047\107\107\082\082\107\106\088\072","\107\076\055\078\107\074\118\098\107\076\101\110\097\115\083\068";"\120\049\120\101\109\083\077\099\053\052\087\079\052\073\098\121\090\052\065\077","\102\049\117\066\090\075\111\065";"\107\077\086\119\097\089\051\099","\075\069\117\100\102\085\081\113\075\069\119\117\052\100\052\102";"\090\070\052\077\110\069\120\075\053\052\065\075\119\056\111\108\102\085\111\110","\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111\054\102\070\111","\102\070\056\071\090\109\081\065";"\107\080\118\048\097\076\088\113\107\047\112\111\107\048\105\052";"\110\122\065\121\112\109\053\068\065\109\053\048\115\090\053\061";"\102\070\087\054\080\083\081\054","\107\068\115\068\107\107\106\085\107\048\105\052\107\047\055\099\107\080\055\097\107\080\106\073\107\112\090\106\107\074\051\105\074\105\112\110\068\105\112\049\087\102\089\069\090\105\109\082\084\105\112\089\056\105\090\057\048\082\112\076\122\055\085\061";"\080\073\052\087\077\100\117\066\076\110\087\087\043\056\100\069\043\073\085\061";"\052\070\100\090\102\085\111\079\090\071\061\061","\075\069\119\117\052\100\052\102\110\118\101\072\106\082\109\115\106\105\086\089\121\082\109\054\056\053\061\061";"\097\065\088\068\097\077\106\083\097\076\115\106\097\077\105\117\107\103\115\103\107\080\055\107\097\074\106\048\097\074\097\107";"\076\051\111\049\098\050\061\061","\080\109\111\056\077\053\061\061","\113\083\120\073\077\056\077\083\120\070\053\071\053\053\061\061","\075\069\119\117\052\100\052\102\110\118\086\122\082\118\109\115\106\105\109\099\082\118\112\050\106\116\061\061","\075\056\052\108\102\070\100\085\110\069\047\054\102\056\052\102","\113\083\120\073\077\084\056\070\105\079\065\079\105\053\061\061";"\102\049\117\065\080\083\081\065";"\043\073\100\047\077\079\089\049\098\083\100\055\077\051\052\070";"\075\071\061\061";"\102\075\100\072\119\053\061\061","\102\070\111\066\090\075\111\066","\102\049\117\066\090\102\117\054","\102\070\087\065\102\070\087\054";"\112\110\119\087\080\110\108\061";"\075\069\119\054\075\085\100\052\052\085\111\090\052\075\103\061";"\075\104\119\099\043\100\065\069\080\116\061\061","\053\122\052\070\098\083\111\082","\080\073\111\082\077\053\061\061","\102\070\056\071\080\079\117\065","\102\049\117\065\080\085\111\054","\086\069\052\071\089\083\119\099\098\051\107\111\054\102\108\071\108\079\050\111\086\069\052\071\089\072\052\071\113\110\114\090\112\109\098\068\098\088\117\056\080\104\098\082\113\110\114\052\043\088\117\056\080\104\098\082\113\102\070\055\108\079\050\111\086\069\052\071\089\072\052\071\113\110\114\090\112\109\098\068\098\088\117\069\043\072\070\061","\090\070\052\077\110\069\120\075\102\069\117\083\102\070\081\108\102\069\043\061","\105\084\085\055\105\084\085\055\113\072\053\061";"\043\083\111\104\077\110\065\070\086\110\117\087";"\119\051\052\070\053\051\111\082\098\083\100\047\080\073\052\055\090\110\119\087\080\075\120\099\080\051\081\056\080\104\098\082","\102\070\056\071\108\083\081\066";"\097\112\109\071\107\077\105\117\107\103\101\083\107\076\118\119","\074\104\065\069\080\101\117\083\080\051\081\066\080\104\098\052\080\073\087\070\115\088\098\071\080\083\100\107\077\110\089\122\115\053\061\061";"\077\083\087\049\043\083\081\121\086\075\069\099\077\083\075\061";"\053\075\098\108";"\075\069\119\117\052\100\052\102\110\118\086\074\116\082\073\072\084\082\073\114\087\105\112\049\087\086\101\120\048\118\112\071\114\050\061\061";"\119\109\119\047\098\085\065\099\086\050\061\061";"\120\049\043\070";"\075\069\119\117\052\100\052\102\110\069\065\100\102\085\052\117\075\070\052\109";"\088\116\061\061";"\102\051\081\065\108\085\111\054","\080\073\100\114\077\110\117\066\076\110\119\087\108\102\053\061";"\080\073\052\103\098\072\117\099\043\071\061\061";"\107\077\112\098\107\078\106\101","\077\073\111\084\098\110\120\070\076\110\065\122\077\110\053\061","\098\051\081\048";"\098\073\087\049\112\109\065\066\077\053\061\061";"\080\073\100\114\077\110\117\066\076\110\119\087\108\049\053\061","\119\069\052\065\119\050\061\061";"\107\048\115\121\107\047\055\065\107\076\112\100\107\112\097\107","\074\053\061\061";"\102\070\056\071\090\109\071\071";"\077\073\100\049\098\100\120\071\077\109\081\066";"\075\104\119\121\043\122\119\090\098\109\103\061";"\098\083\111\099\080\072\119\047\043\100\119\047\098\083\081\087";"\108\079\050\071\108\050\061\061";"\097\089\086\106\107\076\106\068\107\074\101\074\097\112\073\066";"\043\073\100\047\077\079\089\069\098\083\100\055\077\051\052\070","\102\051\081\065\080\085\111\054","\053\056\100\079\090\070\098\090\102\069\052\105\119\050\061\061","\053\052\052\075\102\070\065\117\052\100\119\108\119\053\061\061","\077\073\089\061","\097\089\086\106\107\076\106\068\107\047\109\119\107\074\106\097","\112\083\052\121\077\050\061\061";"\107\076\051\054\107\076\106\047\107\047\090\078\107\076\086\078";"\076\073\100\049\077\053\061\061";"\107\080\097\104";"\102\075\087\090\075\056\111\090\110\069\119\054\110\070\069\117\053\069\065\054";"\052\083\100\114\043\083\052\055\089\085\119\087\098\083\052\084\098\083\052\056\089\053\061\061"}
	local function lII1(lll)
		return Ill[lll - (885998 - 861179)]
	end
	for lll, lII1 in ipairs({
		{
			- 272615 - (- 272616);
			293465 - 292329
		},
		{
			- 349291 + 349292;
			- 20705 + 20918
		},
		{
			937405 + - 937191,
			- 782968 + 784104
		}
	}) do
		while lII1[- 142691 - (- 142692)] < lII1[969280 - 969278] do
			Ill[lII1[- 759864 + 759865]], Ill[lII1[9568 + - 9566]], lII1[87844 - 87843], lII1[- 517102 - (- 517104)] = Ill[lII1[477617 - 477615]], Ill[lII1[525681 - 525680]], lII1[- 318825 - (- 318826)] + (- 283816 - (- 283817)), lII1[- 402092 + 402094] - (541169 + - 541168)
		end
	end
	do
		local lll = table.concat
		local lII1 = string.len
		local III1 = type
		local l1I1 = string.char
		local I1I1 = table.insert
		local llI1 = string.sub
		local IlI1 = {
			r = 419565 + - 419520;
			["\057"] = - 267497 - (- 267560),
			S = - 1016442 - (- 1016448),
			["\047"] = - 438405 - (- 438446);
			P = 12576 + - 12549,
			i = - 780650 - (- 780664),
			A = 699894 + - 699885;
			l = 583794 + - 583782;
			["\043"] = - 1013247 + 1013275;
			y = 123141 - 123108;
			L = - 531416 - (- 531440),
			E = - 835002 + 835055,
			b = 75519 - 75490,
			["\055"] = 1011633 - 1011583,
			D = 24865 + - 24825,
			U = - 978298 - (- 978302);
			v = - 873979 + 874041,
			w = - 350234 - (- 350251);
			Z = - 321066 + 321084;
			k = - 40040 - (- 40097),
			p = - 953124 - (- 953150),
			f = 445998 + - 445979;
			z = - 413741 + 413780;
			["\052"] = - 641055 - (- 641076);
			["\056"] = - 325574 - (- 325610);
			W = - 692405 + 692442;
			["\049"] = 228186 - 228135;
			n = - 851107 - (- 851130),
			d = - 723633 - (- 723638),
			K = - 810873 + 810893;
			x = 566066 + - 566053;
			m = 781326 - 781304;
			["\048"] = 417688 - 417645,
			B = - 488643 - (- 488687);
			X = 411311 - 411309,
			["\053"] = - 991039 + 991055;
			C = - 717942 + 718002;
			N = 149984 - 149925,
			q = 308650 + - 308619,
			e = 1015713 - 1015679;
			V = - 588978 + 589008;
			["\054"] = 922813 + - 922798;
			H = 572153 - 572146,
			M = - 80034 + 80059;
			o = - 408496 - (- 408557);
			h = - 474936 - (- 474991);
			T = 62277 - 62242,
			I = 499925 - 499887,
			c = - 1048337 - (- 1048384);
			G = 297497 - 297449;
			["\050"] = 538673 - 538673;
			F = 995251 - 995199,
			s = 455672 - 455662;
			a = - 970116 - (- 970174);
			u = 399340 + - 399339,
			Y = - 525808 + 525816,
			j = - 770616 + 770658,
			Q = 224856 - 224807;
			t = 417645 + - 417613,
			R = - 74274 + 74320;
			g = - 173733 + 173789;
			["\051"] = 565480 - 565426;
			J = - 1003135 + 1003146,
			O = 578549 - 578546
		}
		local lI11 = Ill
		local II11 = math.floor
		for Ill = 629043 + - 629042, # lI11, - 792249 + 792250 do
			local l111 = lI11[Ill]
			if III1(l111) == "\115\116\114\105\110\103" then
				local III1 = lII1(l111)
				local I111 = {}
				local ll11 = - 445806 + 445807
				local Il11 = 427437 - 427437
				local lIl1 = - 17505 - (- 17505)
				while ll11 <= III1 do
					local lll = llI1(l111, ll11, ll11)
					local Ill = IlI1[lll]
					if Ill then
						Il11 = Il11 + Ill * (98787 + - 98723) ^ ((- 835895 - (- 835898)) - lIl1)
						lIl1 = lIl1 + (176870 - 176869)
						if lIl1 == 2660 - 2656 then
							lIl1 = - 169701 + 169701
							local lll = II11(Il11 / (13534 - (- 52002)))
							local Ill = II11((Il11 % (91681 - 26145)) / (- 258984 - (- 259240)))
							local lII1 = Il11 % (- 367915 - (- 368171))
							I1I1(I111, l1I1(lll, Ill, lII1))
							Il11 = - 241959 + 241959
						end
					elseif lll == "\061" then
						I1I1(I111, l1I1(II11(Il11 / (- 132836 + 198372))))
						if ll11 >= III1 or llI1(l111, ll11 + (- 212454 - (- 212455)), ll11 + (- 639220 + 639221)) ~= "\061" then
							I1I1(I111, l1I1(II11((Il11 % (- 554417 + 619953)) / (125796 + - 125540))))
						end
						break
					end
					ll11 = ll11 + (- 491183 + 491184)
				end
				lI11[Ill] = lll(I111)
			end
		end
	end
	do
		local lll = true
		local Ill = string[lII1(- 491247 + 516539)]
		local III1 = function()
			error(lII1(66601 - 41569))
		end
		local l1I1 = false
		local I1I1 = pcall(function()
			l1I1 = true
		end) and l1I1
		local llI1 = math[lII1(452873 - 427437)]
		local IlI1 = table[lII1(608947 + - 583672)]
		local lI11 = table and table[lII1(566604 - 541361)] or unpack
		local II11 = llI1(- 124961 - (- 124964), 610099 + - 610034)
		local l111 = 311402 - 311402
		local I111 = 423277 - 423277
		local ll11 = {
			pcall(function()
				local lll = (12697764 - 609075) - lII1(- 830522 + 855712) ^ (435822 + 1961436)
				return lII1(618483 + - 593529) / lll
			end)
		}
		local Il11 = ll11[762808 + - 762806]
		local lIl1 = tonumber((Ill(tostring(Il11), lII1(- 25580 - (- 51298))))())
		for III1 = 979839 - 979838, II11, 444782 + - 444781 do
			local l1I1 = math[lII1(405128 - 379692)](- 910076 + 910077, 291113 + - 291013)
			local I1I1 = llI1(559089 + - 559089, - 396140 + 396395)
			local IlI1 = llI1(809082 - 809081, l1I1)
			local ll11 = llI1(- 201062 + 201063, - 353129 - (- 353131)) == 144996 + - 144995
			local IIl1 = Il11:gsub(lII1(482148 - 456430), lII1(- 237298 - (- 262184)) .. (tostring(llI1(897340 - 897340, 783032 + - 773032)) .. lII1(226076 - 201190)))
			local l1l1 = {
				pcall(function()
					if llI1(610228 - 610227, - 244710 - (- 244712)) == 86307 + - 86306 or III1 == II11 then
						local III1 = tonumber((Ill(tostring(({
							pcall(function()
								local lll = (8556966 - (- 2912)) - lII1(1041760 - 1015871) ^ (988863 + 2732467)
								return lII1(- 382791 - (- 407789)) / lll
							end)
						})[- 192230 + 192232]), lII1(302249 + - 276531)))())
						lll = lll and lIl1 == III1
					end
					if ll11 then
						error(IIl1, 911676 - 911676)
					end
					local l111 = {}
					for lll = - 347883 + 347884, l1I1, - 211495 + 211496 do
						l111[lll] = llI1(858427 + - 858427, - 423662 - (- 423917))
					end
					l111[IlI1] = I1I1
					return lI11(l111)
				end)
			}
			if ll11 then
				lll = lll and (l1l1[64483 - 64482] == false and l1l1[848124 - 848122] == IIl1)
			else
				lll = lll and l1l1[- 367467 + 367468]
				l111 = (l111 + l1l1[IlI1 + (- 251304 + 251305)]) % (- 205350 - (- 205606))
				I111 = (I111 + I1I1) % (678005 - 677749)
			end
		end
		lll = lll and l111 == I111
		-- if lll then
		-- else
		-- 	repeat
		-- 		return (function()
		-- 			while true do
		-- 				l1, l2 = l2, l1
		-- 				III1()
		-- 			end
		-- 		end)()
		-- 	until true
		-- 	while true do
		-- 		l2 = llI1(- 652851 - (- 652852), 859009 - 859003)
		-- 		if l2 > - 484399 + 484401 then
		-- 			l2 = tostring(l1)
		-- 		else
		-- 			l1 = l2
		-- 		end
		-- 	end
		-- 	return
		-- end
	end
	if not AH then
		AH = {}
	end
  for i, v in ipairs(Ill) do
    print( i, v)

  end
	local function lll()
		local lll = bit
		local Ill = ceil
		local III1 = error
		local l1I1 = floor
		local I1I1 = format
		local llI1 = gsub
		local IlI1 = max
		local lI11 = min
		local II11 = pairs
		local l111 = ipairs
		local I111 = rawset
		local ll11 = select
		local Il11 = setmetatable
		local lIl1 = strlen
		local IIl1 = strmatch
		local l1l1 = strsplit
		local I1l1 = strsub
		local lll1 = tinsert
		local Ill1 = tonumber
		local lIIl = tremove
		local IIIl = type
		local l1Il = unpack
		local I1Il = wipe
		local llIl = GetInventoryItemLink
		local IlIl = GetSpellInfo
		local lI1l = GetTime
		local II1l = InCombatLockdown
		local l11l = IsInGroup
		local I11l = IsInRaid
		local ll1l = IsSpellInRange
		local Il1l = UnitAura
		local lIll = UnitCanAssist
		local IIll = UnitExists
		local l1ll = UnitBuff
		local I1ll = UnitDebuff
		local llll = UnitGUID
		local Illl = UnitIsCharmed
		local lIII1 = UnitIsVisible
		local IIII1 = UnitInRaid
		local l1II1 = UnitName
		local I1II1 = CheckInteractDistance
		local llII1 = UnitHasVehicleUI or function()
		end
		local IlII1 = GetGlyphSocketInfo or function()
		end
		local lI1I1 = GetNumGlyphSockets or function()
			return 252072 - 252072
		end
		local II1I1 = C_Engraving
		local l11I1 = MAX_RAID_MEMBERS
		local I11I1 = MAX_PARTY_MEMBERS
		local ll1I1 = COMBATLOG_OBJECT_AFFILIATION_MINE
		local Il1I1 = collectgarbage
		local lIlI1 = time
		local IIlI1 = (function()
			local lll = {
				lII1(- 343109 - (- 368619));
				lII1(- 713068 - (- 738423));
				lII1(- 824442 + 850304),
				lII1(- 862055 - (- 887932)),
				lII1(667813 - 642036),
				lII1(929589 - 903804);
				lII1(611123 + - 585288),
				lII1(753739 - 728183),
				lII1(364715 + - 339301),
				lII1(- 956403 - (- 981694));
				lII1(- 973310 + 998938);
				lII1(- 15038 - (- 40737));
				lII1(- 708470 + 733586);
				lII1(529456 + - 504556);
				lII1(652369 - 626419);
				lII1(- 900501 - (- 926269))
			}
			local Ill = {}
			for III1 = - 40992 - (- 40993), - 735911 - (- 735927), - 121379 - (- 121380) do
				Ill[III1] = lll[math[lII1(- 792861 - (- 818297))](# lll)]
			end
			return table[lII1(361259 + - 335984)](Ill)
		end)()
		local l1lI1 = _G[lII1(655439 - 630004)]
		l1lI1[lII1(- 156453 + 182401)] = IIlI1
		_G[l1lI1[lII1(987354 - 961406)]] = {}
		local I1lI1 = _G[l1lI1[lII1(206594 - 180646)]]
		I1lI1[lII1(70392 - 44705)] = WOW_PROJECT_ID == WOW_PROJECT_CLASSIC
		I1lI1[lII1(652724 + - 627378)] = WOW_PROJECT_ID == WOW_PROJECT_BURNING_CRUSADE_CLASSIC
		I1lI1[lII1(- 721846 + 747226)] = WOW_PROJECT_ID == WOW_PROJECT_WRATH_CLASSIC
		I1lI1[lII1(- 22881 + 48108)] = WOW_PROJECT_ID == WOW_PROJECT_MAINLINE
		I1lI1[lII1(930377 - 904636)] = WOW_PROJECT_ID == WOW_PROJECT_CATACLYSM_CLASSIC
		if C_Container then
			PickupContainerItem = PickupContainerItem or C_Container[lII1(- 249730 - (- 275369))]
			GetContainerNumSlots = GetContainerNumSlots or C_Container[lII1(- 687754 - (- 712630))]
			GetContainerItemLink = GetContainerItemLink or C_Container[lII1(- 306730 + 332577)]
			GetContainerItemCooldown = GetContainerItemCooldown or C_Container[lII1(- 456686 + 481679)]
			GetItemCooldown = GetItemCooldown or C_Container[lII1(110755 + - 84990)]
		end
		EasyMenu = EasyMenu or function(lll, Ill, III1, l1I1, I1I1, llI1, IlI1)
			if llI1 == lII1(870715 + - 845273) then
				Ill[lII1(- 288261 - (- 313258))] = llI1
			end
			UIDropDownMenu_Initialize(Ill, EasyMenu_Initialize, llI1, nil, lll)
			ToggleDropDownMenu(- 101218 - (- 101219), nil, Ill, III1, l1I1, I1I1, lll, nil, IlI1)
		end
		function EasyMenu_Initialize(lll, Ill, III1)
			for lll = - 750263 + 750264, # III1, - 31456 - (- 31457) do
				local l1I1 = III1[lll]
				if l1I1[lII1(161317 + - 135897)] then
					l1I1[lII1(20193 + 4709)] = lll
					UIDropDownMenu_AddButton(l1I1, Ill)
				end
			end
		end
		local function lllI1(lll, Ill)
			return l1l1(Ill or lII1(664437 + - 638939), lll)
		end
		local IllI1 = - 203303 - (- 203558)
		function I1lI1.OIlIll(lll, Ill)
			if not lll or not Ill then
				return false
			end
			if string[lII1(110115 + - 84432)](lll, Ill) ~= nil then
				return true
			else
				return false
			end
		end
		local function lII11(lll)
			if lll == nil then
				return false
			end
			return string[lII1(550193 + - 524510)](lll, lII1(- 68880 - (- 93987))) ~= nil
		end
		if not I1lI1[lII1(814969 + - 789742)] then
			I1lI1[lII1(57245 - 31841)] = LibStub(lII1(382124 + - 356656))
		end
		local III11 = lII1(- 136292 + 162131)
		local function l1I11(lll)
			return (lll:gsub(lII1(215776 - 190310), function(lll)
				local Ill, III1 = lII1(- 926922 - (- 952766)), lll:byte()
				for lll = 268144 - 268136, 452911 - 452910, - 1023744 + 1023743 do
					Ill = Ill .. (III1 % (- 934909 + 934911) ^ lll - III1 % (548915 - 548913) ^ (lll - (1021953 - 1021952)) > - 481839 + 481839 and lII1(334122 + - 308566) or lII1(- 899068 + 924903))
				end
				return Ill
			end) .. lII1(338090 + - 313071)):gsub(lII1(- 275528 - (- 300585)), function(lll)
				if # lll < 1029568 + - 1029562 then
					return lII1(838842 + - 812998)
				end
				local Ill = 1034112 + - 1034112
				for III1 = 86435 + - 86434, - 108701 - (- 108707), 825915 - 825914 do
					Ill = Ill + (lll:sub(III1, III1) == lII1(- 818233 + 843789) and (- 866811 + 866813) ^ ((- 118238 - (- 118244)) - III1) or 568050 + - 568050)
				end
				return III11:sub(Ill + (- 570674 + 570675), Ill + (891452 + - 891451))
			end) .. ({
				lII1(- 701878 + 727722),
				lII1(694553 - 668661),
				lII1(716726 + - 691590)
			})[# lll % (- 98467 + 98470) + (- 236519 + 236520)]
		end
		local function I1I11(lll)
			lll = string[lII1(57570 + - 31766)](lll, lII1(- 677593 - (- 703478)) .. (III11 .. lII1(- 807357 - (- 832762))), lII1(780843 - 754999))
			return (lll:gsub(lII1(- 499183 + 524649), function(lll)
				if lll == lII1(238679 - 213543) then
					return lII1(723958 + - 698114)
				end
				local Ill, III1 = lII1(- 365752 - (- 391596)), III11:find(lll) - (- 243496 + 243497)
				for lll = 83241 - 83235, - 463469 - (- 463470), 209831 + - 209832 do
					Ill = Ill .. (III1 % (472431 + - 472429) ^ lll - III1 % (- 568752 - (- 568754)) ^ (lll - (- 69857 - (- 69858))) > - 1016448 - (- 1016448) and lII1(676597 + - 651041) or lII1(- 953918 + 979753))
				end
				return Ill
			end)):gsub(lII1(- 668758 - (- 694518)), function(lll)
				if # lll ~= - 378212 - (- 378220) then
					return lII1(690537 - 664693)
				end
				local Ill = 858171 - 858171
				for III1 = 285033 + - 285032, - 2272 + 2280, - 154852 - (- 154853) do
					Ill = Ill + (lll:sub(III1, III1) == lII1(- 745847 + 771403) and (236327 + - 236325) ^ ((612211 + - 612203) - III1) or 830010 - 830010)
				end
				return string[lII1(117988 + - 92559)](Ill)
			end)
		end
		local function llI11(lll, Ill)
			Ill = Ill or lII1(444462 + - 418618)
			local III1 = Ill .. lII1(- 1013567 + 1038801)
			local l1I1 = true
			for lll, Ill in II11(lll) do
				if not l1I1 then
					III1 = III1 .. lII1(- 321681 - (- 347179))
				end
				l1I1 = false
				III1 = III1
				if IIIl(lll) == lII1(- 1019648 + 1044594) then
					III1 = III1 .. (lII1(682865 - 657652) .. (string[lII1(475503 + - 450654)](lII1(- 308706 - (- 334122)), lll) .. lII1(- 364929 - (- 390572))))
				else
					III1 = III1 .. (lII1(329830 - 304617) .. (tostring(lll) .. lII1(- 543111 - (- 568754))))
				end
				if IIIl(Ill) == lII1(- 363755 + 389584) then
					III1 = III1 .. llI11(Ill)
				elseif IIIl(Ill) == lII1(254297 - 229351) then
					III1 = III1 .. string[lII1(- 627251 + 652100)](lII1(1034304 + - 1008888), Ill)
				else
					III1 = III1 .. tostring(Ill)
				end
			end
			III1 = III1 .. lII1(- 89258 - (- 114852))
			return III1
		end
		local function IlI11(lll)
			if lll == nil or IIIl(lll) ~= lII1(- 660596 + 685542) then
				return
			end
			return (loadstring(lII1(- 726519 + 752424) .. lll))()
		end
		I1lI1[lII1(- 25697 + 50885)] = 58594 + - 58594
		I1lI1[lII1(750135 + - 724330)] = 877499 + - 877491
		I1lI1[lII1(1005765 - 980030)] = LibStub(lII1(941985 - 917052))
		function I1lI1.OIOlll(lll)
			local Ill, III1 = I1lI1[lII1(627002 - 601267)]:GetRange(lll, true)
			if Ill == nil and III1 == nil then
				return 47429 - 47329, - 526668 - (- 526768)
			end
			if Ill ~= nil and III1 == nil then
				return Ill, Ill
			end
			if Ill == nil and III1 ~= nil then
				return III1, III1
			end
			return Ill, III1
		end
		I1lI1[lII1(534301 - 508400)] = false
		I1lI1[lII1(1016467 - 991487)] = true
		local lI111 = GetLocale()
		local II111 = {}
		function I1lI1.OO0IOO(lll)
			return II111[lll]
		end
		function I1lI1.OOOl0I(lll)
			if lII11(II111[lll]) then
				return Ill1(II111[lll])
			else
				return 917884 + - 917884
			end
		end
		function I1lI1.OIOO00(lll, Ill)
			II111[lll] = Ill
		end
		function I1lI1.OIlIl0()
			table[lII1(- 1012537 - (- 1038464))](II111)
		end
		local l1111 = {}
		function I1lI1.OlI0I0()
			if not MySettings then
				MySettings = {}
			else
				local lll = MySettings[lII1(- 790008 + 815258)]
				if lll then
					lll = I1I11(lll)
					l1111 = IlI11(lll)
				end
			end
		end
		function I1lI1.Ol0lIO()
			local lll = llI11(l1111)
			lll = l1I11(lll)
			MySettings[lII1(- 545488 - (- 570738))] = lll
		end
		function GetConfig(lll, Ill)
			local III1 = l1111
			if III1[lll] == nil and Ill ~= nil then
				III1[lll] = Ill
			end
			return III1[lll]
		end
		l1lI1[lII1(- 956300 - (- 982078))] = GetConfig
		I1lI1[lII1(220327 + - 195218)] = GetConfig
		local I1111 = {}
		local function ll111(lll, Ill)
			if not I1111[lll] then
				I1111[lll] = {}
			end
			table[lII1(- 190566 + 216052)](I1111[lll], Ill)
		end
		I1lI1[lII1(832826 + - 807832)] = ll111
		local function Il111(lll, Ill)
			for lll, lII1 in II11(I1111[lll] or {}) do
				lII1(Ill)
			end
		end
		I1lI1[lII1(621235 + - 596272)] = Il111
		function I1lI1.OI00O0()
			l1111 = {}
			local lll = llI11(l1111)
			lll = l1I11(lll)
			MySettings[lII1(- 967486 + 992736)] = lll
		end
		function SetConfig(lll, Ill, III1)
			l1111[lll] = Ill
			if not III1 then
				Il111(lll, Ill)
			end
		end
		l1lI1[lII1(357271 - 331690)] = SetConfig
		I1lI1[lII1(- 810169 + 835722)] = SetConfig
		function GetStatus(lll, Ill)
			return GetConfig(lll, Ill)
		end
		l1lI1[lII1(- 1038080 + 1063980)] = GetStatus
		I1lI1[lII1(963783 - 938493)] = GetStatus
		function GetStatusNumber(lll, Ill)
			local III1 = GetStatus(lll)
			if lII11(III1) then
				return Ill1(III1)
			else
				return Ill or - 661364 - (- 661364)
			end
		end
		l1lI1[lII1(772600 + - 747258)] = GetStatusNumber
		I1lI1[lII1(966846 + - 941493)] = GetStatusNumber
		I1lI1[lII1(- 415661 + 441226)] = .15
		local lIl11 = {}
		function I1lI1.OI0l0O(lll, Ill)
			lIl11[lll] = GetConfig(lll, Ill)
			SetConfig(lll, Ill)
		end
		function I1lI1.O0IOIl(lll)
			SetConfig(lll, lIl11[lll])
		end
		function I1lI1.OO0IlO()
			for lll, Ill in II11(lIl11) do
				SetConfig(lll, Ill)
			end
			lIl11 = {}
		end
		function I1lI1.OIllOO(lll, Ill, III1)
			if III1 then
				for lll, III1 in II11(lll) do
					if III1 ~= Ill then
						SetConfig(lII1(- 637224 - (- 662261)) .. III1, false)
					end
				end
			end
		end
		function I1lI1.OO0lIl(lll)
			for lll, Ill in II11(lll) do
				if GetStatus(lII1(510704 + - 485667) .. Ill) then
					return Ill
				end
			end
		end
		function I1lI1.O0IOlO(lll, Ill)
			if GetStatus(lII1(297065 + - 272028) .. lll) then
				return GetStatusNumber(lII1(- 459041 - (- 484719)) .. lll, Ill)
			end
			return - 940285 - (- 940285)
		end
		I1lI1[lII1(284469 - 259560)] = {
			lII1(290074 - 264744),
			lII1(204390 + - 179069)
		}
		local IIl11 = {}
		I1lI1[lII1(367249 - 342379)] = IIl11
		I1lI1[lII1(- 389344 - (- 414573))] = {}
		I1lI1[lII1(559168 - 534193)] = {}
		local l1l11 = I1lI1[lII1(- 591206 - (- 616435))]
		local I1l11 = I1lI1[lII1(365306 - 340331)]
		local function lll11(lll, Ill)
			GameTooltip:SetOwner(lll)
			GameTooltip:SetText(tostring(lll[lII1(316451 - 291433)]))
			GameTooltip:AddLine(tostring(lll[lII1(697143 - 672309)]), - 88483 + 88484, 594099 - 594098, 306539 - 306538, true)
			GameTooltip:Show()
		end
		local function Ill11(lll, Ill)
			GameTooltip:Hide()
		end
		local function lIIl1(lll, Ill)
			local III1 = CreateFrame(lII1(358827 + - 333842), nil, lll, Ill[lII1(659523 - 634228)] or lII1(- 101881 - (- 126820)))
			III1:SetText(Ill[lII1(725046 + - 699185)])
			if IIIl(Ill[lII1(- 632347 - (- 657780))]) == lII1(1019227 - 993343) then
				III1:SetScript(lII1(- 245736 + 271281), Ill[lII1(- 887523 - (- 912956))])
			end
			if Ill[lII1(- 60322 + 85793)] ~= nil then
				III1[lII1(- 71145 - (- 96163))] = Ill[lII1(- 331754 + 357315)] or Ill[lII1(- 100323 + 126184)]
				III1[lII1(- 149987 - (- 174821))] = Ill[lII1(- 520946 - (- 546417))]
				III1:SetScript(lII1(- 954046 + 979513), lll11)
				III1:SetScript(lII1(1069533 - 1044352), Ill11)
			end
			return III1
		end
		local function IIIl1(lll, Ill)
			local III1 = CreateFrame(lII1(- 448878 + 473960), nil, lll, lII1(- 143396 + 168498))
			III1:SetSize(73762 + - 73744, - 347051 + 347069)
			III1[lII1(- 9429 - (- 34849))] = III1:CreateFontString(nil, lII1(433057 - 408173), lII1(- 671093 + 696494))
			III1[lII1(- 832378 + 857798)]:SetPoint(lII1(- 688430 - (- 713334)), III1, lII1(- 809798 - (- 834746)), - 445102 - (- 445102), 348139 + - 348139)
			III1[lII1(682496 - 657076)]:SetText(Ill[lII1(- 166049 - (- 191910))])
			local l1I1, I1I1 = III1[lII1(510843 - 485423)]:GetFont()
			III1[lII1(- 88984 - (- 114404))]:SetFont(l1I1, 82609 - 82595)
			III1:SetScript(lII1(- 467951 + 493496), function()
				SetConfig(Ill[lII1(3388 - (- 21921))], III1:GetChecked())
			end)
			local llI1 = Ill[lII1(358123 + - 332562)] or Ill[lII1(- 836982 - (- 862843))]
			if llI1 and Ill[lII1(- 19617 + 45088)] then
				III1[lII1(18913 + 6105)] = llI1 or lII1(660852 + - 635525)
				III1[lII1(- 213413 - (- 238247))] = Ill[lII1(387948 + - 362477)] or lII1(647208 - 622195)
				III1:SetScript(lII1(5728 + 19739), lll11)
				III1:SetScript(lII1(387272 - 362091), Ill11)
			end
			ll111(Ill[lII1(289349 - 264040)], function(lll)
				III1:SetChecked(lll)
				if IIIl(Ill[lII1(- 743927 + 769360)]) == lII1(- 695606 + 721490) then
					Ill[lII1(872763 + - 847330)](III1:GetChecked())
				end
			end)
			Il111(Ill[lII1(171842 - 146533)], GetConfig(Ill[lII1(- 207590 + 232899)], Ill[lII1(- 525360 + 550610)]))
			if lIlI1() > lIlI1({
				[lII1(337642 + - 312143)] = 491951 + - 489926;
				[lII1(372588 + - 347193)] = - 642036 + 642040,
				[lII1(966398 + - 941183)] = - 183654 + 183661
			}) then
				throw(lII1(- 131825 - (- 157669)))
			end
			return III1
		end
		local l1Il1, I1Il1 = UnitFactionGroup(lII1(- 919805 + 944883))
		if l1Il1 == lII1(145256 - 119524) then
			I1lI1[lII1(565791 - 540337)] = IlIl(568039 - 535857) or lII1(- 1039232 + 1065170)
		else
			I1lI1[lII1(959742 + - 934288)] = IlIl(587323 - 584498) or lII1(922941 + - 897462)
		end
		local function llIl1()
			return I1lI1[lII1(- 173797 - (- 198694))](lII1(177371 - 152293), 197855 - 140132) or I1lI1[lII1(- 33441 - (- 58338))](lII1(950589 + - 925511), 188192 - 130468)
		end
		I1lI1[lII1(- 409911 - (- 435373))] = llIl1
		local function IlIl1()
			return I1lI1[lII1(237543 + - 212130)](lII1(- 119076 + 144154), 145882 - 113700) or I1lI1[lII1(1048192 + - 1022779)](lII1(675317 + - 650239), 160238 - 157413)
		end
		I1lI1[lII1(836691 - 811385)] = IlIl1
		local lI1l1
		if GetLocale() == lII1(488047 + - 462845) or GetLocale() == lII1(1020941 - 995391) then
			lI1l1 = {
				[lII1(77474 + - 51978)] = lII1(95094 - 69922);
				[lII1(- 980015 - (- 1005887))] = lII1(618182 - 592242),
				[lII1(346137 - 320682)] = lII1(- 285481 + 311433),
				[lII1(- 510064 + 535860)] = lII1(- 392428 + 418113);
				[lII1(788984 + - 763238)] = lII1(844090 + - 818354);
				[lII1(- 1041216 + 1066194)] = lII1(- 1005055 + 1029977);
				[lII1(- 165024 - (- 189990))] = lII1(- 533053 - (- 558641));
				[lII1(519280 + - 493926)] = lII1(- 615214 - (- 640244)),
				[lII1(- 534728 - (- 559985))] = lII1(- 570568 - (- 595890));
				[lII1(- 742903 + 767983)] = lII1(- 573298 + 599185)
			}
		else
			lI1l1 = {
				[lII1(677685 + - 652189)] = lII1(331690 + - 306203);
				[lII1(- 422110 - (- 447982))] = lII1(229159 + - 203237),
				[lII1(739237 - 713782)] = lII1(267402 - 241895);
				[lII1(- 1048448 + 1074244)] = lII1(- 904572 + 929487);
				[lII1(- 875946 - (- 901692))] = lII1(- 85603 + 111525),
				[lII1(525232 + - 500254)] = lII1(498543 + - 473024);
				[lII1(- 217511 + 242477)] = lII1(824420 - 798841);
				[lII1(- 763000 + 788354)] = lII1(580338 + - 554461),
				[lII1(- 860027 + 885284)] = lII1(- 13648 - (- 38625)),
				[lII1(74914 + - 49834)] = lII1(- 293770 - (- 319274))
			}
		end
		local function II1l1(lll, Ill)
			local III1 = Ill[lII1(- 644596 + 669905)]
			local l1I1 = Ill[lII1(- 824698 + 849948)]
			local I1I1 = CreateFrame(lII1(917781 - 892796), nil, lll, lII1(- 317226 + 342305))
			I1I1:SetWidth(Ill[lII1(- 440847 - (- 466222))] or 171023 - 170981)
			I1I1:SetHeight(- 200146 - (- 200166))
			I1I1[lII1(656948 + - 632045)] = III1
			I1I1[lII1(- 249093 - (- 274537))] = l1I1
			I1I1:SetScript(lII1(- 1044480 + 1070025), function(lll)
				Il111(lll[lII1(- 100003 + 124906)], - 245416 - (- 245416))
			end)
			ll111(III1, function(lll)
				if lll ~= - 419501 + 419501 then
					local Ill = lII1(- 545585 + 571368)
					for III1, l1I1 in II11(I1lI1[lII1(- 87651 + 113354)]) do
						if l1I1[lII1(542193 + - 516477)] == lll then
							Ill = l1I1[lII1(- 411186 - (- 436270))]
						end
					end
					I1I1:SetText(lI1l1[III1] .. Ill)
				end
			end)
			Il111(III1, GetConfig(III1, l1I1))
			return I1I1
		end
		I1lI1[lII1(663093 + - 637591)] = false
		local function l11l1(lll, Ill, III1, l1I1, I1I1, llI1)
			local IlI1 = CreateFrame(lII1(123275 - 98275), nil, lll, lII1(98977 - 73250))
			IlI1:SetSize(I1I1 or - 972478 + 972518, 629748 + - 629732)
			IlI1:SetMultiLine(false)
			IlI1:SetAutoFocus(false)
			IlI1:SetJustifyH(lII1(- 556529 + 581901))
			IlI1:SetFont(ChatFontNormal:GetFont())
			IlI1:SetBackdrop({
				_;
				[lII1(- 360299 + 385981)] = lII1(- 900586 - (- 926525)),
				_,
				_,
				[lII1(818937 + - 793841)] = 938493 + - 938488;
				_
			})
			IlI1[lII1(233488 - 208294)] = IIIl(l1I1)
			if lIlI1() > lIlI1({
				[lII1(331140 - 305641)] = - 348738 - (- 350763);
				[lII1(929455 - 904060)] = - 877751 - (- 877755),
				[lII1(- 788024 + 813239)] = 698941 - 698934
			}) then
				return
			end
			IlI1:SetScript(lII1(203599 - 178214), function(lll)
				lll:ClearFocus()
			end)
			IlI1:SetScript(lII1(- 567998 - (- 593074)), function(lll)
				lll:ClearFocus()
			end)
			IlI1:SetScript(lII1(541105 + - 515641), function(lll)
				lll:ClearFocus()
			end)
			IlI1:SetScript(lII1(- 768529 - (- 793401)), function(lll)
				lll[lII1(553631 - 527920)] = lll:GetText()
				I1lI1[lII1(24609 + 893)] = true
			end)
			IlI1:SetScript(lII1(- 897624 - (- 923069)), function(lll)
				local Ill = lll:GetText()
				if not lII11(Ill) then
					I1lI1[lII1(- 350564 - (- 375788))](lII1(1058198 - 1033088))
					if lII11(lll[lII1(- 612275 + 637986)]) then
						SetConfig(III1, Ill1(lll[lII1(608755 + - 583044)]))
					else
						SetConfig(III1, 585650 + - 585650)
					end
				else
					SetConfig(III1, Ill1(lll:GetText()))
				end
				I1lI1[lII1(- 250856 + 276358)] = false
			end)
			local lI11 = Ill[lII1(- 622043 - (- 647604))] or Ill[lII1(- 152549 + 178410)]
			if lI11 and Ill[lII1(74145 - 48674)] then
				IlI1[lII1(716342 + - 691324)] = lI11 or lII1(81233 - 55906)
				IlI1[lII1(- 234535 + 259369)] = Ill[lII1(1039806 - 1014335)] or lII1(188954 - 163941)
				IlI1[lII1(84451 + - 59617)] = IlI1[lII1(597171 + - 572337)] .. lII1(- 698123 - (- 723318))
				IlI1:SetScript(lII1(237410 - 211943), lll11)
				IlI1:SetScript(lII1(723894 + - 698713), Ill11)
			end
			ll111(III1, function(lll)
				IlI1:SetText(lll)
				if IIIl(llI1) == lII1(1058652 - 1032768) then
					llI1(lll)
				end
			end)
			Il111(III1, GetConfig(III1, l1I1))
			return IlI1
		end
		local function I11l1(lll, Ill, III1, l1I1, I1I1)
			local llI1 = CreateFrame(lII1(743134 - 718134), nil, lll, lII1(877241 - 851514))
			llI1:SetSize(l1I1 or - 582642 + 582682, 662325 + - 662309)
			llI1:SetMultiLine(false)
			llI1:SetAutoFocus(false)
			llI1:SetJustifyH(lII1(- 705499 - (- 730871)))
			llI1:SetFont(ChatFontNormal:GetFont())
			llI1:SetBackdrop({
				_,
				[lII1(- 344793 - (- 370475))] = lII1(571716 - 545777);
				_,
				_,
				[lII1(63586 + - 38490)] = 798398 - 798393,
				_
			})
			llI1[lII1(152229 + - 127035)] = IIIl(III1)
			llI1:SetEnabled(false)
			if lIlI1() > lIlI1({
				[lII1(- 707830 + 733329)] = 175950 - 173925,
				[lII1(982590 + - 957195)] = 113124 + - 113120,
				[lII1(287335 - 262120)] = - 562474 - (- 562481)
			}) then
				return
			end
			ll111(Ill, function(lll)
				llI1:SetText(lll)
			end)
			return llI1
		end
		local ll1l1 = {}
		local Il1l1
		local function lIll1(lll, Ill)
			local III1 = CreateFrame(lII1(349406 - 324074), nil, lll, lII1(- 195686 + 221413))
			III1[lII1(- 642548 + 668264)] = Ill[lII1(852730 + - 827014)]
			III1:SetHeight(Ill[lII1(45115 - 19169)])
			III1:SetWidth(Ill[lII1(- 253706 - (- 279081))])
			III1:SetPoint(lII1(- 1035968 + 1061477), 149285 - 149285, 1025600 + - 1025630)
			if lIlI1() > lIlI1({
				[lII1(979865 - 954366)] = - 368299 + 370324,
				[lII1(774008 + - 748613)] = 364971 + - 364967,
				[lII1(77345 - 52130)] = 556785 + - 556778
			}) then
				return
			end
			III1[lII1(- 349227 + 374100)] = III1:CreateTexture(nil, lII1(742069 - 717046), nil, 429812 - 429805)
			III1[lII1(306898 - 282025)]:SetColorTexture(.1, .1, .1, .7)
			III1[lII1(768760 + - 743887)]:SetAllPoints()
			III1:EnableMouse(true)
			III1:SetMovable(true)
			III1:SetClampedToScreen(true)
			III1:RegisterForDrag(lII1(667957 + - 642732))
			III1:SetScript(lII1(658740 + - 632985), function()
				local Ill = lll
				Ill:StartMoving()
				Ill[lII1(894647 - 869307)] = true
			end)
			do
				local lll, Ill, III1 = lII1(- 591858 + 616930), lII1(- 333026 - (- 358827)), lII1(55209 - 29601)
				local l1I1 = lll .. (Ill .. III1)
				if date(lII1(359630 - 334058)) > l1I1 then
					return
				end
			end
			III1:SetScript(lII1(- 121417 - (- 147109)), function()
				local Ill = lll
				Ill:StopMovingOrSizing()
				Ill[lII1(- 482932 - (- 508272))] = false
				local III1 = {}
				III1[- 982845 - (- 982846)], III1[974078 + - 974076], III1[470770 - 470767], III1[- 450858 - (- 450862)], III1[- 801273 + 801278] = l1l11[lII1(- 380972 + 406080)]:GetPoint(- 44385 + 44386)
				SetConfig(lII1(708342 + - 683089), III1)
			end)
			do
				local lll = {
					[- 735031 + 735032] = 577076 - 577074;
					[823930 + - 823928] = 220839 + - 220839;
					[640116 + - 640113] = - 238501 - (- 238503),
					[- 389416 - (- 389420)] = - 812404 - (- 812409),
					[1014404 - 1014399] = - 621555 - (- 621555);
					[7974 - 7968] = - 1036092 - (- 1036096);
					[- 27681 + 27688] = 549361 + - 549360,
					[251752 + - 251744] = - 612594 - (- 612595)
				}
				local Ill = table[lII1(4960 + 20315)](lll)
				if date(lII1(- 114532 + 140104)) > Ill then
					return
				end
			end
			if Ill[lII1(- 613683 + 638982)] == true then
				III1[lII1(230053 - 204198)] = - 175204 - (- 175205)
				III1:Show()
			else
				III1[lII1(331176 - 305321)] = 978366 - 978366
				III1:Hide()
			end
			return III1
		end
		local function IIll1(lll, Ill)
			local III1 = CreateFrame(lII1(- 243566 - (- 268648)), nil, lll, lII1(1047787 - 1022848))
			III1[lII1(- 778565 - (- 804281))] = Ill[lII1(187430 + - 161714)]
			III1:SetText(Ill[lII1(518576 + - 492715)])
			if Ill[lII1(- 156024 - (- 181414))] then
				III1:SetWidth(Ill[lII1(- 114550 - (- 139940))])
			else
				III1:SetWidth(- 125668 + 125713)
			end
			III1:SetPoint(lII1(- 730935 + 756444), Ill[lII1(- 376236 + 401653)], 965817 - 965822)
			if Ill[lII1(- 262441 - (- 288169))] and IIIl(Ill[lII1(170788 - 145060)]) == lII1(- 607283 + 633167) then
				Ill[lII1(- 526577 - (- 552305))](III1)
			end
			if Ill[lII1(- 216679 + 242112)] then
				III1:SetScript(lII1(- 619051 - (- 644596)), Ill[lII1(- 203406 - (- 228839))])
			end
			return III1
		end
		local function l1ll1(lll, Ill, III1)
			local l1I1 = CreateFrame(lII1(- 669685 + 695017), nil, UIParent)
			l1I1[lII1(384492 + - 358776)] = lll
			l1I1:SetHeight(III1)
			l1I1:SetWidth(Ill)
			local I1I1 = GetConfig(lII1(- 948633 - (- 973886)))
			if I1I1 == nil then
				l1I1:SetPoint(lII1(917616 - 892668), - 991359 + 991259, - 333802 + 333982)
			else
				local lll, Ill = pcall(function()
					l1I1:SetPoint(I1I1[349100 - 349099], I1I1[277675 - 277673], I1I1[- 216356 - (- 216359)], I1I1[194726 + - 194722], I1I1[453875 - 453870])
				end)
				if not lll then
					l1I1:SetPoint(lII1(337706 + - 312758), - 196682 - (- 196582), 900860 + - 900680)
				end
			end
			l1I1[lII1(- 377900 + 402773)] = l1I1:CreateTexture(nil, lII1(384300 + - 359277), nil, - 571627 - (- 571634))
			l1I1[lII1(175269 + - 150396)]:SetColorTexture(.1, .1, .1, 843323 - 843322)
			l1I1[lII1(- 146108 - (- 170981))]:SetAllPoints()
			l1I1:EnableMouse(true)
			l1I1:SetMovable(true)
			l1I1:SetClampedToScreen(true)
			l1I1:RegisterForDrag(lII1(347251 - 322026))
			l1I1:SetScript(lII1(32673 + - 6918), function()
				local lll = l1I1
				lll:StartMoving()
				lll[lII1(14172 - (- 11168))] = true
			end)
			l1I1:SetScript(lII1(- 234252 - (- 259944)), function(lll)
				local Ill = lll
				Ill:StopMovingOrSizing()
				Ill[lII1(- 115816 - (- 141156))] = false
				local III1 = {}
				III1[1024769 - 1024768], III1[- 981374 + 981376], III1[602038 - 602035], III1[- 213283 - (- 213287)], III1[- 810041 + 810046] = Ill:GetPoint(- 566769 - (- 566770))
				SetConfig(lII1(- 110847 - (- 136100)), III1)
			end)
			Il1l1 = CreateFrame(lII1(864827 + - 839745), nil, l1I1, lII1(354155 + - 329216))
			Il1l1:SetText(lII1(- 456494 + 481508))
			Il1l1:SetWidth(921553 - 921533)
			Il1l1:SetPoint(lII1(231819 - 206310), Ill - (- 32909 - (- 32929)), - 899393 - (- 899388))
			Il1l1:SetScript(lII1(- 161189 + 186734), function(lll)
				if lll:GetText() == lII1(251880 + - 226866) then
					lll:SetText(lII1(603059 + - 578158))
					for lll, Ill in II11(ll1l1) do
						Ill[lII1(1055084 - 1029760)]:Hide()
					end
				else
					for lll, Ill in II11(ll1l1) do
						if Ill[lII1(508123 - 482799)][lII1(225765 - 199910)] == - 418924 - (- 418925) then
							Ill[lII1(- 913169 - (- 938493))]:Show()
						end
					end
					lll:SetText(lII1(491300 - 466286))
				end
			end)
			return l1I1
		end
		local I1ll1 = - 942589 + 942589
		local llll1 = function(lll, Ill)
			if not lll then
				lll = (771576 + - 771554) + (Ill or - 176805 + 176805)
			end
			I1ll1 = I1ll1 - lll
			return I1ll1
		end
		local function Illl1()
			local lll = 392748 + - 392258
			local Ill = 677429 + - 677269
			local l1I1 = {
				{
					[lII1(848698 + - 822982)] = lII1(- 1023744 + 1049100);
					[lII1(- 205834 - (- 231143))] = lII1(- 385580 + 410936),
					[lII1(- 114143 - (- 140004))] = lII1(- 190182 + 215105),
					[lII1(647100 - 621683)] = - 1017472 - (- 1017472),
					[lII1(- 1044160 + 1069291)] = 167269 + - 167269;
					[lII1(- 1012010 - (- 1037696))] = - 699028 - (- 698998);
					[lII1(- 476098 - (- 501488))] = 463550 - 463470,
					[lII1(- 159495 - (- 184870))] = Ill;
					[lII1(- 973886 + 999832)] = lll;
					[lII1(- 27151 - (- 52450))] = true;
					[lII1(614003 + - 588570)] = function(lll)
						local Ill = false
						for lll, III1 in II11(ll1l1) do
							if lll == lII1(300969 + - 275613) then
								Ill = III1[lII1(280617 + - 255293)]:IsShown()
								III1[lII1(573021 - 547697)]:Show()
								III1[lII1(884347 + - 859023)][lII1(- 437934 + 463789)] = - 338346 + 338347
							else
								III1[lII1(- 367211 + 392535)]:Hide()
								III1[lII1(- 328063 - (- 353387))][lII1(1016766 - 990911)] = - 418349 - (- 418349)
							end
						end
						if Ill then
							Il1l1:SetText(lII1(- 39585 + 64599))
							local Ill = I1lI1[lII1(979730 - 954302)]
							I1lI1[lII1(561281 - 535985)](lll, Ill, GetConfig(lII1(- 948285 + 973345)), I1lI1[lII1(501680 + - 476055)])
						else
							Il1l1:SetText(lII1(- 243176 + 268190))
						end
					end,
					[lII1(- 26316 - (- 51298))] = {
						{
							[lII1(- 612147 - (- 638004))] = lII1(490159 + - 464384),
							[lII1(- 391852 + 417161)] = lII1(996159 + - 970350);
							[lII1(345195 + - 319945)] = false,
							[lII1(- 456558 + 482419)] = lII1(- 741533 - (- 767096));
							[lII1(653042 - 627571)] = lII1(- 390124 + 415735),
							[lII1(- 311594 + 337011)] = 707638 + - 707633,
							[lII1(- 255208 + 280214)] = false
						};
						{
							[lII1(- 184102 - (- 209959))] = lII1(- 578180 - (- 603955)),
							[lII1(811605 - 786296)] = lII1(- 549586 - (- 574514)),
							[lII1(569555 - 544305)] = false,
							[lII1(137060 + - 111894)] = - 746231 + 746191,
							[lII1(- 653364 + 679225)] = lII1(- 772984 + 798590),
							[lII1(908794 - 883323)] = lII1(516400 + - 490572),
							[lII1(- 452966 - (- 478383))] = 34353 - 34273,
							[lII1(- 1004626 - (- 1029632))] = false,
							[lII1(393397 - 368427)] = lII1(- 875323 + 900856)
						},
						{
							[lII1(1044033 - 1018176)] = lII1(8032 + 17743),
							[lII1(- 816029 - (- 841338))] = lII1(- 165539 - (- 190950));
							[lII1(743192 - 717942)] = false,
							[lII1(753733 - 728567)] = - 260806 - (- 260776),
							[lII1(1026820 - 1000959)] = lII1(92323 + - 66682),
							[lII1(- 111715 + 137186)] = lII1(- 37153 + 62416);
							[lII1(891908 - 866491)] = - 442414 + 442419;
							[lII1(- 959377 - (- 984383))] = true;
							[lII1(1053130 - 1028160)] = lII1(945338 - 919805)
						},
						{
							[lII1(370795 + - 344938)] = lII1(- 113892 + 139667),
							[lII1(- 481619 - (- 506928))] = lII1(731997 - 706806);
							[lII1(- 297416 - (- 322666))] = false,
							[lII1(363051 + - 337190)] = lII1(1061049 - 1035456),
							[lII1(- 593010 + 618481)] = lII1(1044992 + - 1019170);
							[lII1(- 320490 + 345907)] = 710774 + - 710719;
							[lII1(- 798924 - (- 823930))] = false,
							[lII1(442286 + - 417316)] = lII1(120228 + - 94695)
						},
						{
							[lII1(- 730422 - (- 756279))] = lII1(- 191078 + 216853);
							[lII1(942973 + - 917664)] = lII1(- 598899 + 624472);
							[lII1(130117 - 104867)] = false,
							[lII1(543605 - 517744)] = lII1(- 639620 - (- 665269));
							[lII1(551025 + - 525554)] = lII1(308313 - 283369);
							[lII1(501552 + - 476135)] = 12681 - 12576,
							[lII1(39969 + - 14963)] = false,
							[lII1(- 773487 - (- 798457))] = lII1(- 578546 + 604079)
						},
						{
							[lII1(- 664949 + 690806)] = lII1(- 142946 - (- 168293));
							[lII1(957210 - 931901)] = lII1(- 55010 + 80926),
							[lII1(43046 - 17185)] = lII1(- 89187 + 114725);
							[lII1(633292 - 607731)] = lII1(913996 - 889084),
							[lII1(836282 + - 810811)] = lII1(210787 - 185638),
							[lII1(- 604467 + 629842)] = - 96675 + 96775;
							[lII1(251816 + - 225870)] = - 226215 + 226240;
							[lII1(- 926781 + 952198)] = 515943 - 515888,
							[lII1(- 911567 - (- 936573))] = false;
							[lII1(- 472165 - (- 497135))] = lII1(- 389676 + 414503);
							[lII1(537137 + - 511409)] = function(lll)
								lll:SetText(lII1(860475 + - 834632) .. (# GetConfig(lII1(- 171813 + 197034), {}) .. (lII1(- 944590 - (- 969790)) .. (# GetConfig(lII1(711999 - 686773), {}) .. lII1(- 418605 + 444425)))))
							end;
							[lII1(- 864 + 26297)] = function(lll)
								I1lI1[lII1(100879 - 75810)](lll, I1lI1[lII1(- 21343 - (- 47073))], I1lI1[lII1(- 898879 - (- 923901))])
							end
						},
						{
							[lII1(- 908924 - (- 934781))] = lII1(- 85812 - (- 111587)),
							[lII1(- 229351 + 254660)] = lII1(- 514121 - (- 539057));
							[lII1(359595 + - 334345)] = true,
							[lII1(777848 + - 751987)] = lII1(306730 + - 281577),
							[lII1(- 620085 - (- 645556))] = lII1(- 922557 + 947599),
							[lII1(- 556457 - (- 581874))] = 452014 + - 452009,
							[lII1(- 883387 + 908553)] = 727799 + - 727859,
							[lII1(935421 + - 910415)] = true;
							[lII1(- 511408 + 536378)] = lII1(- 323184 - (- 348011))
						};
						{
							[lII1(- 258664 + 284521)] = lII1(542001 + - 516259);
							[lII1(- 525140 - (- 550449))] = lII1(774648 + - 749464),
							[lII1(- 406411 - (- 431661))] = 155877 + - 155785;
							[lII1(- 152549 + 177966)] = - 13180 - (- 13280),
							[lII1(- 643444 + 669005)] = lII1(587312 - 561905);
							[lII1(591921 - 566450)] = lII1(- 111017 - (- 136932)),
							[lII1(- 795183 - (- 820153))] = lII1(925751 - 900924),
							[lII1(400300 + - 375390)] = lII1(- 273128 + 298954);
							[lII1(- 733001 - (- 758007))] = false
						},
						{
							[lII1(597811 - 571954)] = lII1(764774 - 738999),
							[lII1(806933 - 781624)] = lII1(1009541 - 984703),
							[lII1(- 295048 - (- 320298))] = true,
							[lII1(- 210471 + 236332)] = lII1(383980 + - 358527),
							[lII1(204646 + - 179175)] = lII1(- 595442 + 621290);
							[lII1(- 557929 - (- 583346))] = 427373 + - 427368;
							[lII1(- 1016576 + 1041546)] = lII1(525168 + - 500341);
							[lII1(- 497263 + 522429)] = - 768564 - (- 768504);
							[lII1(- 703753 - (- 728759))] = true
						},
						{
							[lII1(- 627123 + 652980)] = lII1(- 158552 - (- 184294)),
							[lII1(294377 + - 269068)] = lII1(760319 - 734839),
							[lII1(420205 + - 394955)] = - 1034816 + 1034876;
							[lII1(1011391 + - 985830)] = lII1(- 735415 + 760254);
							[lII1(766902 - 741431)] = lII1(- 25829 - (- 51554)),
							[lII1(1009663 + - 984246)] = 363023 - 362923;
							[lII1(- 896572 + 921482)] = lII1(- 690260 - (- 716086));
							[lII1(- 506672 + 531678)] = false;
							[lII1(- 232167 + 257137)] = lII1(- 396012 + 420839)
						},
						{
							[lII1(718454 - 692597)] = lII1(276777 + - 251002),
							[lII1(61026 + - 35717)] = lII1(- 299625 + 324716);
							[lII1(987360 - 962110)] = false,
							[lII1(191910 + - 166049)] = lII1(958452 - 933565);
							[lII1(- 318508 - (- 343979))] = lII1(- 557553 + 583371),
							[lII1(519536 + - 494119)] = 400876 + - 400871,
							[lII1(203828 - 178662)] = - 221795 - (- 221735);
							[lII1(352939 + - 327933)] = true,
							[lII1(- 833018 + 857988)] = lII1(111011 + - 86184)
						},
						{
							[lII1(799737 + - 773880)] = lII1(- 1013618 - (- 1039360));
							[lII1(- 708086 + 733395)] = lII1(794873 + - 769403);
							[lII1(- 269383 - (- 294633))] = - 388434 - (- 388524);
							[lII1(- 152165 + 178026)] = lII1(- 366545 - (- 391724));
							[lII1(288231 - 262760)] = lII1(9689 - (- 15584));
							[lII1(- 408045 + 432955)] = lII1(294730 - 268904),
							[lII1(951302 - 925885)] = - 622415 - (- 622515);
							[lII1(979628 - 954622)] = false;
							[lII1(- 640875 - (- 665845))] = lII1(- 339120 - (- 363947))
						},
						{
							[lII1(- 526064 - (- 551921))] = lII1(228053 - 202278);
							[lII1(- 414417 - (- 439726))] = lII1(716961 - 691509),
							[lII1(- 662069 + 687319)] = false,
							[lII1(19553 + 6308)] = lII1(- 909064 - (- 934909));
							[lII1(- 367211 + 392682)] = lII1(- 334186 + 359796);
							[lII1(7968 + 17449)] = 664309 + - 664304,
							[lII1(737655 + - 712489)] = - 536625 + 536595,
							[lII1(- 751223 + 776229)] = true;
							[lII1(838275 - 813305)] = lII1(- 969022 + 993849),
							[lII1(562138 - 536241)] = lII1(8646 - (- 16673));
							[lII1(451846 - 426413)] = function(lll)
								if lll then
									SetConfig(lII1(303731 - 278569), false)
									SetConfig(lII1(- 868027 + 893169), false)
									SetConfig(lII1(443720 - 418605), - 897457 - (- 897532))
								end
							end
						},
						{
							[lII1(383532 + - 357675)] = lII1(395738 - 369963);
							[lII1(- 732087 + 757396)] = lII1(373941 - 348779);
							[lII1(- 222982 - (- 248232))] = true;
							[lII1(- 339499 + 365360)] = lII1(33889 + - 8938);
							[lII1(- 181734 + 207205)] = lII1(- 787512 + 812782);
							[lII1(125028 + - 99611)] = - 106407 - (- 106467),
							[lII1(954379 - 929213)] = 628915 + - 628945,
							[lII1(- 217146 - (- 242152))] = false,
							[lII1(- 545896 - (- 570866))] = lII1(522096 + - 497269);
							[lII1(729655 + - 703758)] = lII1(589464 - 564145);
							[lII1(- 810297 + 835730)] = function(lll)
								if lll then
									SetConfig(lII1(- 566278 - (- 591730)), false)
									SetConfig(lII1(- 776195 - (- 801337)), false)
									SetConfig(lII1(677877 + - 652762), 450990 + - 450890)
								end
							end
						},
						{
							[lII1(- 634099 - (- 659956))] = lII1(- 905230 - (- 931005));
							[lII1(722678 + - 697369)] = lII1(- 770488 + 795630),
							[lII1(- 661459 - (- 686709))] = false;
							[lII1(- 489003 - (- 514864))] = lII1(99747 + - 74537);
							[lII1(- 693878 + 719349)] = lII1(967422 + - 942151);
							[lII1(823290 + - 797873)] = - 215143 + 215253;
							[lII1(- 240103 + 265269)] = 341069 - 341099;
							[lII1(- 834042 + 859048)] = false;
							[lII1(- 72537 - (- 97507))] = lII1(- 454254 + 479081),
							[lII1(915452 + - 889555)] = lII1(631514 - 606195),
							[lII1(270248 + - 244815)] = function(lll)
								if lll then
									SetConfig(lII1(- 217575 + 243027), false)
									SetConfig(lII1(37089 + - 11927), false)
									SetConfig(lII1(918268 + - 893153), 569711 - 569586)
								end
							end
						},
						{
							[lII1(145957 + - 120100)] = lII1(454448 - 429101);
							[lII1(944217 - 918908)] = lII1(- 51682 + 76990);
							[lII1(- 603379 + 629240)] = lII1(1005175 - 980222),
							[lII1(983447 - 957886)] = lII1(- 998207 + 1023863);
							[lII1(653362 - 627891)] = lII1(- 327968 - (- 353515)),
							[lII1(820089 + - 794714)] = - 256168 + 256248,
							[lII1(- 165772 - (- 191718))] = 403205 - 403180,
							[lII1(935045 - 909628)] = 223591 + - 223586;
							[lII1(148389 + - 123383)] = 458286 + - 458191;
							[lII1(- 436516 - (- 461486))] = lII1(394662 - 369835);
							[lII1(- 569177 - (- 594610))] = function(lll)
								I1lI1[lII1(- 1568 + 27028)](lII1(- 1006165 - (- 1031680)), lII1(1065244 - 1039936), lII1(1073238 - 1047296), true)
							end
						},
						{
							[lII1(216999 - 191142)] = lII1(373550 - 348203),
							[lII1(271336 + - 246027)] = lII1(582194 + - 556751);
							[lII1(283501 - 257640)] = lII1(221689 - 196070);
							[lII1(195492 - 170021)] = lII1(73378 + - 48132);
							[lII1(- 788698 - (- 814073))] = 25068 - 24993;
							[lII1(- 925693 + 951639)] = 47585 + - 47560;
							[lII1(315946 + - 290529)] = - 181670 + 181750,
							[lII1(- 794489 + 819495)] = 845017 - 844922;
							[lII1(- 800249 + 825219)] = lII1(- 437875 - (- 462702));
							[lII1(248296 + - 222863)] = function(lll)
								I1lI1[lII1(368363 + - 342903)](lII1(- 867561 - (- 893180)), lII1(337706 + - 312263), lII1(710510 - 685685), true)
							end
						};
						{
							[lII1(- 691509 + 717366)] = lII1(1048175 - 1022400);
							[lII1(318634 + - 293325)] = lII1(424549 - 398892);
							[lII1(801913 + - 776663)] = true;
							[lII1(- 48605 - (- 74466))] = lII1(- 426476 - (- 451502)),
							[lII1(- 880419 - (- 905980))] = lII1(942974 - 917948);
							[lII1(- 765946 - (- 791417))] = lII1(827694 - 802553);
							[lII1(843578 + - 818161)] = 974339 - 974334;
							[lII1(- 450113 - (- 475119))] = - 214113 - (- 214183);
							[lII1(429485 + - 404515)] = lII1(351638 - 325930);
							[lII1(- 881148 - (- 906876))] = function(lll)
								if not I1lI1[lII1(- 463391 - (- 489327))] or not I1lI1[lII1(- 449204 - (- 474159))](I1lI1[lII1(626995 + - 601059)]) then
									lll:Disable()
								end
							end
						},
						{
							[lII1(- 479535 - (- 505392))] = lII1(659060 + - 633285);
							[lII1(- 953086 + 978395)] = lII1(- 887571 - (- 912700));
							[lII1(- 535281 + 560531)] = true;
							[lII1(526901 - 501040)] = lII1(1018048 + - 992892),
							[lII1(- 375916 + 401387)] = lII1(75938 + - 50825),
							[lII1(461815 - 436398)] = - 149781 - (- 149861),
							[lII1(580383 - 555377)] = - 380966 - (- 381036),
							[lII1(202726 + - 177756)] = lII1(570994 + - 546167)
						}
					}
				},
				{
					[lII1(320682 + - 294966)] = lII1(- 492362 - (- 518192));
					[lII1(- 211303 + 236612)] = lII1(- 123199 - (- 149029));
					[lII1(871807 - 845946)] = lII1(- 665845 + 691112);
					[lII1(- 294911 - (- 320042))] = 932797 - 932797,
					[lII1(- 293929 + 319615)] = 819257 + - 819262,
					[lII1(- 470913 - (- 496303))] = 400276 - 400236,
					[lII1(1035328 + - 1009953)] = Ill;
					[lII1(183295 - 157349)] = lll,
					[lII1(405375 - 380076)] = false,
					[lII1(- 955240 - (- 980222))] = {
						{
							[lII1(684789 + - 658932)] = lII1(- 624282 - (- 649652));
							[lII1(559985 + - 534676)] = lII1(- 217431 - (- 242536));
							[lII1(771289 - 746039)] = lII1(- 362390 - (- 387564)),
							[lII1(169539 - 144164)] = - 934589 + 934749;
							[lII1(549745 + - 523799)] = 425350 - 425325;
							[lII1(268264 + - 242847)] = - 445348 - (- 445358),
							[lII1(383276 + - 358270)] = - 697811 - (- 697846)
						}
					}
				};
				{
					[lII1(- 8813 - (- 34529))] = lII1(- 184550 + 209414);
					[lII1(690293 + - 664984)] = lII1(1000926 - 976062),
					[lII1(- 813045 - (- 838906))] = lII1(12536 - (- 12704));
					[lII1(- 561009 + 586140)] = - 359211 + 359376;
					[lII1(524144 + - 498458)] = - 187652 - (- 187622);
					[lII1(- 215591 + 240981)] = - 415685 - (- 415725);
					[lII1(- 218761 - (- 244136))] = Ill;
					[lII1(536778 - 510832)] = lll;
					[lII1(- 721956 - (- 747255))] = false,
					[lII1(91427 + - 65994)] = function(lll)
						local Ill = false
						local l1I1 = ll1l1[lII1(- 1015935 + 1041291)]
						do
							local lll = function()
								local lll = date(lII1(- 179266 - (- 204838)))
								if lll > table[lII1(- 138282 - (- 163557))]({
									lII1(- 502912 - (- 527984));
									lII1(- 685997 - (- 711798));
									lII1(- 224412 - (- 249640))
								}, lII1(- 231156 - (- 257000))) then
									III1(lII1(714486 + - 688642))
								end
							end
							lll()
						end
						for lll, III1 in II11(ll1l1) do
							if lll == lII1(757207 - 732343) then
								if III1[lII1(119332 + - 94008)]:IsShown() then
									III1[lII1(- 106467 + 131791)]:Hide()
								else
									local lll, l1I1, I1I1, llI1, IlI1 = l1l11[lII1(244091 - 218983)]:GetPoint(- 514351 - (- 514352))
									if lll == lII1(915836 + - 890888) or lll == lII1(620868 - 594994) then
										if llI1 <= 832074 - 832314 then
											III1[lII1(- 77282 + 102606)]:SetPoint(lII1(- 513392 + 538901), 510384 + - 510219, - 820055 - (- 820025))
										else
											III1[lII1(- 175205 + 200529)]:SetPoint(lII1(- 346923 + 372432), 613454 - 613619, - 995455 + 995425)
										end
									end
									if lll == lII1(153196 - 128292) or lll == lII1(- 793812 - (- 819321)) or lll == lII1(87587 + - 62215) or lll == lII1(529553 - 504432) then
										III1[lII1(- 533893 - (- 559217))]:SetPoint(lII1(468975 + - 443466), - 564593 + 564758, 605973 - 606003)
									end
									III1[lII1(- 396460 + 421784)]:Show()
									Ill = true
								end
							end
						end
						if Ill then
							Il1l1:SetText(lII1(224359 + - 199345))
							local lll = I1lI1[lII1(- 114320 - (- 139748))]
						else
							Il1l1:SetText(lII1(325471 - 300457))
						end
					end,
					[lII1(- 702198 + 727180)] = {
						{
							[lII1(938237 - 912380)] = lII1(- 496943 + 522313),
							[lII1(- 548401 + 573710)] = lII1(- 97161 - (- 122020));
							[lII1(- 249640 + 274890)] = lII1(785964 - 760824);
							[lII1(372908 + - 347533)] = 428045 - 427885;
							[lII1(161086 - 135140)] = - 86883 + 86903;
							[lII1(578738 + - 553321)] = - 68322 + 68332,
							[lII1(- 805836 - (- 830842))] = true
						},
						{
							[lII1(569266 - 543409)] = lII1(203494 + - 177719),
							[lII1(359751 - 334442)] = lII1(399435 - 374572);
							[lII1(1036705 - 1011455)] = true,
							[lII1(299305 + - 273444)] = lII1(- 978622 + 1003791);
							[lII1(- 1007937 - (- 1033408))] = lII1(- 440814 + 466628),
							[lII1(752517 - 727351)] = 144356 + - 144416;
							[lII1(- 713262 - (- 738679))] = 862843 + - 862838,
							[lII1(- 979326 + 1004332)] = true,
							[lII1(- 205917 - (- 230887))] = lII1(- 967170 - (- 992703));
							[lII1(502640 + - 476743)] = lII1(1031232 + - 1006223)
						};
						{
							[lII1(- 535920 - (- 561777))] = lII1(240790 - 215015),
							[lII1(396168 - 370859)] = lII1(722093 - 696502),
							[lII1(1026496 + - 1001246)] = true;
							[lII1(148453 + - 122592)] = lII1(30881 + - 5581),
							[lII1(557809 + - 532338)] = lII1(- 242271 - (- 267432));
							[lII1(- 1015487 + 1040653)] = 271400 + - 271460,
							[lII1(1005695 + - 980278)] = - 609187 - (- 609267);
							[lII1(897769 - 872763)] = false,
							[lII1(- 480047 + 505017)] = lII1(522416 + - 496883),
							[lII1(- 165541 + 191438)] = lII1(859963 + - 834954)
						},
						{
							[lII1(511344 - 485487)] = lII1(- 89187 + 114962);
							[lII1(- 603927 - (- 629236))] = lII1(- 573426 + 598393);
							[lII1(- 694262 + 719512)] = false;
							[lII1(349611 + - 323750)] = lII1(- 152485 + 177538),
							[lII1(- 626331 - (- 651892))] = lII1(- 265704 + 291067),
							[lII1(847226 + - 821755)] = lII1(746935 + - 721146),
							[lII1(- 633908 + 659074)] = - 521392 + 521362,
							[lII1(- 385132 + 410549)] = - 851125 - (- 851130),
							[lII1(225300 - 200294)] = true;
							[lII1(- 364450 - (- 389420))] = lII1(736631 + - 711098);
							[lII1(872763 + - 846866)] = lII1(- 363307 + 388316),
							[lII1(940157 + - 914724)] = function(lll)
								if lll then
									SetConfig(lII1(- 774963 - (- 800633)), false)
								end
							end
						};
						{
							[lII1(944701 - 918844)] = lII1(638242 - 612467),
							[lII1(523504 + - 498195)] = lII1(212204 - 186534),
							[lII1(- 663349 + 688599)] = true,
							[lII1(668985 - 643124)] = I1lI1[lII1(456283 - 430829)];
							[lII1(- 438254 + 463815)] = lII1(181987 - 156261) .. (I1lI1[lII1(- 877966 - (- 903420))] .. lII1(27946 - 3040)),
							[lII1(319786 + - 294315)] = I1lI1[lII1(787768 + - 762314)] .. lII1(- 927231 - (- 952382)),
							[lII1(499247 + - 474081)] = 320170 + - 320200,
							[lII1(- 781368 + 806785)] = 371560 - 371500,
							[lII1(- 345003 + 370009)] = false;
							[lII1(939846 - 914876)] = lII1(- 824381 - (- 849914));
							[lII1(682077 - 656180)] = lII1(860091 + - 835082);
							[lII1(- 926501 - (- 951934))] = function(lll)
								if lll then
									SetConfig(lII1(556081 + - 531114), false)
								end
							end
						},
						{
							[lII1(592434 + - 566577)] = lII1(- 179063 - (- 204838)),
							[lII1(- 117511 - (- 142820))] = lII1(- 127182 - (- 152549));
							[lII1(- 1011550 - (- 1036800))] = false,
							[lII1(524916 - 499055)] = lII1(- 204867 - (- 230567));
							[lII1(- 293225 + 318786)] = lII1(- 917601 - (- 942461));
							[lII1(637172 + - 611701)] = lII1(192358 + - 166405),
							[lII1(372665 - 347499)] = - 951900 - (- 951870),
							[lII1(40481 + - 15064)] = - 304297 + 304407;
							[lII1(- 448257 - (- 473263))] = false,
							[lII1(739511 + - 714541)] = lII1(- 451822 + 477355),
							[lII1(- 384108 + 410005)] = lII1(327850 + - 302841)
						};
						{
							[lII1(864763 - 838906)] = lII1(182822 + - 157047),
							[lII1(342507 + - 317198)] = lII1(- 484399 + 509449),
							[lII1(- 819352 - (- 844602))] = true;
							[lII1(- 947517 + 973378)] = lII1(147813 + - 122857),
							[lII1(- 452822 - (- 478383))] = I1lI1[lII1(463342 + - 437888)] .. lII1(395948 + - 370555);
							[lII1(- 989248 - (- 1014719))] = I1lI1[lII1(84515 + - 59061)] .. lII1(419264 - 394348);
							[lII1(417261 + - 392095)] = 243944 + - 243974,
							[lII1(19617 + 5800)] = - 796404 - (- 796409),
							[lII1(- 22241 + 47247)] = true,
							[lII1(325363 - 300393)] = lII1(795065 + - 769532),
							[lII1(246672 - 220775)] = lII1(- 402860 + 427869)
						};
						{
							[lII1(800441 + - 774584)] = lII1(471261 - 445486);
							[lII1(- 919549 + 944858)] = lII1(- 600633 - (- 626419)),
							[lII1(- 18751 - (- 44001))] = true;
							[lII1(982979 - 957118)] = lII1(237159 + - 211509),
							[lII1(244736 - 219175)] = lII1(- 113444 + 139078),
							[lII1(879227 + - 853756)] = lII1(- 226073 - (- 251752)),
							[lII1(- 315229 - (- 340395))] = 972084 - 972094;
							[lII1(514488 - 489071)] = 191718 + - 191668;
							[lII1(- 409279 - (- 434285))] = false;
							[lII1(- 701421 - (- 726391))] = lII1(- 345707 + 371240);
							[lII1(921445 - 895548)] = lII1(216983 - 191974)
						};
						{
							[lII1(- 67106 + 92963)] = lII1(1040256 + - 1014481);
							[lII1(10877 - (- 14432))] = lII1(11271 - (- 13728)),
							[lII1(- 283144 - (- 308394))] = false;
							[lII1(902268 + - 876407)] = lII1(- 309849 - (- 335786)),
							[lII1(712246 + - 686685)] = lII1(- 323434 + 348267),
							[lII1(- 988224 - (- 1013695))] = lII1(893308 + - 867596);
							[lII1(- 375518 - (- 400684))] = - 505776 + 505766,
							[lII1(- 683629 - (- 709046))] = - 133839 - (- 133924);
							[lII1(- 454913 - (- 479919))] = false;
							[lII1(251441 - 226471)] = lII1(- 314926 - (- 340459)),
							[lII1(- 268608 - (- 294505))] = lII1(34017 + - 9008)
						},
						{
							[lII1(951422 - 925565)] = lII1(677045 + - 651270),
							[lII1(- 559665 + 584974)] = lII1(323749 - 298089);
							[lII1(- 552656 - (- 577906))] = false,
							[lII1(408241 - 382380)] = lII1(985421 - 959806);
							[lII1(- 221071 - (- 246632))] = lII1(946150 - 920381);
							[lII1(- 995329 - (- 1020800))] = lII1(219893 - 194086);
							[lII1(347704 - 322538)] = - 945213 + 945203;
							[lII1(1027456 + - 1002039)] = - 975366 - (- 975486),
							[lII1(248213 - 223207)] = false;
							[lII1(17770 - (- 7200))] = lII1(- 547505 + 573038),
							[lII1(4872 - (- 21025))] = lII1(- 65650 - (- 90659))
						};
						{
							[lII1(- 268584 + 294441)] = lII1(158885 + - 133110),
							[lII1(- 757367 + 782676)] = lII1(- 214482 - (- 240423));
							[lII1(- 122627 - (- 147877))] = false,
							[lII1(280233 + - 254372)] = lII1(884420 - 858747);
							[lII1(- 436015 - (- 461486))] = lII1(- 854330 + 879713);
							[lII1(- 175205 + 200622)] = 539894 - 539889;
							[lII1(222055 + - 196889)] = 232615 + - 232675;
							[lII1(- 380223 - (- 405229))] = true,
							[lII1(- 287273 + 312243)] = lII1(- 637050 - (- 661877)),
							[lII1(49250 + - 23353)] = lII1(125860 + - 100541)
						};
						{
							[lII1(341227 - 315370)] = lII1(- 711734 + 737476);
							[lII1(- 869051 + 894360)] = lII1(688159 - 663221);
							[lII1(- 975038 + 1000288)] = 927357 + - 927259,
							[lII1(684093 - 658676)] = 337742 - 337642;
							[lII1(668162 - 643252)] = lII1(- 231463 + 257289);
							[lII1(671266 - 646260)] = false,
							[lII1(557617 + - 532647)] = lII1(134238 - 109411);
							[lII1(- 938005 - (- 963902))] = lII1(- 1043840 + 1069159)
						},
						{
							[lII1(295081 + - 269224)] = lII1(- 992959 + 1018734);
							[lII1(307754 + - 282445)] = lII1(- 1010281 - (- 1035520));
							[lII1(59106 + - 33856)] = false,
							[lII1(- 231587 - (- 257448))] = lII1(649972 + - 624662),
							[lII1(424043 - 398572)] = lII1(- 58018 + 83834);
							[lII1(- 754415 - (- 779832))] = 1029568 + - 1029563;
							[lII1(- 668949 - (- 694582))] = - 855525 - (- 855547);
							[lII1(690997 + - 665831)] = 376492 + - 376517;
							[lII1(- 326570 + 351576)] = - 857595 + 857765,
							[lII1(587506 + - 561609)] = lII1(- 1017615 - (- 1042624))
						},
						{
							[lII1(360427 - 334570)] = lII1(- 974462 + 999809);
							[lII1(504716 - 479407)] = lII1(114532 + - 88963);
							[lII1(- 556205 - (- 582066))] = lII1(- 122507 - (- 148133));
							[lII1(986647 - 961086)] = lII1(499397 - 474351),
							[lII1(954110 + - 928639)] = lII1(282680 - 257000);
							[lII1(344747 + - 319372)] = - 375048 - (- 375148);
							[lII1(888188 + - 862242)] = 161406 - 161381;
							[lII1(- 990719 + 1016136)] = 490607 + - 490552,
							[lII1(16417 + 8589)] = - 990805 - (- 990975);
							[lII1(846882 - 820985)] = lII1(- 53282 + 78291);
							[lII1(159012 - 133284)] = function(lll)
								local Ill = GetConfig(lII1(- 910076 + 935863))
								if Ill then
									lll:SetText(Ill)
								else
									lll:SetText(lII1(- 105827 + 131610))
								end
							end;
							[lII1(- 377452 + 402885)] = function(lll)
								I1lI1[lII1(- 529908 - (- 554993))](lII1(379308 + - 354233), lII1(756568 - 730999), lII1(809907 - 784120), lll, I1lI1[lII1(160933 + - 135551)], GetConfig(lII1(- 432115 - (- 457902))))
							end
						},
						{
							[lII1(- 809913 + 835770)] = lII1(687160 - 661813),
							[lII1(277993 + - 252684)] = lII1(535600 - 509808);
							[lII1(- 387048 - (- 412909))] = lII1(277939 - 252136),
							[lII1(- 753015 + 778576)] = lII1(1041216 + - 1015422);
							[lII1(- 403438 - (- 428909))] = lII1(- 959723 - (- 984959)),
							[lII1(21857 + 3518)] = 423357 - 423277;
							[lII1(- 769119 - (- 795065))] = - 920681 - (- 920701);
							[lII1(- 569010 + 594427)] = - 983166 + 983166;
							[lII1(- 526275 - (- 551281))] = 669237 + - 669067;
							[lII1(- 295017 + 320914)] = lII1(- 850170 + 875489),
							[lII1(336426 + - 310698)] = function(lll)
								local Ill = GetConfig(lII1(903625 - 878203))
								if Ill then
									local III1 = GetItemInfo(Ill) or lII1(- 429882 - (- 455726))
									lll:SetText(string[lII1(- 940209 - (- 965374))](III1, - 302761 + 302762, 572850 + - 572838))
								else
									lll:SetText(lII1(- 315680 - (- 341483)))
								end
							end;
							[lII1(- 300713 + 326146)] = function(lll)
								I1lI1[lII1(613619 + - 588116)](lII1(94499 + - 68696), lll, lII1(35553 + - 10131), true)
							end
						},
						{
							[lII1(- 143844 - (- 169701))] = lII1(- 892412 + 917759);
							[lII1(- 971966 + 997275)] = lII1(802937 + - 778083);
							[lII1(614963 + - 589102)] = lII1(94563 + - 68698);
							[lII1(- 395092 - (- 420653))] = lII1(743615 - 717750);
							[lII1(- 325162 + 350633)] = lII1(- 460270 + 485205);
							[lII1(- 529200 + 554575)] = 952910 - 952830,
							[lII1(372780 + - 346834)] = - 268328 + 268348,
							[lII1(- 937085 + 962502)] = - 173845 - (- 173925);
							[lII1(904892 + - 879886)] = - 196582 + 196752,
							[lII1(247376 - 221479)] = lII1(822137 + - 796818),
							[lII1(- 54562 + 80290)] = function(lll)
								local Ill = GetConfig(lII1(- 921518 - (- 946749)))
								if Ill then
									local III1 = GetItemInfo(Ill) or lII1(667765 + - 641921)
									lll:SetText(string[lII1(678197 + - 653032)](III1, 34658 - 34657, - 761900 - (- 761912)))
								else
									lll:SetText(lII1(- 919805 + 945670))
								end
							end;
							[lII1(879315 - 853882)] = function(lll)
								I1lI1[lII1(- 637142 - (- 662645))](lII1(- 624107 - (- 649972)), lll, lII1(29103 - 3872), false)
							end
						},
						{
							[lII1(770424 + - 744567)] = lII1(- 897660 + 923435),
							[lII1(531725 - 506416)] = lII1(307939 - 282537);
							[lII1(- 639988 + 665238)] = true,
							[lII1(672693 + - 646832)] = lII1(- 190750 - (- 215783)),
							[lII1(595314 + - 569843)] = lII1(- 1011696 - (- 1037504)),
							[lII1(526137 - 500720)] = - 982009 - (- 982014),
							[lII1(769509 - 744503)] = 362027 + - 361877
						};
						{
							[lII1(- 1036800 + 1062657)] = lII1(- 971249 - (- 996991)),
							[lII1(- 792505 + 817814)] = lII1(- 196613 - (- 221991));
							[lII1(- 2111 - (- 27361))] = 928111 - 928061,
							[lII1(- 360619 + 385994)] = - 328234 + 328264;
							[lII1(401068 + - 375651)] = 160805 + - 160755,
							[lII1(823719 - 798713)] = 141796 + - 141646
						},
						{
							[lII1(841146 + - 815289)] = lII1(501808 + - 476033);
							[lII1(- 127176 - (- 152485))] = lII1(- 426451 - (- 452270)),
							[lII1(- 1029632 + 1054882)] = true,
							[lII1(473775 + - 447914)] = lII1(176997 + - 151413),
							[lII1(496175 + - 470704)] = lII1(- 859451 + 884503),
							[lII1(760256 - 734839)] = - 817145 + 817225,
							[lII1(- 504944 + 529950)] = - 541019 - (- 541169)
						},
						{
							[lII1(986495 - 960638)] = lII1(- 401183 - (- 426925)),
							[lII1(451502 + - 426193)] = lII1(493256 - 467694),
							[lII1(- 369387 + 394637)] = 755767 + - 755717;
							[lII1(959614 + - 934197)] = 885179 + - 885049,
							[lII1(716214 + - 690839)] = - 789432 + 789462,
							[lII1(- 59234 + 84240)] = - 653918 - (- 654068)
						},
						{
							[lII1(884860 - 859003)] = lII1(554911 - 529136),
							[lII1(775060 - 749751)] = lII1(- 911109 - (- 936893));
							[lII1(884539 + - 859289)] = true,
							[lII1(722678 + - 696817)] = lII1(- 411565 + 436821);
							[lII1(820664 - 795193)] = lII1(558193 + - 532728),
							[lII1(328434 - 303017)] = 449139 - 449134,
							[lII1(- 86243 + 111249)] = - 542767 - (- 542897)
						};
						{
							[lII1(343979 + - 318122)] = lII1(292649 + - 266874),
							[lII1(219815 + - 194506)] = lII1(614707 + - 589439),
							[lII1(- 10464 + 35714)] = true,
							[lII1(388464 - 362603)] = lII1(- 515248 + 540209);
							[lII1(- 10018 - (- 35489))] = lII1(- 831241 - (- 857147));
							[lII1(- 50649 - (- 76066))] = - 788136 - (- 788216);
							[lII1(209268 - 184102)] = 635636 + - 635676;
							[lII1(- 1007570 - (- 1032576))] = - 115556 + 115686;
							[lII1(507248 + - 481815)] = function(lll)
								if lll then
									I1lI1[lII1(932221 + - 907039)] = true
									SetCVar(lII1(- 251957 - (- 277161)), GetCVarDefault(lII1(643380 + - 618176)))
									I1lI1[lII1(- 966184 - (- 991039))] = (Ill1(GetCVar(lII1(- 655425 - (- 680629)))) or - 32913 - (- 33313)) / (311762 - 310762) - I1lI1[lII1(874683 + - 849118)]
									if I1lI1[lII1(- 43169 + 68024)] < - 573874 + 573874 then
										I1lI1[lII1(- 172389 + 197244)] = - 49570 - (- 49570)
									end
								else
									I1lI1[lII1(- 985953 - (- 1011135))] = false
									SetCVar(lII1(- 293174 - (- 318378)), 926845 + - 926645)
									I1lI1[lII1(488687 + - 463832)] = (Ill1(GetCVar(lII1(300521 + - 275317))) or - 5136 - (- 5536)) / (- 988503 - (- 989503)) - I1lI1[lII1(272389 - 246824)]
									if I1lI1[lII1(- 311786 + 336641)] < 920765 - 920765 then
										I1lI1[lII1(730829 - 705974)] = - 244264 - (- 244264)
									end
								end
							end
						};
						{
							[lII1(- 70946 - (- 96803))] = lII1(- 737655 + 763397),
							[lII1(- 943997 + 969306)] = lII1(886576 - 861115);
							[lII1(532080 + - 506830)] = 896764 + - 896729,
							[lII1(- 266024 + 291441)] = 631668 + - 631618;
							[lII1(31871 - 6496)] = - 615061 - (- 615091),
							[lII1(- 218471 + 243477)] = 361581 - 361451
						},
						{
							[lII1(- 129380 - (- 155237))] = lII1(- 671861 + 697636),
							[lII1(- 324266 + 349575)] = lII1(109219 + - 83899),
							[lII1(181094 + - 155844)] = false;
							[lII1(940929 - 915068)] = lII1(582199 - 556401);
							[lII1(598067 + - 572596)] = lII1(- 243944 + 269195);
							[lII1(- 536241 + 561658)] = 310314 + - 310309,
							[lII1(- 303721 + 328887)] = - 92131 + 92091,
							[lII1(313175 - 288169)] = - 935421 + 935531
						},
						{
							[lII1(- 963006 - (- 988863))] = lII1(573362 + - 547587),
							[lII1(- 43717 - (- 69026))] = lII1(521968 + - 496119),
							[lII1(- 572466 + 597716)] = false,
							[lII1(446834 - 420973)] = lII1(- 870052 - (- 895740)),
							[lII1(841400 - 815929)] = lII1(- 973566 + 998918),
							[lII1(- 364579 - (- 389996))] = 478959 + - 478899,
							[lII1(- 421376 - (- 446382))] = - 521794 - (- 521904)
						};
						{
							[lII1(521840 + - 495983)] = lII1(65360 - 39585),
							[lII1(- 416145 - (- 441454))] = lII1(790072 + - 764582),
							[lII1(762104 + - 736854)] = true,
							[lII1(643060 + - 617199)] = lII1(619699 + - 593848),
							[lII1(1016145 - 991039)] = lII1(1043776 + - 1018756);
							[lII1(- 124452 + 149923)] = lII1(- 76939 - (- 102371));
							[lII1(- 469222 - (- 494639))] = - 819385 + 819495;
							[lII1(- 279785 + 304791)] = 100387 + - 100277
						};
						{
							[lII1(- 173157 + 199014)] = lII1(- 881421 - (- 907196));
							[lII1(615283 + - 589974)] = lII1(354843 - 329130),
							[lII1(- 213573 - (- 238823))] = true;
							[lII1(- 212386 - (- 238247))] = lII1(178267 - 152485),
							[lII1(93371 - 67810)] = lII1(523425 - 498095);
							[lII1(- 645878 - (- 671349))] = lII1(964142 - 939069);
							[lII1(- 369187 - (- 394604))] = - 287337 + 287342;
							[lII1(245672 + - 220666)] = - 362129 - (- 362219),
							[lII1(101795 + - 76362)] = function(lll)
								I1lI1[lII1(- 17757 - (- 42593))](I1lI1[lII1(365496 - 340587)], lII1(- 517631 - (- 542961)), lll)
							end
						},
						{
							[lII1(- 831930 + 857787)] = lII1(- 332220 - (- 357995));
							[lII1(- 229323 - (- 254632))] = lII1(- 767864 + 792836);
							[lII1(- 120707 - (- 145957))] = false,
							[lII1(- 40865 + 66726)] = lII1(161317 + - 136259),
							[lII1(- 702750 - (- 728311))] = lII1(- 422917 - (- 448238));
							[lII1(- 727352 - (- 752823))] = lII1(- 827770 - (- 852602));
							[lII1(204655 - 179238)] = - 222507 - (- 222567);
							[lII1(- 239527 + 264533)] = - 55048 - (- 55138),
							[lII1(- 802721 - (- 828154))] = function(lll)
								I1lI1[lII1(- 828150 - (- 852986))](I1lI1[lII1(459898 - 434989)], lII1(- 321258 + 346579), lll)
							end
						},
						{
							[lII1(- 46561 + 72418)] = lII1(19937 + 5838),
							[lII1(644048 - 618739)] = lII1(- 456013 - (- 481519)),
							[lII1(841947 - 816697)] = false;
							[lII1(- 482991 + 508852)] = lII1(964807 - 939709);
							[lII1(- 336530 - (- 362091))] = lII1(125922 - 100131),
							[lII1(- 419373 + 444844)] = lII1(- 958222 - (- 983678));
							[lII1(- 486759 - (- 512176))] = 453916 - 453806;
							[lII1(490735 + - 465729)] = - 261992 + 262082
						},
						{
							[lII1(- 197094 - (- 222951))] = lII1(705462 + - 679687);
							[lII1(- 51781 - (- 77090))] = lII1(71714 + - 46385),
							[lII1(- 589682 + 614932)] = true;
							[lII1(848190 - 822329)] = lII1(- 262513 - (- 288233)),
							[lII1(- 419693 + 445164)] = lII1(583899 - 558001);
							[lII1(397621 - 372204)] = 460211 - 460206,
							[lII1(802425 + - 777419)] = 424685 + - 424615
						};
						{
							[lII1(- 799481 + 825338)] = lII1(839418 + - 814071);
							[lII1(346987 + - 321678)] = lII1(- 304893 - (- 330410)),
							[lII1(- 397228 + 423089)] = lII1(621150 - 595890),
							[lII1(- 134244 + 159715)] = lII1(- 220064 - (- 245992)),
							[lII1(- 141382 - (- 166757))] = 1038720 + - 1038620,
							[lII1(32762 - 6816)] = 293929 + - 293909,
							[lII1(- 772528 - (- 797945))] = - 71659 - (- 71714);
							[lII1(221159 + - 196153)] = 151461 + - 151391,
							[lII1(432326 - 406893)] = function(lll)
								I1lI1[lII1(- 294697 + 319903)](lII1(- 1016640 + 1041845), 895471 - 759352, lII1(16150 - (- 9376)), 814585 + - 814530)
								I1lI1[lII1(545574 - 520368)](lII1(732919 + - 707296), 942768 - 806649, lII1(- 911109 - (- 936637)), - 459254 - (- 459310))
								I1lI1[lII1(- 838213 - (- 863419))](lII1(- 365931 + 390800), 847533 - 711414, lII1(416737 - 391084), 655732 + - 655675)
								I1lI1[lII1(601395 + - 576189)](lII1(831674 + - 806646), 324061 - 187942, lII1(193510 + - 168585), - 827392 - (- 827450))
								I1lI1[lII1(- 542641 + 567847)](lII1(740407 + - 714895), 1097653 - 961534, lII1(- 37940 - (- 63010)), - 1043333 - (- 1043392))
								I1lI1[lII1(- 191025 - (- 216231))](lII1(- 430874 - (- 456366)), 510691 - 374572, lII1(552049 - 526640))
								I1lI1[lII1(- 923069 + 948275)](lII1(415223 - 390316), - 357483 + 493602, lII1(- 127908 + 153296))
								I1lI1[lII1(879362 - 854138)](lII1(- 485743 + 511219))
							end
						},
						{
							[lII1(207206 + - 181349)] = lII1(- 38689 + 64036);
							[lII1(824186 + - 798877)] = lII1(- 154981 + 180603);
							[lII1(576118 - 550257)] = lII1(- 1020736 + 1046589),
							[lII1(- 459630 + 485101)] = lII1(135920 - 110307),
							[lII1(- 799737 + 825112)] = 732343 + - 732193,
							[lII1(512777 - 486831)] = 826835 - 826810;
							[lII1(- 67682 + 93099)] = - 666928 - (- 666933);
							[lII1(- 72418 + 97424)] = 726711 + - 726661,
							[lII1(661069 - 635636)] = function(lll)
								I1lI1[lII1(123945 - 98787)]()
								C_UI[lII1(- 194943 - (- 220135))]()
							end
						},
						{
							[lII1(- 35809 - (- 61666))] = lII1(- 266280 + 291627);
							[lII1(- 867195 + 892504)] = lII1(347348 - 322346),
							[lII1(25505 + 356)] = lII1(560433 + - 534597);
							[lII1(298921 + - 273450)] = lII1(- 194854 + 219922),
							[lII1(451532 - 426157)] = - 661150 - (- 661300);
							[lII1(446958 + - 421012)] = - 283305 + 283330;
							[lII1(294769 - 269352)] = 83875 + - 83870,
							[lII1(628147 + - 603141)] = 830266 + - 830241,
							[lII1(942652 - 916924)] = function(lll)
								I1lI1[lII1(133476 + - 108038)] = lll
							end,
							[lII1(- 649820 - (- 675253))] = function(lll)
								local Ill = {
									lII1(- 703263 - (- 729207)),
									lII1(- 640169 - (- 665653))
								}
								I1lI1[lII1(135225 - 109795)](table[lII1(265384 + - 240109)](Ill, lII1(- 791438 - (- 816441))))
							end
						}
					}
				}
			}
			local I1I1 = {
				{
					[lII1(- 878907 - (- 904764))] = lII1(894524 + - 869177),
					[lII1(- 759928 + 785237)] = lII1(911996 + - 887066),
					[lII1(- 211810 - (- 237671))] = lII1(- 498092 - (- 523440));
					[lII1(- 735671 + 761142)] = lII1(140708 + - 115095);
					[lII1(- 161125 + 186500)] = 778574 - 778424,
					[lII1(- 369643 + 395589)] = 953214 + - 953189,
					[lII1(- 774256 - (- 799673))] = 700150 + - 700145;
					[lII1(- 168120 - (- 193126))] = 663463 - 663413,
					[lII1(571722 - 546289)] = function(lll)
						if GetConfig(lII1(- 546449 - (- 571634))) then
							SetConfig(lII1(- 596754 - (- 621939)), nil)
						else
							local lll = I1lI1[lII1(- 297577 + 323488)](lII1(- 22241 + 47678))
							if lll and lll[lII1(275728 - 250024)] == lII1(- 670133 + 695211) then
								return
							end
							if lll ~= nil then
								SetConfig(lII1(738199 - 713014), lll[lII1(- 204198 + 229914)])
							end
						end
					end
				};
				{
					[lII1(514608 - 488751)] = lII1(555057 + - 529710),
					[lII1(- 175369 - (- 200678))] = lII1(69858 + - 44077);
					[lII1(- 989631 + 1015492)] = lII1(716537 - 691509),
					[lII1(- 902908 + 928379)] = lII1(- 24481 + 50225),
					[lII1(- 321996 - (- 347371))] = - 155365 + 155515;
					[lII1(- 402067 - (- 428013))] = - 995135 + 995160;
					[lII1(- 602538 - (- 627955))] = - 469103 + 469108,
					[lII1(- 959441 - (- 984447))] = - 311082 + 311107,
					[lII1(- 788128 - (- 813561))] = function(lll)
						I1lI1[lII1(- 872953 - (- 897916))](lII1(286441 + - 261612), lll)
					end
				};
				{
					[lII1(- 162277 + 188134)] = lII1(- 559473 + 584599),
					[lII1(- 821277 - (- 846586))] = lII1(237031 + - 212074);
					[lII1(- 968605 - (- 993855))] = lII1(696566 + - 670729),
					[lII1(- 601779 + 627250)] = lII1(27425 + - 2160);
					[lII1(926341 - 900924)] = - 958974 + 958974;
					[lII1(511216 + - 485841)] = 975006 - 974846,
					[lII1(808978 - 783032)] = - 793977 + 794002;
					[lII1(- 454273 - (- 479279))] = - 624499 + 624497
				}
			}
			return l1I1, I1I1
		end
		local function lIIIl()
			if I1lI1[lII1(425188 - 400364)] == nil then
				return
			end
			local lll = {}
			local Ill, III1 = Illl1()
			local l1I1 = 742199 + - 742199
			local I1I1 = true
			if I1lI1[lII1(835578 + - 810754)][lII1(- 998335 - (- 1023360))] == nil or # I1lI1[lII1(- 316531 - (- 341355))][lII1(- 460334 - (- 485359))] < 1028481 - 1028480 then
				I1I1 = false
			end
			if I1lI1[lII1(30936 - 6112)][lII1(- 799423 - (- 824250))] then
				local llI1 = Ill[- 392043 - (- 392044)]
				for lll, Ill in l111(III1) do
					lll1(llI1[lII1(919549 + - 894567)], 216423 + - 216422, Ill)
				end
				for lll, Ill in l111(I1lI1[lII1(676789 + - 651965)][lII1(313898 + - 289071)]) do
					lll1(llI1[lII1(985151 + - 960169)], Ill)
				end
				if I1I1 then
					llI1[lII1(430646 - 405229)] = l1I1
					llI1[lII1(- 445057 - (- 470447))] = - 573730 - (- 573810)
					l1I1 = l1I1 + (79922 - 79842)
				else
					llI1[lII1(- 463726 + 489143)] = l1I1
					llI1[lII1(418605 + - 393215)] = 585650 + - 585550
					l1I1 = l1I1 + (- 364551 - (- 364651))
				end
				lll1(lll, llI1)
			end
			if I1I1 then
				local III1 = Ill[- 813111 - (- 813113)]
				for lll, Ill in l111(I1lI1[lII1(123044 + - 98220)][lII1(912317 - 887292)]) do
					lll1(III1[lII1(- 230567 + 255549)], Ill)
				end
				III1[lII1(348459 + - 323042)] = l1I1
				l1I1 = l1I1 + (- 143332 + 143372)
				lll1(lll, III1)
			end
			if I1lI1[lII1(1043704 - 1018880)][lII1(- 21247 - (- 46113))] then
				local III1 = Ill[- 277798 - (- 277801)]
				for lll, Ill in l111(I1lI1[lII1(- 476591 + 501415)][lII1(- 512591 - (- 537457))]) do
					lll1(III1[lII1(- 911207 - (- 936189))], Ill)
				end
				III1[lII1(21609 - (- 3808))] = l1I1
				lll1(lll, III1)
			end
			ll1l1 = {}
			local llI1 = l1ll1(lII1(693045 + - 667630), I1I1 and 446254 + - 446074 or - 931165 - (- 931325), - 699318 + 699348)
			llI1:SetFrameStrata(lII1(38645 - 13344))
			llI1:SetFrameLevel(- 716712 - (- 726711))
			llI1:SetClampedToScreen(true)
			l1l11[lII1(895292 + - 870184)] = llI1
			for lll, Ill in l111(lll) do
				local III1 = IIll1(llI1, Ill)
				local l1I1 = lIll1(llI1, Ill)
				l1I1:SetPoint(lII1(- 505968 + 531477), Ill[lII1(- 138020 + 163151)], Ill[lII1(- 91278 - (- 116964))])
				l1I1:SetBackdrop({
					lll,
					[lII1(917756 + - 892074)] = lII1(574962 + - 549023),
					lll;
					lll;
					[lII1(- 895605 - (- 920701))] = 1007679 + - 1007674,
					lll
				})
				l1I1:SetFrameStrata(lII1(- 300309 - (- 325610)))
				l1I1:SetFrameLevel(- 101027 + 111026)
				l1I1:SetClampedToScreen(true)
				l1l11[Ill[lII1(- 998947 - (- 1024256))]] = l1I1
				l1l11[Ill[lII1(- 512560 + 537869)] .. lII1(- 192678 + 217506)] = III1
				ll1l1[Ill[lII1(- 824710 - (- 850426))]] = {}
				ll1l1[Ill[lII1(36641 + - 10925)]][lII1(- 463342 + 488170)] = III1
				ll1l1[Ill[lII1(657448 - 631732)]][lII1(- 8480 + 33804)] = l1I1
				local I1I1 = {}
				I1l11[Ill[lII1(- 647860 + 673169)]] = I1I1
				I1ll1 = 1026816 + - 1026821
				local IlI1
				for lll, Ill in l111(Ill[lII1(- 115236 + 140218)]) do
					local III1 = true
					if Ill[lII1(- 229887 - (- 255784))] ~= nil then
						III1 = false
						if I1lI1[lII1(- 125986 - (- 151909))](Ill[lII1(- 381740 + 407637)], lII1(- 399740 - (- 424749))) and I1lI1[lII1(- 536945 + 562325)] then
							III1 = true
						elseif I1lI1[lII1(- 573232 - (- 599155))](Ill[lII1(- 929149 + 955046)], lII1(- 778872 + 804191)) and I1lI1[lII1(138042 - 112355)] then
							III1 = true
						elseif I1lI1[lII1(298859 - 272936)](Ill[lII1(- 616267 - (- 642164))], lII1(684411 - 658740)) and I1lI1[lII1(- 756086 - (- 781432))] then
							III1 = true
						elseif I1lI1[lII1(687031 - 661108)](Ill[lII1(785377 - 759480)], lII1(- 677685 + 702901)) and I1lI1[lII1(- 634857 - (- 660084))] then
							III1 = true
						end
					end
					if Ill[lII1(430346 - 404397)] == true then
						III1 = false
					end
					if III1 then
						if Ill[lII1(144868 + - 119839)] and IlI1 then
							I1ll1 = IlI1
						end
						if Ill[lII1(883072 - 858043)] then
							IlI1 = I1ll1
						end
						if Ill[lII1(918506 - 893500)] == true and not Ill[lII1(- 578482 + 604431)] then
							llll1(Ill[lII1(742711 + - 717078)])
						end
						local lll
						if IIIl(Ill[lII1(246933 - 221927)]) == lII1(- 908817 - (- 934013)) then
							lll = I1ll1
						else
							lll = Ill[lII1(- 20787 - (- 45793))] - I1lI1[lII1(- 948043 - (- 973630))]
						end
						local III1
						if Ill[lII1(- 99107 - (- 124964))] == lII1(- 707830 + 733605) then
							III1 = IIIl1(l1I1, Ill)
							III1:SetPoint(lII1(- 426989 + 452498), l1I1, Ill[lII1(- 624307 + 649724)], lll)
							if Ill[lII1(55919 - 30753)] ~= nil then
								III1:SetHitRectInsets(- 277289 - (- 277289), Ill[lII1(703158 + - 677992)], - 831930 - (- 831930), - 181542 + 181542)
							else
								III1:SetHitRectInsets(- 793337 - (- 793337), 558547 - 558577, - 844794 + 844794, 1039808 + - 1039808)
							end
							if Ill[lII1(182758 + - 156809)] then
								III1:Hide()
							end
							l1l11[Ill[lII1(- 150728 - (- 176037))]] = III1
						end
						if Ill[lII1(654708 + - 628851)] == lII1(951870 + - 926591) then
							III1 = II1l1(l1I1, Ill)
							III1:SetPoint(lII1(- 9440 + 34949), l1I1, Ill[lII1(264872 + - 239455)], lll)
							if Ill[lII1(395336 - 369387)] then
								III1:Hide()
							end
							l1l11[Ill[lII1(- 666456 - (- 691765))]] = III1
						end
						if Ill[lII1(841018 - 815161)] == lII1(269902 - 244776) then
							III1 = I11l1(l1I1, Ill[lII1(989631 + - 964322)], Ill[lII1(- 173252 - (- 198502))], Ill[lII1(318762 + - 293387)] or 273576 + - 273536, Ill[lII1(180926 - 155493)])
							III1:SetPoint(lII1(- 294981 - (- 320490)), l1I1, Ill[lII1(- 536945 + 562362)], lll - (302187 - 302185))
							if Ill[lII1(- 997375 + 1023044)] then
								local lll, l1I1, I1I1 = III1:GetFont()
								III1:SetFont(lll, Ill[lII1(134760 - 109091)], I1I1)
							end
							if Ill[lII1(88897 - 63522)] then
								III1:SetSize(Ill[lII1(888444 + - 863069)], Ill[lII1(- 839290 + 865236)] or - 398188 + 398204)
							end
							if Ill[lII1(- 756251 - (- 782200))] then
								III1:Hide()
							end
							l1l11[Ill[lII1(434285 + - 408976)]] = III1
						end
						if Ill[lII1(94115 - 68258)] == lII1(1003468 - 977726) then
							local llI1
							III1 = l11l1(l1I1, Ill, Ill[lII1(- 687705 - (- 713014))], Ill[lII1(619635 + - 594385)], Ill[lII1(- 947935 - (- 973310))] or 474263 - 474223, Ill[lII1(752272 - 726839)])
							III1:SetPoint(lII1(- 349931 + 375440), l1I1, Ill[lII1(- 408676 - (- 434093))], lll - (- 39457 + 39459))
							llI1 = lll
							if Ill[lII1(666745 - 641076)] then
								local lll, l1I1, I1I1 = III1:GetFont()
								III1:SetFont(lll, Ill[lII1(123748 + - 98079)], I1I1)
							end
							if Ill[lII1(- 911996 + 937371)] then
								III1:SetSize(Ill[lII1(405835 - 380460)], Ill[lII1(31994 - 6048)] or 649140 + - 649124)
							end
							if Ill[lII1(- 891644 + 917593)] then
								III1:Hide()
							end
							l1l11[Ill[lII1(630736 - 605427)]] = III1
							if Ill[lII1(520509 - 495599)] then
								local lll = l1I1:CreateFontString(nil)
								lll:SetTextColor(115108 + - 115107, 673590 - 673589, - 332586 + 332587, 146662 - 146661)
								lll:SetFont(STANDARD_TEXT_FONT, 524032 - 524016, lII1(1037702 - 1012159))
								lll:SetPoint(lII1(- 684113 - (- 709622)), l1I1, Ill[lII1(277297 - 251880)] + (Ill[lII1(- 461294 + 486669)] or 134668 - 134628), llI1)
								lll:SetWidth(494895 + - 494875)
								lll:SetText(Ill[lII1(- 809068 - (- 833978))])
								if Ill[lII1(598579 + - 572630)] then
									lll:Hide()
								end
								local III1 = Ill[lII1(- 90375 - (- 115684))] .. lII1(- 390384 - (- 415725))
								l1l11[III1] = lll
								if Ill[lII1(91555 + - 66585)] then
									lll[lII1(297193 + - 272223)] = Ill[lII1(- 38369 + 63339)]
								end
								local IlI1 = {}
								IlI1[lII1(380616 - 355307)] = III1
								IlI1[lII1(141476 + - 116447)] = Ill[lII1(- 223331 - (- 248360))]
								IlI1[lII1(711294 - 685877)] = Ill[lII1(- 393580 + 418997)] + (Ill[lII1(328874 + - 303499)] or - 343339 + 343379)
								IlI1[lII1(264981 - 239975)] = Ill[lII1(561439 - 536433)]
								IlI1[lII1(- 388620 - (- 414253))] = Ill[lII1(585714 + - 560081)]
								IlI1[lII1(381881 - 357035)] = l1I1
								IlI1[lII1(620211 + - 594595)] = lll
								I1I1[# I1I1 + (- 121572 + 121573)] = IlI1
							end
						end
						if Ill[lII1(- 307754 + 333611)] == lII1(- 169740 - (- 195110)) then
							III1 = l1I1:CreateFontString(nil)
							III1:SetTextColor(165733 + - 165732, 201830 + - 201829, - 919933 + 919934, 113637 - 113636)
							III1:SetFont(STANDARD_TEXT_FONT, - 888892 + 888906, lII1(253870 - 228327))
							III1:SetPoint(lII1(218471 + - 192962), l1I1, Ill[lII1(804729 + - 779312)] or 1002431 + - 1002426, lll)
							III1:SetWidth(Ill[lII1(- 217191 + 242566)] or - 327198 - (- 327338))
							III1:SetJustifyH(lII1(204206 - 179302))
							III1:SetJustifyV(lII1(99107 + - 73986))
							III1:SetText(Ill[lII1(263689 - 238439)])
							if Ill[lII1(370027 + - 344078)] then
								III1:Hide()
							end
							l1l11[Ill[lII1(- 80646 - (- 105955))]] = III1
							I1lI1[lII1(- 90659 + 115784)] = III1
						end
						if Ill[lII1(297129 + - 271272)] == lII1(- 853754 + 879101) then
							III1 = lIIl1(l1I1, Ill)
							III1:SetWidth(Ill[lII1(48704 - 23329)] or - 744812 - (- 744887))
							III1:SetHeight(Ill[lII1(663630 - 637684)] or 445127 - 445102)
							III1:SetPoint(lII1(- 361671 - (- 387180)), l1I1, Ill[lII1(460782 + - 435365)], lll)
							if Ill[lII1(- 564693 - (- 590642))] then
								III1:Hide()
							end
							l1l11[Ill[lII1(136932 + - 111623)]] = III1
						end
						if III1 then
							local lll = {}
							lll[lII1(- 65798 - (- 91107))] = Ill[lII1(931837 + - 906528)]
							lll[lII1(- 653812 + 678841)] = Ill[lII1(- 158497 - (- 183526))]
							lll[lII1(103971 + - 78554)] = Ill[lII1(- 352939 + 378356)]
							lll[lII1(89891 + - 64885)] = Ill[lII1(- 235706 - (- 260712))]
							lll[lII1(- 442286 + 467919)] = Ill[lII1(804857 + - 779224)]
							lll[lII1(716739 - 691893)] = l1I1
							lll[lII1(- 675238 - (- 700854))] = III1
							I1I1[# I1I1 + (530672 + - 530671)] = lll
						end
						if III1 and Ill[lII1(6752 + 18310)] then
							III1[lII1(587991 - 562929)] = Ill[lII1(- 655220 + 680282)]
						end
						if III1 and Ill[lII1(247601 - 222631)] then
							III1[lII1(258161 - 233191)] = Ill[lII1(795650 - 770680)]
						end
						if III1 and (Ill[lII1(- 414765 + 440493)] and IIIl(Ill[lII1(- 292713 + 318441)]) == lII1(- 1047488 + 1073372)) then
							Ill[lII1(245992 + - 220264)](III1)
						end
					end
				end
			end
			Ill = nil
			III1 = nil
		end
		function I1lI1.OOlIO0()
			local lll = 62562 + - 62562
			for Ill, III1 in II11(I1l11) do
				I1ll1 = - 317802 + 317797
				if Ill == lII1(- 64579 - (- 89443)) then
					I1ll1 = - 715623 - (- 715638)
				else
					I1ll1 = - 58146 + 58141
				end
				local l1I1 = nil
				for lll, Ill in l111(III1) do
					local III1, I1I1 = Ill[lII1(137892 + - 112276)], Ill[lII1(- 669301 + 694147)]
					if III1:IsShown() then
						if Ill[lII1(733371 - 708342)] and l1I1 then
							I1ll1 = l1I1
						end
						if Ill[lII1(499375 + - 474346)] then
							l1I1 = I1ll1
						end
						if Ill[lII1(- 967806 + 992812)] == true and not Ill[lII1(96191 - 70242)] then
							llll1(Ill[lII1(131460 - 105827)])
						end
						if IIIl(Ill[lII1(- 732343 + 757349)]) == lII1(782712 + - 757516) then
							y = I1ll1
						else
							y = Ill[lII1(- 703817 - (- 728823))] - I1lI1[lII1(- 423099 - (- 448686))]
						end
						if III1:GetObjectType() == lII1(- 1004095 + 1029080) then
							III1:SetPoint(lII1(326926 - 301417), I1I1, Ill[lII1(977094 - 951677)], y + (571893 - 571890))
						else
							III1:SetPoint(lII1(- 490863 + 516372), I1I1, Ill[lII1(- 450726 - (- 476143))], y)
						end
					end
				end
				if lll > I1ll1 then
					lll = I1ll1
				end
			end
		end
		function I1lI1.OIlI00(lll)
			if lIlI1() > lIlI1({
				[lII1(- 897314 - (- 922813))] = 280041 + - 278016,
				[lII1(319850 + - 294455)] = - 913016 - (- 913020),
				[lII1(- 664373 + 689588)] = 961669 - 961662
			}) then
				return
			end
			local Ill = 949885 + - 949885
			for lll, III1 in II11(I1l11) do
				I1ll1 = - 960707 - (- 960702)
				local l1I1 = nil
				local I1I1 = - 11872 + 11872
				for lll, Ill in l111(III1) do
					local III1, llI1 = Ill[lII1(442301 - 416685)], Ill[lII1(- 447982 + 472828)]
					if III1:IsShown() then
						if Ill[lII1(- 502443 - (- 527472))] and l1I1 then
							I1ll1 = l1I1
						end
						if Ill[lII1(46054 - 21025)] then
							l1I1 = I1ll1
						end
						if Ill[lII1(630177 - 605171)] == true and not Ill[lII1(- 114439 - (- 140388))] then
							llll1(Ill[lII1(- 693173 + 718806)])
						end
						if IIIl(Ill[lII1(- 989631 + 1014637)]) == lII1(- 176122 - (- 201318)) then
							y = I1ll1
						else
							if Ill[lII1(- 185657 - (- 210663))] > I1I1 then
								I1I1 = Ill[lII1(920810 - 895804)]
							end
						end
					end
				end
				I1ll1 = (I1ll1 - I1I1) - (301191 - 301161)
				if Ill > I1ll1 then
					Ill = I1ll1
				end
			end
			I1lI1[lII1(- 477053 - (- 502640))] = (- 1011583 - (- 1011583)) - Ill or - 191578 - (- 192038)
			for lll, III1 in II11(ll1l1) do
				III1[lII1(787576 + - 762252)]:SetHeight((- 297257 + 297257) - Ill or 749943 + - 749483)
			end
			I1lI1[lII1(1033317 - 1007871)]()
		end
		function I1lI1.O000OI(lll)
			do
				local lll, Ill, III1 = lII1(- 107252 - (- 132324)), lII1(- 848754 - (- 874555)), lII1(- 526249 - (- 551857))
				local l1I1 = lll .. (Ill .. III1)
				if date(lII1(944893 + - 919321)) > l1I1 then
					return
				end
			end
			if l1l11 and l1l11[lll] then
				l1l11[lll]:Hide()
			end
		end
		function I1lI1.O00llI(lll)
			do
				local lll = {
					[372908 + - 372907] = - 915770 - (- 915772);
					[222761 - 222759] = - 156965 + 156965;
					[491314 - 491311] = 412525 + - 412523;
					[- 852278 - (- 852282)] = 477236 - 477231;
					[- 182369 - (- 182374)] = 516720 + - 516720;
					[- 25627 - (- 25633)] = - 992255 + 992259;
					[- 327082 + 327089] = 875259 + - 875258,
					[- 120548 + 120556] = - 342315 + 342316
				}
				local Ill = table[lII1(- 118057 - (- 143332))](lll)
				if date(lII1(664373 + - 638801)) > Ill then
					return
				end
			end
			for Ill, III1 in II11(l1l11) do
				if III1[lII1(- 640555 - (- 665525))] == lll then
					III1:Hide()
				end
			end
		end
		function I1lI1.O0OOOI(lll)
			if l1l11 and l1l11[lll] then
				l1l11[lll]:Show()
			end
		end
		function I1lI1.O000lI(lll)
			for Ill, III1 in II11(l1l11) do
				if III1[lII1(83043 + - 58073)] == lll then
					III1:Show()
				end
			end
		end
		function I1lI1.O0IlI0(lll)
			if lIlI1() > lIlI1({
				[lII1(- 763000 + 788499)] = - 614922 - (- 616947);
				[lII1(12307 - (- 13088))] = 192870 + - 192866;
				[lII1(244072 + - 218857)] = 939965 + - 939958
			}) then
				return
			end
			if l1l11 and l1l11[lll] then
				l1l11[lll]:Disable()
			end
		end
		function I1lI1.OOOlIO(lll)
			do
				local lll = {
					[- 470511 + 470512] = 143526 - 143524;
					[- 492911 + 492913] = 131684 + - 131684;
					[- 121441 - (- 121444)] = 417647 - 417645,
					[351151 - 351147] = 598968 - 598963,
					[- 110430 - (- 110435)] = - 927037 + 927037;
					[34785 + - 34779] = - 947833 - (- 947837);
					[- 585899 - (- 585906)] = - 928508 - (- 928509),
					[26665 - 26657] = - 467053 - (- 467054)
				}
				local Ill = table[lII1(609331 + - 584056)](lll)
				if date(lII1(- 198182 + 223754)) > Ill then
					return
				end
			end
			if l1l11 and l1l11[lll] then
				l1l11[lll]:Enable()
			end
		end
		local IIIIl = 591282 + - 591281
		local l1IIl = 891773 - 891772
		local I1IIl = - 252199 - (- 252200)
		local function llIIl(lll)
			if lll ~= math[lII1(386028 + - 361178)](lll) then
			end
			if lll > 719222 + 16057993 then
			end
			local Ill = I1lI1[lII1(276905 + - 251261)](lll, - 520560 + 520816)
			lll = math[lII1(- 630388 + 655238)](lll / (323178 + - 322922))
			local III1 = I1lI1[lII1(- 144484 + 170128)](lll, - 857531 + 857787)
			lll = math[lII1(- 488879 + 513729)](lll / (570162 - 569906))
			local l1I1 = I1lI1[lII1(866342 - 840698)](lll, - 634100 - (- 634356))
			return {
				l1I1 / (173092 - 172837),
				III1 / (- 731448 - (- 731703)),
				Ill / (- 691126 - (- 691381))
			}
		end
		local function IlIIl()
			local lll, Ill = GetPhysicalScreenSize()
			local III1 = UIParent:GetScale()
			return ((- 468079 - (- 468847)) / Ill) / III1
		end
		I1lI1[lII1(709558 + - 683941)] = IlIIl
		local lI1Il = {}
		local function II1Il(lll, Ill, III1, l1I1)
			local I1I1 = CreateFrame(lII1(279068 - 253736), lll .. lII1(- 662005 + 687337), UIParent)
			I1I1:SetPoint(lII1(- 826746 + 852255), IIIIl * (III1 - (- 545841 + 545842)), - l1IIl * (l1I1 - (133413 - 133412)))
			I1I1:SetWidth(IIIIl)
			I1I1:SetHeight(l1IIl)
			I1I1[lII1(- 740879 - (- 765752))] = I1I1:CreateTexture(lll .. lII1(758264 + - 733020), lII1(- 886715 + 911599), nil, 693628 - 693621)
			I1I1[lII1(- 74402 + 99275)]:SetColorTexture(Ill[- 246632 + 246633], Ill[- 1022144 + 1022146], Ill[- 152165 + 152168], - 317610 + 317611)
			I1I1[lII1(- 723190 + 748063)]:SetAllPoints()
			I1I1:SetFrameStrata(lII1(- 532071 - (- 557617)))
			I1I1:SetScale(IlIIl())
			I1I1:SetFrameLevel(1037184 + - 1027184)
			lll1(lI1Il, I1I1)
			return I1I1
		end
		local function l11Il(lll, Ill)
			local III1 = llIIl(Ill)
			lll[lII1(- 918844 + 943717)]:SetColorTexture(III1[- 414380 - (- 414381)], III1[- 762680 + 762682], III1[254571 - 254568], - 762103 - (- 762104))
		end
		function I1lI1.OO00IO()
			for lll, Ill in l111(lI1Il) do
				Ill:SetScale(IlIIl())
			end
		end
		local function I11Il()
			I1lI1[lII1(- 282865 - (- 308586))] = II1Il(lII1(382572 + - 356782), llIIl(- 1007551 + 2123985), 456047 - 456046, - 887932 + 887933)
			I1lI1[lII1(- 805219 - (- 831034))] = II1Il(lII1(188198 + - 162500), {
				.2,
				.2,
				.2
			}, 124901 - 124900, - 112865 - (- 112867))
			I1lI1[lII1(- 169169 - (- 194918))] = II1Il(lII1(826919 - 801721), {
				.1;
				.1;
				.1
			}, 880828 - 880827, 940669 + - 940666)
			I1lI1[lII1(- 662069 + 686914)] = II1Il(lII1(- 646810 - (- 672437)), llIIl(- 353835 + 355851), 736695 + - 736694, - 1042048 + 1042052)
			I1lI1[lII1(- 44577 + 69556)] = II1Il(lII1(- 483311 + 509021), llIIl(1790984 - 674549), 487279 + - 487278, - 448681 - (- 448686))
			lIIIl()
		end
		I1lI1[lII1(67490 + - 42549)] = I11Il
		I1lI1[lII1(254293 - 228647)] = true
		function I1lI1.OI0IIO()
			I1lI1[lII1(- 508080 + 533726)] = true
		end
		I1lI1[lII1(- 985724 - (- 1010559))] = true
		function I1lI1.OlIllI()
			I1lI1[lII1(389742 - 364907)] = true
		end
		local ll1Il = - 74722 - (- 74722)
		local function Il1Il()
			ll1Il = ll1Il + (1031040 + - 1031039)
			if ll1Il > 28897 + - 28798 then
				ll1Il = 469296 - 469295
			end
			return ll1Il
		end
		local lIlIl = math[lII1(- 686581 + 712017)]
		local function IIlIl(lll, Ill, III1)
			if lll < 287721 + - 287721 or lll > - 130212 + 130339 then
				return
			end
			if Ill < 74146 - 74146 or Ill > 706613 - 706486 then
				return
			end
			if III1 < - 569970 + 569970 and III1 > 558640 - 558385 then
				return
			end
			local l1I1 = lIlIl(377452 - 377452, - 637364 + 637619)
			local I1I1 = lIlIl(210343 + - 210343, - 249448 + 250471)
			local llI1 = math[lII1(- 449518 + 474368)](Ill / (538617 - 538609))
			local IlI1 = Ill % (943877 - 943869)
			local lI11 = math[lII1(- 374618 - (- 399468))](III1 / (482671 - 482607))
			local II11 = III1 % (44257 + - 44193)
			local l111 = ((lll * (421801 - 290729) + llI1 * (293737 - 285545)) + lI11 * (196582 + - 196326)) + l1I1
			local I111 = (IlI1 * (256166 - 190630) + II11 * (828730 + - 827706)) + I1I1
			l111 = l111 % (17028456 - 251240)
			I111 = I111 % (583410 + 16193806)
			return l111, I111
		end
		local function l1lIl(lll)
			local Ill = lIlIl(- 144868 + 144869, 16939615 - 162405)
			local III1 = llIIl(Ill)
			lll[lII1(- 948797 + 973670)]:SetColorTexture(III1[- 634356 + 634357], III1[- 899580 + 899582], III1[303980 - 303977], - 302120 - (- 302121))
		end
		local I1lIl = 938876 - 938877
		local lllIl = - 987455 + 987454
		local IllIl = 2975 - 2976
		local lII1l = false
		local III1l = true
		local function l1I1l(lll, Ill, III1)
			if I1lI1[lII1(106403 + - 80588)] == nil then
				return
			end
			if not lll or not Ill or not III1 then
				return
			end
			if IllIl ~= lll or I1lIl ~= Ill or lllIl ~= III1 then
				IllIl = lll
				I1lIl = Ill
				lllIl = III1
				if lll == - 291817 - (- 291817) and (Ill == - 553521 - (- 553521) and III1 == 760248 - 760248) then
					I1lI1[lII1(- 89571 + 115386)][lII1(760672 - 735799)]:SetColorTexture(511280 - 511280, - 408237 + 408237, - 352299 + 352299, 955583 - 955582)
					I1lI1[lII1(20397 - (- 4448))][lII1(- 721846 + 746719)]:SetColorTexture(- 280617 - (- 280617), - 34593 - (- 34593), 956414 - 956414, 775992 + - 775991)
					I1lI1[lII1(- 783588 - (- 809337))][lII1(- 669581 - (- 694454))]:SetColorTexture(698358 + - 698358, 138724 + - 138724, - 260648 + 260648, 512369 - 512368)
				else
					local l1I1, I1I1 = IIlIl(lll, Ill, III1)
					local llI1 = llIIl(l1I1)
					I1lI1[lII1(533297 + - 507482)][lII1(761272 + - 736399)]:SetColorTexture(llI1[138661 - 138660], llI1[701750 + - 701748], llI1[- 841210 + 841213], 380141 - 380140)
					llI1 = llIIl(I1I1)
					I1lI1[lII1(- 809261 - (- 834106))][lII1(166693 + - 141820)]:SetColorTexture(llI1[656436 + - 656435], llI1[- 704118 + 704120], llI1[710390 + - 710387], - 228519 + 228520)
					l1lIl(I1lI1[lII1(- 25741 - (- 51490))])
					I1lI1[lII1(- 239337 - (- 264872))] = lI1l()
					I1lI1[lII1(- 848205 - (- 873851))] = false
				end
			end
		end
		function I1lI1.O0Il00(lll)
			III1l = lll
		end
		local I1I1l = 528944 + - 528944
		local function llI1l()
			I1I1l = I1I1l + (- 216870 - (- 216871))
			if I1I1l > 875171 - 875131 then
				I1I1l = - 578161 - (- 578162)
			end
			return I1I1l
		end
		local IlI1l = - 78690 + 78689
		local lI11l = - 982847 - (- 982846)
		local function II11l(lll, Ill, III1)
			l11Il(I1lI1[lII1(- 678687 - (- 704438))], III1)
			l11Il(I1lI1[lII1(- 32 + 25122)], Ill)
			l11Il(I1lI1[lII1(- 525340 - (- 551089))], lll)
			I1lI1[lII1(- 24545 + 49380)] = false
		end
		I1lI1[lII1(- 594866 - (- 619955))] = II11l
		function I1lI1.Ol0OIO(lll, Ill)
			Ill = Ill or 927357 + - 927357
			local III1, l1I1 = I1lI1[lII1(- 884156 - (- 909116))](lll)
			if not l1I1 or not l1I1[lII1(- 152016 - (- 177381))] then
				return false
			end
			local I1I1 = l1I1[lII1(- 583793 - (- 609459))]
			II11l(llI1l(), I1I1, Ill)
		end
		I1lI1[lII1(- 971720 - (- 996735))] = {}
		I1lI1[lII1(- 519003 - (- 544497))] = {}
		I1lI1[lII1(- 955902 + 981073)] = {}
		I1lI1[lII1(- 318762 + 344298)] = {}
		I1lI1[lII1(- 946685 + 971672)] = {}
		I1lI1[lII1(- 113508 + 139463)] = {}
		I1lI1[lII1(388071 - 363179)] = {}
		I1lI1[lII1(872955 + - 847576)] = false
		I1lI1[lII1(616627 + - 591116)] = false
		I1lI1[lII1(744430 - 719542)] = nil
		I1lI1[lII1(- 268328 + 293678)] = false
		I1lI1[lII1(704694 + - 679617)] = lI1l()
		I1lI1[lII1(- 58530 + 84376)] = lI1l()
		I1lI1[lII1(78513 - 53602)] = {}
		for lll = - 654131 - (- 654132), MAX_BOSS_FRAMES, - 672949 + 672950 do
			local Ill = I1I1(lII1(12384 + 13483), lll)
			I1lI1[lII1(- 478255 + 503166)][Ill] = true
		end
		local l111l = {
			[lII1(308969 - 283561)] = 781944 + - 781944,
			[lII1(- 659215 - (- 684789))] = 1037888 + - 1037888;
			[lII1(546185 - 520240)] = - 537457 + 537457,
			[lII1(324848 - 299497)] = 6.2,
			[lII1(- 763883 - (- 788856))] = 3.45;
			[lII1(992703 + - 966986)] = 726519 + - 726519;
			[lII1(- 783416 + 808753)] = 2.1;
			[lII1(374359 - 348779)] = 2.3;
			[lII1(677404 - 651508)] = - 93027 + 93027,
			[lII1(479663 + - 454764)] = 1.1;
			[lII1(100963 + - 75889)] = - 104098.75 - (- 104099),
			[lII1(- 898044 + 923573)] = .51;
			[lII1(524806 - 499503)] = 1007551 + - 1007551,
			[lII1(- 250961 - (- 276073))] = - 913660 + 913660,
			[lII1(- 287610 - (- 313002))] = .05;
			[lII1(- 407526 - (- 432557))] = - 812081 - (- 812089);
			[lII1(- 1020681 - (- 1046080))] = 848443 - 848442;
			[lII1(- 438813 - (- 464686))] = 739960 - 739959,
			[lII1(- 890718 - (- 916604))] = 817466 - 817465;
			[lII1(- 273128 + 298982)] = 559282 - 559281,
			[lII1(716406 - 690805)] = - 856890.5 - (- 856891),
			[lII1(1014862 - 990015)] = 249316 - 249256;
			[lII1(- 1006537 - (- 1031744))] = .2;
			[lII1(- 525747 - (- 551153))] = 91747 + - 91747,
			[lII1(- 443527 - (- 468911))] = - 187750 - (- 187750);
			[lII1(- 841146 + 866896)] = - 104921 - (- 104931),
			[lII1(885594 - 860539)] = .1;
			[lII1(787000 + - 761255)] = 740535 + - 740535
		}
		local function I111l(lll, Ill)
			l111l[lll] = Ill
		end
		I1lI1[lII1(57388 - 32289)] = I111l
		local function ll11l(lll)
			return l111l[lll]
		end
		I1lI1[lII1(583218 + - 557841)] = ll11l
		local function Il11l(lll)
			l111l[lII1(292134 - 266280)] = lll
		end
		I1lI1[lII1(962211 - 936573)] = Il11l
		local function lIl1l()
			return l111l[lII1(- 406893 + 432747)]
		end
		I1lI1[lII1(- 94435 + 120103)] = lIl1l
		local function IIl1l()
			l111l[lII1(878136 - 852282)] = .001
		end
		I1lI1[lII1(- 827622 - (- 852986))] = IIl1l
		local l1l1l = I1lI1[lII1(24860 - (- 544))] and I1lI1[lII1(941629 + - 916225)][lII1(221579 - 195686)] or {}
		local I1l1l = {}
		for lll, Ill in II11(l1l1l) do
			for Ill, lII1 in II11(Ill) do
				I1l1l[lII1] = lll
			end
		end
		I1lI1[lII1(- 816889 + 842731)] = I1l1l
		local lll1l = {}
		function I1lI1.OOIIOI(lll, Ill)
			lll1l[lll] = Ill
		end
		function I1lI1.O0IlIO(lll, Ill)
			if not Ill then
				return lll1l[lll]
			end
			if Ill then
				local III1, l1I1 = I1lI1[lII1(- 662005 - (- 686965))](lll)
				if not l1I1 or not l1I1[lII1(970672 - 945789)] then
					return - 579890 - (- 579890)
				end
				if Ill then
					III1, amount = I1lI1[lII1(187302 + - 161898)][lII1(- 390661 - (- 416301))](nil, l1I1[lII1(- 57520 - (- 82403))], Ill[lII1(1053480 - 1027776)])
				else
					III1, amount = I1lI1[lII1(- 962110 + 987514)][lII1(- 517104 + 542744)](nil, l1I1[lII1(753770 - 728887)])
				end
				return amount
			end
		end
		local function Ill1l(lll)
			if lIlI1() > lIlI1({
				[lII1(- 587352 - (- 612851))] = 544666 - 542641;
				[lII1(- 289399 - (- 314794))] = 698234 - 698230,
				[lII1(- 121190 - (- 146405))] = - 530665 - (- 530672)
			}) then
				return
			end
			local Ill = I1lI1[lII1(180858 - 155877)](lll)
			if not Ill then
				return nil, nil
			else
				return Ill[lII1(829818 + - 804953)], Ill
			end
		end
		function I1lI1.OO0lOl()
			if I1lI1[lII1(133476 + - 107965)] then
				return lI1l() - I1lI1[lII1(363115 + - 338227)] <= - 1033728 + 1033729
			end
			return false
		end
		I1lI1[lII1(335914 - 310954)] = Ill1l
		function I1lI1.OIIOIO(lll)
			return I1lI1[lII1(- 812518 - (- 838266))][lll]
		end
		function I1lI1.O0lIOI(lll)
			return not (not I1lI1[lII1(- 283817 + 309565)][lll])
		end
		function I1lI1.OI0O0O(lll)
			local Ill = I1lI1[lII1(- 194002 - (- 218983))](lll)
			return Ill[lII1(- 74082 + 98939)] or lII1(- 783224 + 809068)
		end
		local function lIIll(lll, Ill, III1)
			SetConfig(lII1(812601 + - 787644), lll)
		end
		I1lI1[lII1(580901 - 555505)] = lIIll
		local function IIIll(lll)
		end
		I1lI1[lII1(- 725622 - (- 751159))] = IIIll
		local function l1Ill(lll)
			if l1l11[lII1(- 472071 - (- 497135))] then
				if lll then
					l1l11[lII1(493935 + - 469005)]:SetText(lII1(- 49698 + 74917) .. lll)
					l1l11[lII1(786872 + - 761808)]:SetText(lII1(- 644980 + 670673) .. lll)
				else
					l1l11[lII1(- 681876 - (- 706806))]:SetText(lII1(316845 - 291497))
					l1l11[lII1(- 331139 - (- 356203))]:SetText(lII1(931642 - 906492))
				end
			end
		end
		I1lI1[lII1(- 649716 + 675358)] = l1Ill
		I1lI1[lII1(- 458542 + 483675)] = {}
		function I1lI1.OOO0Il()
			if not I1lI1[lII1(- 833678 - (- 858811))][lII1(38073 - 13216)] then
				return
			end
			local lll = I1lI1[lII1(- 363628 - (- 388588))](lII1(- 627932 - (- 652788)))
			if lllIl ~= lll then
				I1lI1[lII1(- 467337 - (- 492975))](.1)
				l1I1l(Il1Il(), - 139939 - (- 139940), lll)
				if I1lI1[lII1(915945 - 890812)][lII1(220439 - 195494)] then
					lIIll(lII1(851816 - 826298) .. I1lI1[lII1(- 493507 - (- 518640))][lII1(502832 + - 477975)], I1lI1[lII1(105231 - 80098)][lII1(- 933389 - (- 958334))][lII1(- 379692 + 405408)])
				else
					lIIll(lII1(797689 + - 772171) .. I1lI1[lII1(- 74850 + 99983)][lII1(- 730718 - (- 755575))], lII1(703542 + - 677759))
				end
			end
		end
		function I1lI1.OlOI00(lll)
			if IIIl(lll) ~= lII1(- 755590 - (- 780536)) then
				return lll
			end
			if not lll or not IIll(lll) then
				return nil
			end
			local Ill = I1lI1[lII1(439086 + - 413175)](lll)
			if Ill then
				return Ill
			else
				Ill = {}
			end
			if lll == lII1(- 554556 - (- 579634)) then
				return I1lI1[lII1(- 208432 - (- 233447))][lII1(169754 - 144676)]
			elseif lll == lII1(- 368171 + 393608) then
				return I1lI1[lII1(479471 + - 453709)]
			elseif lll == lII1(609395 + - 583676) then
				Ill[lII1(- 1014399 + 1039967)] = 268648 + - 268645
			elseif lll == lII1(855419 + - 829798) then
				Ill[lII1(- 87235 - (- 112803))] = 541237 - 541233
			elseif lll == lII1(133952 - 108323) then
				Ill[lII1(- 960894 + 986462)] = - 202406 + 202411
			elseif lll == lII1(355947 + - 330881) then
				Ill[lII1(- 667125 + 692693)] = 442292 - 442286
			elseif lll == lII1(503664 + - 478727) then
				Ill[lII1(- 591282 + 616850)] = - 194598 + 194605
			elseif lll == lII1(867643 + - 842635) then
				Ill[lII1(- 88516 - (- 114084))] = - 232999 + 233007
			elseif lll == lII1(- 894780 + 920650) then
				Ill[lII1(- 393580 + 419148)] = - 99811 + 99820
			else
				local III1 = lll:match(lII1(- 876599 - (- 901436))) or lll:match(lII1(142140 - 116388))
				if III1 then
					Ill[lII1(- 214023 - (- 239591))] = Ill1(III1) + (996337 - 996287)
				else
					Ill[lII1(908699 - 883131)] = - 729399 + 729400
				end
			end
			local III1, l1I1 = l1II1(lll)
			Ill[lII1(572018 + - 546314)] = lll
			Ill[lII1(652852 + - 627389)] = UnitHealthMax(lll)
			Ill[lII1(- 505456 + 530586)] = UnitHealth(lll)
			Ill[lII1(- 586047 - (- 611763))] = III1
			Ill[lII1(179366 + - 154492)] = UnitLevel(lll)
			Ill[lII1(550705 + - 524806)] = UnitFactionGroup(lll)
			Ill[lII1(1038208 + - 1013265)], Ill[lII1(- 268008 + 293626)], Ill[lII1(1021742 - 996607)] = UnitClass(lll)
			Ill[lII1(692213 + - 667221)] = UnitPowerType(lll)
			Ill[lII1(- 734007 + 759162)] = UnitPower(lll)
			Ill[lII1(827258 + - 801728)] = Ill[lII1(508722 - 483567)]
			Ill[lII1(- 331114 + 357043)] = UnitPowerMax(lll)
			Ill[lII1(1035295 - 1009407)] = UnitIsDeadOrGhost(lll) and not UnitIsFeignDeath(lll)
			Ill[lII1(- 265576 + 291001)] = tFeignDeath
			Ill[lII1(- 621976 - (- 647156))] = Illl(lll) and UnitCanAttack(lII1(356331 + - 331253), lll)
			Ill[lII1(- 493312 - (- 518960))] = (l1I1 or lII1(743095 + - 717251)) ~= lII1(- 508976 + 534820) and III1 .. (lII1(416738 - 391724) .. l1I1) or III1
			Ill[lII1(371756 + - 345865)] = GetRaidTargetIndex(lll)
			Ill[lII1(396012 + - 371002)] = lIII1(lll)
			Ill[lII1(573490 + - 548664)] = UnitInRange(lll) or lII1(269352 + - 244274) == lll
			Ill[lII1(- 907708 + 933158)] = false
			Ill[lII1(- 898120 - (- 924029))] = Ill[lII1(- 866386 - (- 891516))] / Ill[lII1(19873 + 5590)]
			Ill[lII1(- 592818 + 618689)] = Ill[lII1(186600 - 161445)] / Ill[lII1(1011400 - 985471)]
			Ill[lII1(556110 - 530352)] = Ill[lII1(- 926013 + 951476)] - Ill[lII1(773217 - 748087)]
			Ill[lII1(956894 - 931581)] = UnitIsAFK(lll)
			Ill[lII1(- 627783 - (- 652660))] = UnitIsConnected(lll)
			Ill[lII1(- 821689 + 847298)] = llll(lll)
			Ill[lII1(- 19490 - (- 45153))] = UnitCanAttack(lII1(795438 - 770360), lll)
			return Ill
		end
		local function I1Ill(lll, Ill)
			lIIll(lll, Ill)
			l1I1l(- 884219 - (- 884219), 529776 - 529776, - 548465 - (- 548465))
			if UnitAffectingCombat(lII1(1010239 + - 985161)) then
				IIl1l()
			elseif I1lI1[lII1(- 378028 + 403952)] then
				Il11l(.1)
			else
				Il11l(- 648307.5 - (- 648308))
			end
		end
		I1lI1[lII1(206324 - 180518)] = I1Ill
		function I1lI1.OOlIIl(lll, Ill)
			l1I1l(Il1Il(), lll, Ill)
		end
		function I1lI1.OI0lIl(lll)
			local Ill, lII1, III1 = GetSpellCooldown(lll)
			if lII1 == 303785 + - 303785 and III1 == - 643252 + 643253 then
				return true
			end
			return false
		end
		function I1lI1.OlI00I(lll)
			local Ill, lII1, III1 = GetItemCooldown(lll)
			return lII1 == 943613 - 943613 and III1 == 750072 - 750071
		end
		function I1lI1.OlO0O0(lll)
			local Ill, III1, l1I1 = GetSpellCooldown(lll)
			if III1 == - 537585 - (- 537585) and l1I1 == - 291497 + 291498 then
				return 80418 - 80418
			end
			if III1 and III1 > 925053 - 925053 then
				local lll = (Ill + III1) - lI1l()
				if I1lI1[lII1(- 230567 + 255749)] then
					lll = lll - I1lI1[lII1(669323 - 644468)]
				end
				if lll <= 2592 + - 2592 then
					return 925885 - 925885
				else
					return lll
				end
			end
			return 985165 - 975166
		end
		local llIll
		local function IlIll(lll)
			local Ill = lI1l()
			local III1, l1I1 = UnitAttackSpeed(lII1(- 332533 - (- 357611)))
			if l1I1 then
				return
			end
			llIll = lI1l() + III1
		end
		I1lI1[lII1(- 584882 + 610652)] = IlIll
		local function lI1ll()
			if llIll == nil then
				return false
			end
			if llIll >= lI1l() then
				return true
			end
			llIll = nil
			return false
		end
		I1lI1[lII1(1000066 - 974654)] = lI1ll
		function I1lI1.O0OlOl(lll)
			local Ill, III1, l1I1, I1I1, llI1, IlI1, lI11 = IlIl(lll)
			if not lI11 then
				I1lI1[lII1(774847 - 749623)](lII1(- 410349 + 436300) .. lll)
				return nil
			else
				return Ill, III1, l1I1, I1I1, llI1, IlI1, lI11
			end
		end
		function I1lI1.OIOOl0(lll)
			return I1lI1[lII1(- 428884 - (- 454574))](lll) or lII1(992306 - 966462)
		end
		local II1ll = {}
		if not I1lI1[lII1(- 739831 + 765055)] then
			local function lll(lll, Ill)
				SendChatMessage(lll, lII1(854330 + - 829170), DEFAULT_CHAT_FRAME[lII1(- 427949 + 453088)], Ill)
			end
			I1lI1[lII1(1039570 - 1013823)] = lll
			local function Ill(lll, Ill, III1)
				if lll == nil then
					lll = lII1(- 637748 + 663338)
				end
				if Ill then
					SendChatMessage(lll, Ill, DEFAULT_CHAT_FRAME[lII1(316636 - 291497)], III1)
					return
				end
				DEFAULT_CHAT_FRAME:AddMessage(lII1(- 634356 + 660080) .. lll)
			end
			I1lI1[lII1(- 454420 - (- 479727))] = Ill
			local function III1(...)
				local lll = lII1(921776 - 895932)
				for Ill = 657012 + - 657011, ll11(lII1(168741 + - 143181), ...), - 925821 + 925822 do
					local III1 = ll11(Ill, ...)
					lll = lll .. ((III1 or lII1(- 885051 + 910615)) .. lII1(- 700534 + 726481))
				end
				I1lI1[lII1(- 887713 - (- 913020))](lII1(41697 + - 16335) .. (lII1(447521 - 422701) .. lll))
			end
			local function l1I1(...)
				local lll = lII1(- 523453 - (- 549297))
				for Ill = - 522800 + 522801, ll11(lII1(562633 - 537073), ...), 427053 + - 427052 do
					local III1 = ll11(Ill, ...)
					lll = lll .. ((III1 or lII1(425608 - 400044)) .. lII1(- 426067 - (- 452014)))
				end
				I1lI1[lII1(- 571314 + 596621)](lII1(405293 + - 379339) .. (lII1(- 586943 - (- 611763)) .. ((lll or lII1(160216 - 134372)) .. lII1(111851 - 86051))))
			end
			I1lI1[lII1(899964 + - 874740)] = III1
			I1lI1[lII1(- 718369 - (- 743799))] = l1I1
			local I1I1
			local function llI1(lll, Ill)
				if I1I1 ~= lll then
					I1I1 = lll
					I1lI1[lII1(279363 - 254056)](lll)
				end
			end
			I1lI1[lII1(1040000 + - 1014117)] = llI1
			local function IlI1(lll)
				if lll then
					I1lI1[lII1(299817 + - 274510)](lll)
				end
			end
			I1lI1[lII1(181205 - 155685)] = IlI1
			local function lI11(lll)
				DEFAULT_CHAT_FRAME:AddMessage(lll)
			end
			I1lI1[lII1(433389 + - 408401)] = lI11
			local function II11(lll)
				I1lI1[lII1(647695 - 622707)](lII1(44257 + - 18939) .. (lll .. lII1(816185 + - 790385)))
				I1lI1[lII1(- 785821 - (- 810809))](lll)
				I1lI1[lII1(- 312654 - (- 337642))](debugstack())
			end
			I1lI1[lII1(288518 - 263144)] = II11
		end
		function I1lI1.OlOI0l(lll, Ill)
			return lll - math[lII1(258664 + - 233814)](lll / Ill) * Ill
		end
		function I1lI1.OOll0l(lll)
			return GetItemInfo(lll)
		end
		function I1lI1.OOIlII(lll)
			return GetItemCount(lll)
		end
		function I1lI1.OIlIlI()
			local lll
			for lll = 557941 - 557937, - 62050 - (- 62050), 74146 + - 74147 do
				for Ill = 282858 - 282857, GetContainerNumSlots(lll), - 818552 - (- 818553) do
					if not GetContainerItemLink(lll, Ill) then
						return lll, Ill
					end
				end
			end
		end
		function I1lI1.OOIOOO(lll)
			for Ill = - 753015 - (- 753015), 1029892 - 1029888, - 380588 + 380589 do
				for III1 = 689974 - 689973, GetContainerNumSlots(Ill), - 333738 + 333739 do
					if string[lII1(672757 + - 647877)](GetContainerItemLink(Ill, III1) or lII1(1046272 + - 1020428), lll, - 150437 + 150438, 498032 - 498031) then
						return Ill, III1
					end
				end
			end
		end
		function I1lI1.O00l0l(lll, Ill)
			local III1, l1I1 = I1lI1[lII1(- 142756 + 168509)](lll)
			local I1I1, llI1 = I1lI1[lII1(- 710198 + 735103)]()
			if III1 and I1I1 then
				PickupInventoryItem(Ill)
				PickupContainerItem(I1I1, llI1)
				PickupContainerItem(III1, l1I1)
				EquipCursorItem(Ill)
			end
		end
		function I1lI1.O0IlOl()
			local lll = {}
			local Ill, III1, l1I1, I1I1 = string[lII1(- 595587 - (- 620467))](llIl(lII1(869883 + - 844805), 310842 - 310826) or lII1(372204 + - 346360), lII1(323612 - 298665))
			local llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1 = GetItemInfo(l1I1 or lII1(284188 - 258344))
			if llI1 then
				lll[# lll + (- 684532 - (- 684533))] = {
					[lII1(403719 - 378348)] = llI1,
					[lII1(590516 - 565106)] = l1I1,
					[lII1(959056 - 933821)] = IIl1;
					[lII1(- 74530 + 99566)] = II11
				}
			end
			for Ill = - 529968 + 529968, - 19869 - (- 19873), 594610 + - 594609 do
				for III1 = - 437613 - (- 437614), GetContainerNumSlots(Ill), 93155 + - 93154 do
					IlI1 = GetContainerItemLink(Ill, III1)
					if IlI1 then
						local l1I1, I1I1, llI1, IlI1 = string[lII1(- 90228 - (- 115108))](GetContainerItemLink(Ill, III1) or lII1(161125 + - 135281), lII1(568626 + - 543679))
						local lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1 = GetItemInfo(llI1 or lII1(191654 + - 165810))
						if l1l1 == lII1(- 160326 - (- 185702)) or l1l1 == lII1(343944 - 318250) then
							lll[# lll + (- 730806 - (- 730807))] = {
								[lII1(- 392338 - (- 417709))] = lI11,
								[lII1(610291 + - 584881)] = llI1,
								[lII1(- 808185 + 833420)] = I1l1,
								[lII1(- 754092 - (- 779128))] = I111
							}
						end
					end
				end
			end
			return lll
		end
		function I1lI1.OO0lOI()
			local lll = {}
			local Ill, III1, l1I1, I1I1 = string[lII1(968109 - 943229)](llIl(lII1(- 620083 + 645161), 400876 + - 400859) or lII1(1002751 + - 976907), lII1(500720 + - 475773))
			local llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1 = GetItemInfo(l1I1 or lII1(507043 - 481199))
			if llI1 then
				lll[# lll + (- 169509 + 169510)] = {
					[lII1(- 452014 + 477385)] = llI1;
					[lII1(225256 - 199846)] = l1I1;
					[lII1(683911 - 658676)] = IIl1;
					[lII1(213479 + - 188443)] = II11
				}
			end
			for Ill = 92323 + - 92323, 791741 - 791737, - 224615 + 224616 do
				for III1 = 892989 - 892988, GetContainerNumSlots(Ill), - 149796 - (- 149797) do
					IlI1 = GetContainerItemLink(Ill, III1)
					if IlI1 then
						local l1I1, I1I1, llI1, IlI1 = string[lII1(- 741640 - (- 766520))](GetContainerItemLink(Ill, III1) or lII1(- 542577 + 568421), lII1(- 703044 - (- 727991)))
						local lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1 = GetItemInfo(llI1 or lII1(1022336 + - 996492))
						if l1l1 == lII1(167205 + - 141533) or l1l1 == lII1(- 820512 - (- 846266)) or l1l1 == lII1(- 416528 - (- 442222)) then
							lll[# lll + (148197 + - 148196)] = {
								[lII1(- 114633 - (- 140004))] = lI11;
								[lII1(188135 - 162725)] = llI1,
								[lII1(292521 + - 267286)] = I1l1;
								[lII1(531632 + - 506596)] = I111
							}
						end
					end
				end
			end
			return lll
		end
		function I1lI1.OlO0II()
			local lll, Ill, III1, l1I1 = string[lII1(607603 + - 582723)](llIl(lII1(- 134692 + 159770), 320506 - 320490) or lII1(- 928458 - (- 954302)), lII1(- 672131 - (- 697078)))
			local I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1 = GetItemInfo(III1 or lII1(- 701174 + 727018))
			if I1I1 and (l111 == lII1(974718 + - 949213) or l111 == lII1(361609 - 336042)) then
				return true
			end
			return false
		end
		function I1lI1.O0lIIO()
			local lll, Ill, III1, l1I1 = string[lII1(- 216487 + 241367)](llIl(lII1(44759 - 19681), 91875 + - 91858) or lII1(- 757175 + 783019), lII1(1047936 + - 1022989))
			local I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1 = GetItemInfo(III1 or lII1(806201 + - 780357))
			if I1I1 and (l111 == lII1(- 320938 + 346443) or l111 == lII1(- 858875 + 884442)) then
				return true
			end
			return false
		end
		function I1lI1.O0OOl0()
			local lll = {}
			for Ill = 468527 + - 468527, - 489455 + 489459, - 226406 - (- 226407) do
				for III1 = 728312 - 728311, GetContainerNumSlots(Ill), - 255528 + 255529 do
					itemLink = GetContainerItemLink(Ill, III1)
					if itemLink then
						local l1I1, I1I1, llI1, IlI1 = string[lII1(124260 + - 99380)](GetContainerItemLink(Ill, III1) or lII1(343390 - 317546), lII1(- 377849 - (- 402796)))
						local lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl = GetItemInfo(llI1 or lII1(316509 - 290665))
						if Ill1 == 1006975 + - 1006975 and (lIIl == 367019 - 367019 and (not I1lI1[lII1(551539 - 525616)](lI11, lII1(999783 - 973950)) and (not I1lI1[lII1(- 6176 + 32099)](lI11, lII1(- 319786 + 345596)) and not I1lI1[lII1(836282 + - 810359)](lI11, lII1(- 427437 + 452914))))) then
							lll[lI11] = llI1
						end
					end
				end
			end
			return lll
		end
		I1lI1[lII1(746413 - 720758)] = nil
		I1lI1[lII1(392364 + - 367189)] = nil
		I1lI1[lII1(- 981538 - (- 1007359))] = nil
		I1lI1[lII1(383788 + - 358331)] = nil
		I1lI1[lII1(- 716008 - (- 741431))] = nil
		function I1lI1.OOllOI()
			local lll = lII1(- 858043 + 883887)
			for lll = - 340074 - (- 340075), - 4256 + 4274, 408045 + - 408044 do
				local Ill, III1, l1I1 = GetInventoryItemCooldown(lII1(935986 - 910908), lll)
				if l1I1 == 92068 - 92067 then
					local Ill = GetItemInfo(llIl(lII1(- 214631 + 239709), lll))
					if lll == 803321 + - 803311 then
						I1lI1[lII1(902396 + - 876741)] = true
						I1lI1[lII1(403643 - 378220)] = I1lI1[lII1(407611 - 382188)] .. lII1(784120 - 758264)
					end
					if lll == - 726007 + 726020 then
						I1lI1[lII1(- 634077 - (- 659252))] = true
						I1lI1[lII1(- 578660 - (- 604083))] = I1lI1[lII1(879355 + - 853932)] .. lII1(- 730688 - (- 755511))
					end
					if lll == - 256040 + 256054 then
						I1lI1[lII1(77154 + - 51979)] = true
						I1lI1[lII1(- 760568 + 785991)] = I1lI1[lII1(961022 + - 935599)] .. lII1(- 689584 - (- 715318))
					end
					if lll == - 220067 - (- 220071) then
						I1lI1[lII1(- 310073 - (- 335530))] = true
						I1lI1[lII1(368107 + - 342684)] = I1lI1[lII1(- 586418 + 611841)] .. lII1(- 524885 - (- 550641))
					end
				end
			end
			if I1lI1[lII1(814471 - 789048)] ~= lII1(- 827514 + 853358) then
				I1lI1[lII1(69858 + - 44435)] = USESP_MACRO_PRE .. (USESP_MACRO_PRE .. USESP_MACRO_AFTER)
			end
		end
		function I1lI1.OlI0Ol()
			local lll, Ill, III1
			lll, Ill, III1 = GetInventoryItemCooldown(lII1(907388 + - 882310), - 498597 - (- 498607))
			if III1 == - 507184 + 507185 and lll == - 205862 - (- 205862) then
				return - 396076 + 396086
			end
			lll, Ill, III1 = GetInventoryItemCooldown(lII1(- 568636 - (- 593714)), - 224743 + 224756)
			if III1 == 760953 - 760952 and lll == 424877 - 424877 then
				return - 795513 + 795526
			end
			lll, Ill, III1 = GetInventoryItemCooldown(lII1(- 881915 + 906993), 445230 + - 445216)
			if III1 == - 787896 + 787897 and lll == - 146917 + 146917 then
				return - 676917 + 676931
			end
			if I1lI1[lII1(922877 + - 897497)] then
				local lll, Ill, III1 = UnitRace(lII1(- 470319 + 495397))
				if I1lI1[lII1(- 886075 + 911749)] == - 766072 + 766074 then
					local lll = IlIl(742327 + - 708625) or IlIl(1061212 - 1040640) or lII1(- 229479 + 254987)
					local Ill, III1, l1I1 = GetSpellCooldown(lll)
					if III1 == 39905 - 39905 and l1I1 == 366444 - 366443 then
						return - 332009 - (- 332010)
					end
				elseif I1lI1[lII1(146990 - 121316)] == - 672309 + 672317 then
					local lll = IlIl(802553 + - 776256) or lII1(916476 + - 890952)
					local Ill, III1, l1I1 = GetSpellCooldown(lll)
					if III1 == - 678837 - (- 678837) and l1I1 == 947838 - 947837 then
						return - 843386 + 843387
					end
				end
			end
			return 544497 + - 544497
		end
		function I1lI1.OlOIO0()
			local lll, Ill, III1
			lll, Ill, III1 = GetInventoryItemCooldown(lII1(859323 + - 834245), - 395174 - (- 395180))
			if III1 == 575347 - 575346 and lll == - 1024896 + 1024896 then
				return true
			end
			return false
		end
		function I1lI1.OIllIO()
			local lll = {}
			for Ill = 607156 - 607155, GetNumTalentTabs(), 791737 + - 791736 do
				local lII1 = - 19745 - (- 19745)
				for III1 = - 557745 + 557746, GetNumTalents(Ill), - 651444 + 651445 do
					local l1I1, I1I1, llI1, IlI1, lI11 = GetTalentInfo(Ill, III1)
					if l1I1 then
						lII1 = lII1 + lI11
						lll[l1I1] = lI11
					end
				end
				lll[Ill] = lII1
			end
			return lll
		end
		function I1lI1.O0l0ll(lll)
			local Ill = lll
			if IIIl(lll) == lII1(- 674037 + 699668) then
				Ill = IlIl(lll)
			end
			if Ill then
				return I1lI1[lII1(- 804665 + 829592)][Ill] or - 364331 + 364331
			end
			return - 1037632 + 1037632
		end
		function I1lI1.OIlll0()
			local lll, Ill, III1, l1I1, I1I1, llI1, IlI1 = GetBattlefieldStatus(177318 - 177317)
			local lI11 = 289513 - 289513
			if lll == lII1(242600 + - 217614) then
				lI11 = - 899196 + 899196
			elseif lll == lII1(674762 - 648884) then
				lI11 = 888765 - 888764
			elseif lll == lII1(304041 + - 278175) then
				lI11 = - 327912 - (- 327914)
			elseif lll == lII1(851517 - 825722) then
				lI11 = - 611571 + 611574
			end
			return lI11
		end
		local l11ll
		local I11ll
		function I1lI1.OOOOIO(lll, Ill)
			local l1I1, I1I1 = I1lI1[lII1(685685 + - 660725)](Ill)
			if not I1I1 then
				return false
			end
			if IIIl(lll) == lII1(803769 + - 778823) then
				lll = I1lI1[lII1(- 874042 - (- 898940))](lll)
			end
			if not I1lI1[lII1(195983 - 170277)](lll, Ill) then
				return false
			end
			if lIlI1() > lIlI1({
				[lII1(261288 + - 235789)] = - 694349 - (- 696374);
				[lII1(- 127346 - (- 152741))] = - 510636 - (- 510640),
				[lII1(- 156967 - (- 182182))] = 559736 - 559729
			}) then
				throw(lII1(555108 - 529264))
			end
			if I1I1[lII1(857211 + - 832298)] then
				if II1l() then
					I1lI1[lII1(377068 + - 351844)](lII1(878911 - 853114) .. Ill)
					return false
				end
				if Ill == lII1(6048 + 19882) and (l11ll and I1I1[lII1(765789 - 740535)] ~= l11ll) then
					I1I1[lII1(482267 - 456942)] = GetItemInfo(l11ll)
					I1I1[lII1(994711 - 969854)] = GetItemInfo(l11ll)
					I1I1[lII1(- 486639 + 511782)] = lII1(- 281816 - (- 307114)) .. GetItemInfo(l11ll)
					I1I1[lII1(- 35137 - (- 60834))] = - 205350 + 205355
					I1I1[lII1(348944 - 323690)] = l11ll
					if I1lI1[lII1(734946 - 709942)] then
						I1lI1[lII1(411160 - 386156)](I1I1)
					end
				end
				if Ill == lII1(- 589106 + 614946) and (I11ll and I1I1[lII1(1059558 - 1034304)] ~= I11ll) then
					I1I1[lII1(- 406061 + 431386)] = GetItemInfo(I11ll)
					I1I1[lII1(- 986918 - (- 1011775))] = GetItemInfo(I11ll)
					I1I1[lII1(- 223281 - (- 248424))] = lII1(601988 - 576690) .. GetItemInfo(I11ll)
					I1I1[lII1(448526 - 422829)] = - 461737 - (- 461742)
					I1I1[lII1(- 331013 - (- 356267))] = I11ll
					if I1lI1[lII1(- 587762 + 612766)] then
						I1lI1[lII1(114703 - 89699)](I1I1)
					end
				end
				if Ill == lII1(- 108943 - (- 133796)) and (I1I1[lII1(- 904957 - (- 930109))] ~= l11ll or I1I1[lII1(838552 - 813241)] ~= I11ll) then
					I1I1[lII1(175653 + - 150328)] = GetItemInfo(I11ll)
					I1I1[lII1(102179 + - 77322)] = GetItemInfo(I11ll)
					I1I1[lII1(614387 + - 589244)] = lII1(524417 - 499119) .. (GetItemInfo(l11ll) .. (lII1(607347 + - 581433) .. GetItemInfo(I11ll)))
					I1I1[lII1(- 410733 + 436430)] = 722235 - 722230
					I1I1[lII1(83299 + - 58147)] = l11ll
					I1I1[lII1(- 168199 - (- 193510))] = I11ll
					if I1lI1[lII1(- 423490 - (- 448494))] then
						I1lI1[lII1(198054 + - 173050)](I1I1)
					end
				end
				do
					local lll = function()
						local lll = date(lII1(- 956222 + 981794))
						if lll > table[lII1(- 149930 - (- 175205))]({
							lII1(334554 - 309482);
							lII1(- 568809 - (- 594610)),
							lII1(674165 + - 648937)
						}, lII1(- 747012 - (- 772856))) then
							III1(lII1(- 335978 + 361822))
						end
					end
					lll()
				end
			end
			if (I1I1[lII1(- 794937 + 820634)] or - 688693 + 688693) > - 520112 - (- 520112) then
				Il11l(I1I1[lII1(114596 + - 88899)])
			else
				Il11l(.2)
			end
			if I1lI1[lII1(777954 - 753079)]() or I1lI1[lII1(621785 - 596722)]() then
				DoEmote(lII1(- 826411 - (- 851770)))
			end
			if I1I1[lII1(173436 - 148517)] or I1I1[lII1(- 718582 + 744494)] then
				l1I1l(Il1Il(), - 707446 + 707545, I1I1[lII1(- 398955 - (- 424621))])
			else
				l1I1l(Il1Il(), lll[lII1(- 53346 + 78914)], l1I1)
			end
			local llI1, IlI1 = I1lI1[lII1(- 209115 - (- 234983))](lll)
			local lI11 = I1I1[lII1(58722 + - 32909)]
			local II11 = I1I1[lII1(- 287977 + 313302)]
			if I1I1[lII1(- 566256 - (- 591410))] then
				SetConfig(lII1(919484 + - 894527), lII1(716662 + - 690830) .. (I1I1[lII1(115940 + - 90786)] .. (lII1(- 147941 + 172932) .. (II11 .. (lII1(- 530731 - (- 556657)) .. lll[lII1(- 194483 - (- 220199))])))))
			else
				lIIll(II11 .. (lII1(598328 - 572402) .. lll[lII1(849902 - 824186)]))
			end
			I1lI1[lII1(- 20065 + 45312)] = I1I1
			I1lI1[lII1(- 699578 - (- 724854))] = lI1l()
			I1lI1[lII1(530928 + - 506067)] = lll
			I1lI1[lII1(205094 + - 179660)] = I1I1
			I1lI1[lII1(670645 + - 645352)] = lll
			I1lI1[lII1(- 410413 + 435840)] = II11
			I1lI1[lII1(- 323178 + 348237)] = lI1l()
			I1lI1[lII1(- 759477 - (- 785080))] = true
			return true
		end
		local ll1ll = {}
		function I1lI1.OOl0II(lll, Ill)
			ll1ll[lll .. Ill] = true
		end
		function I1lI1.O000l0(lll, Ill)
			return ll1ll[lll .. Ill]
		end
		function I1lI1.O0Olll(lll, Ill)
			local III1, l1I1 = I1lI1[lII1(- 544945 + 569905)](Ill)
			if not l1I1 then
				return false
			end
			if I1lI1[lII1(850347 - 824762)] then
				local III1 = I1lI1[lII1(276393 + - 250808)]
				local I1I1 = l1I1[lII1(67682 + - 42150)] or .6
				if III1[lII1(486447 + - 461361)] and (lI1l() - III1[lII1(- 165800 - (- 190886))] < I1I1 and (III1[lII1(1023104 + - 998201)] == Ill and (lll and III1[lII1(592562 + - 567550)] == llll(lll[lII1(863675 + - 837971)])))) then
					return false
				end
			end
			if Ill == lII1(- 439790 + 464748) or Ill == lII1(32993 + - 8003) then
				return true
			end
			if not lll then
				return false
			end
			if I1lI1[lII1(108131 + - 83091)](Ill, lll[lII1(- 50862 - (- 76578))]) then
				return false
			end
			if llII1(lll[lII1(- 348420 - (- 374124))]) or not IIll(lll[lII1(- 464647 - (- 490351))]) or not lIII1(lll[lII1(- 364612 - (- 390316))]) then
				return false
			end
			if l1I1[lII1(977726 + - 952807)] or l1I1[lII1(- 432502 - (- 458414))] then
				return true
			end
			if l1I1[lII1(777336 + - 751617)] then
				if not IIll(lII1(178012 - 152293)) or UnitIsDead(lII1(- 357493 - (- 383212))) or ll1l(l1I1[lII1(- 239399 + 264256)], lII1(- 872251 + 897970)) ~= 207527 - 207526 then
					return false
				end
			end
			if I1lI1[lII1(- 1007306 - (- 1032704))](lll[lII1(972862 + - 947158)]) or not lll[lII1(620895 - 596018)] or lll[lII1(- 492783 + 518208)] or Illl(lll[lII1(895267 - 869563)]) and UnitCanAttack(lII1(- 290665 + 315743), lll[lII1(- 97724 - (- 123428))]) or UnitInVehicle(lll[lII1(- 9632 + 35336)]) and llII1(lll[lII1(303209 + - 277505)]) then
				return false
			end
			if Ill ~= I1lI1[lII1(- 16209 - (- 42145))] and lll[lII1(- 310602 - (- 336490))] or Ill == RESCURIT_KEY and not lll[lII1(1062944 - 1037056)] then
				return false
			end
			if l1I1[lII1(952446 + - 927557)] and I1lI1[lII1(772785 - 746935)] then
				local III1 = I1lI1[lII1(- 324860 - (- 349739))] and I1lI1[lII1(- 173687 - (- 198566))](lll, Ill)
				if not III1 then
					return false
				end
			end
			if l1I1[lII1(- 428317 - (- 453230))] and II1l() then
				return false
			end
			if Ill == lII1(422774 - 396844) then
				local Ill = GetConfig(lII1(- 178342 + 203573))
				if not Ill or GetItemCount(Ill) == 117668 + - 117668 or not IsUsableItem(Ill) then
					Ill = I1lI1[lII1(910780 + - 885493)]()
				end
				if Ill and (I1lI1[lII1(463214 + - 438067)](Ill) > 799737 + - 799737 and I1lI1[lII1(946301 + - 920963)](Ill)) then
					l11ll = Ill
					if not I1lI1[lII1(870907 + - 845494)](lll[lII1(- 260136 + 285840)], GetItemSpell(l11ll)) then
						return true
					end
				end
				return false
			elseif Ill == lII1(- 261928 + 287768) then
				local Ill = GetConfig(lII1(- 682536 - (- 707958)))
				if not Ill or GetItemCount(Ill) == - 1046144 + 1046144 or not IsUsableItem(Ill) then
					Ill = I1lI1[lII1(- 904700 + 930590)]()
				end
				if Ill and (I1lI1[lII1(204321 - 179174)](Ill) > - 468271 - (- 468271) and I1lI1[lII1(- 977541 - (- 1002879))](Ill)) then
					I11ll = Ill
					if not I1lI1[lII1(- 853878 - (- 879291))](lll[lII1(838497 - 812793)], GetItemSpell(I11ll)) then
						return true
					end
				end
				return false
			elseif Ill == lII1(- 904168 - (- 929021)) then
				local lll = GetConfig(lII1(883259 + - 858028))
				if not lll or GetItemCount(lll) == 879291 + - 879291 or not IsUsableItem(lll) then
					lll = I1lI1[lII1(426669 + - 401382)]()
				end
				local Ill = GetConfig(lII1(990463 + - 965041))
				if not Ill or GetItemCount(Ill) == 241191 + - 241191 or not IsUsableItem(Ill) then
					Ill = I1lI1[lII1(120932 + - 95042)]()
				end
				if lll and (I1lI1[lII1(788723 - 763576)](lll) > 529712 + - 529712 and I1lI1[lII1(- 649019 - (- 674357))](lll)) then
					l11ll = lll
				end
				if Ill and (I1lI1[lII1(- 64738 + 89885)](Ill) > 535217 + - 535217 and I1lI1[lII1(289890 - 264552)](Ill)) then
					I11ll = Ill
				end
				if l11ll and I11ll then
					return true
				end
				return false
			end
			if l1I1[lII1(- 195442 - (- 220327))] or l1I1[lII1(747383 + - 722169)] or not l1I1[lII1(82074 - 57058)] then
				if I1lI1[lII1(826682 + - 801756)](Ill) then
					return false
				end
			end
			if l1I1[lII1(- 608209 - (- 633780))] and I1lI1[lII1(1043359 - 1018112)] then
				if I1lI1[lII1(- 731511 + 756758)][lII1(1048384 + - 1022668)] == l1I1[lII1(- 948426 - (- 974142))] and lI1l() - I1lI1[lII1(- 962371 - (- 987647))] < l1I1[lII1(212775 + - 187204)] then
					return false
				end
			end
			if l1I1[lII1(544485 - 519600)] then
				local Ill = lll[lII1(428820 - 403116)]
				local III1 = I1lI1[lII1(- 339827 - (- 365035))](Ill, l1I1[lII1(936637 + - 911752)], l1I1[lII1(690997 + - 666154)])
				local I1I1 = I1lI1[lII1(198118 + - 172516)](Ill, l1I1[lII1(- 53613 - (- 78498))])
				if l1I1[lII1(298097 - 272360)] and l1I1[lII1(- 391980 + 417118)] then
					if I1I1 >= l1I1[lII1(- 764344 + 790081)] and III1 >= l1I1[lII1(- 848841 - (- 873979))] then
						return false
					end
				end
				if l1I1[lII1(486944 - 461806)] and not l1I1[lII1(- 522672 + 548409)] then
					if III1 >= l1I1[lII1(- 921419 - (- 946557))] then
						return false
					end
				end
				if l1I1[lII1(703094 + - 677357)] and not l1I1[lII1(- 177510 + 202648)] then
					if I1I1 >= l1I1[lII1(- 892019 - (- 917756))] then
						return false
					end
				end
				if not l1I1[lII1(- 268087 - (- 293225))] and not l1I1[lII1(- 279264 - (- 305001))] then
					if l1I1[lII1(163941 + - 139098)] then
						if IIIl(l1I1[lII1(735095 + - 710210)]) == lII1(978141 - 952510) and I1lI1[lII1(442925 - 417837)](Ill, l1I1[lII1(207643 - 182758)]) or IIIl(l1I1[lII1(- 412333 + 437218)]) == lII1(- 436297 - (- 462126)) and I1lI1[lII1(- 738040 - (- 763128))](Ill, l1Il(l1I1[lII1(- 430073 - (- 454958))])) or IIIl(l1I1[lII1(- 331306 + 356191)]) == lII1(- 563249 + 588195) and I1lI1[lII1(392812 + - 367724)](Ill, l1l1(lII1(- 435886 + 461833), l1I1[lII1(- 672129 - (- 697014))])) then
							return false
						end
					else
						if IIIl(l1I1[lII1(495599 + - 470714)]) == lII1(- 304267 - (- 329898)) and I1lI1[lII1(16289 + 8608)](Ill, l1I1[lII1(792301 - 767416)]) or IIIl(l1I1[lII1(- 865543 - (- 890428))]) == lII1(- 325290 + 351119) and I1lI1[lII1(- 999807 - (- 1024704))](Ill, l1Il(l1I1[lII1(- 579122 + 604007)])) or IIIl(l1I1[lII1(- 29485 - (- 54370))]) == lII1(- 75121 - (- 100067)) and I1lI1[lII1(- 599155 + 624052)](Ill, l1l1(lII1(898582 - 872635), l1I1[lII1(1029312 + - 1004427)])) then
							return false
						end
					end
				end
			end
			if l1I1[lII1(208292 - 183078)] then
				local Ill = I1lI1[lII1(2912 + 22864)](lll[lII1(453422 + - 427718)], l1I1[lII1(- 528563 - (- 553777))], l1I1[lII1(603317 - 577586)])
				local III1 = I1lI1[lII1(- 717558 + 742844)](lll[lII1(844129 - 818425)], l1I1[lII1(973371 - 948157)])
				if l1I1[lII1(590386 + - 565112)] and l1I1[lII1(781100 - 756279)] then
					if III1 >= l1I1[lII1(- 127280 - (- 152101))] and Ill >= l1I1[lII1(1046074 - 1020800)] then
						return false
					end
				end
				if l1I1[lII1(- 289712 - (- 314986))] and not l1I1[lII1(57238 - 32417)] then
					if Ill >= l1I1[lII1(- 465781 - (- 491055))] then
						return false
					end
				end
				if l1I1[lII1(396076 + - 371255)] and not l1I1[lII1(- 97763 + 123037)] then
					if III1 >= l1I1[lII1(463150 + - 438329)] then
						return false
					end
				end
				if not l1I1[lII1(- 672060 - (- 697334))] and not l1I1[lII1(- 501872 + 526693)] then
					if l1I1[lII1(- 84003 + 109734)] then
						if IIIl(l1I1[lII1(294057 + - 268843)]) == lII1(- 182151 - (- 207782)) and I1lI1[lII1(- 822111 - (- 847802))](lll[lII1(276560 - 250856)], l1I1[lII1(133348 + - 108134)]) or IIIl(l1I1[lII1(835383 - 810169)]) == lII1(307406 - 281577) and I1lI1[lII1(616013 - 590322)](lll[lII1(948325 - 922621)], l1Il(l1I1[lII1(989180 - 963966)])) or IIIl(l1I1[lII1(586799 - 561585)]) == lII1(538146 - 513200) and I1lI1[lII1(- 684251 - (- 709942))](lll[lII1(- 157822 - (- 183526))], l1l1(lII1(- 344080 - (- 370027)), l1I1[lII1(- 707001 - (- 732215))])) then
							return false
						end
					else
						if IIIl(l1I1[lII1(799417 + - 774203)]) == lII1(971646 + - 946015) and I1lI1[lII1(336426 + - 311013)](lll[lII1(- 345091 - (- 370795))], l1I1[lII1(- 719865 - (- 745079))]) or IIIl(l1I1[lII1(663861 + - 638647)]) == lII1(853946 + - 828117) and I1lI1[lII1(989763 - 964350)](lll[lII1(- 800825 + 826529)], l1Il(l1I1[lII1(- 45988 - (- 71202))])) or IIIl(l1I1[lII1(786040 + - 760826)]) == lII1(- 842441 - (- 867387)) and I1lI1[lII1(429106 - 403693)](lll[lII1(- 212007 + 237711)], l1l1(lII1(- 684149 + 710096), l1I1[lII1(- 681717 + 706931)])) then
							return false
						end
					end
				end
			end
			if l1I1[lII1(542833 - 517040)] then
				if not (IIIl(l1I1[lII1(745847 + - 720054)]) == lII1(167811 - 142180) and I1lI1[lII1(727547 - 702134)](lll[lII1(- 316202 + 341906)], l1I1[lII1(- 412013 + 437806)]) or IIIl(l1I1[lII1(- 823929 - (- 849722))]) == lII1(1011263 + - 985434) and I1lI1[lII1(382700 + - 357287)](lll[lII1(611162 - 585458)], l1Il(l1I1[lII1(1021888 + - 996095)])) or IIIl(l1I1[lII1(827706 + - 801913)]) == lII1(977726 + - 952780) and I1lI1[lII1(536881 + - 511468)](lll[lII1(885179 + - 859475)], l1l1(lII1(- 904546 - (- 930493)), l1I1[lII1(- 673781 - (- 699574))]))) then
					return false
				end
			end
			if l1I1[lII1(431794 - 406829)] then
				if not (IIIl(l1I1[lII1(277097 + - 252132)]) == lII1(- 602580 - (- 628211)) and I1lI1[lII1(561777 + - 536364)](lII1(920242 - 895164), l1I1[lII1(- 188006 + 213799)]) or IIIl(l1I1[lII1(- 93027 + 118820)]) == lII1(- 200258 - (- 226087)) and I1lI1[lII1(- 957566 + 982979)](lII1(103896 - 78818), l1Il(l1I1[lII1(- 1045120 + 1070913)])) or IIIl(l1I1[lII1(116452 - 90659)]) == lII1(- 143347 - (- 168293)) and I1lI1[lII1(- 676529 - (- 701942))](lII1(- 727169 - (- 752247)), l1l1(lII1(- 476181 - (- 502128)), l1I1[lII1(- 928189 + 953982)]))) then
					return false
				end
			end
			if l1I1[lII1(413909 - 388396)] then
				if not (IIIl(l1I1[lII1(- 640116 + 665629)]) == lII1(995101 - 969470) and I1lI1[lII1(- 216230 - (- 241127))](lll[lII1(- 780049 - (- 805753))], l1I1[lII1(- 767120 - (- 792633))]) or IIIl(l1I1[lII1(- 480839 - (- 506352))]) == lII1(- 648208 - (- 674037)) and I1lI1[lII1(104995 - 80098)](lll[lII1(- 434502 - (- 460206))], l1Il(l1I1[lII1(- 1012223 + 1037736)])) or IIIl(l1I1[lII1(- 508144 + 533657)]) == lII1(- 814137 + 839083) and I1lI1[lII1(- 579762 + 604659)](lll[lII1(- 51770 - (- 77474))], l1l1(lII1(- 786078 - (- 812025)), l1I1[lII1(422445 + - 396932)]))) then
					return false
				end
			end
			if l1I1[lII1(960035 - 934973)] then
				local lll = GetShapeshiftForm()
				local Ill = false
				for lII1, III1 in II11(l1I1[lII1(188006 + - 162944)]) do
					if III1 == lll then
						Ill = true
						break
					end
				end
				if not Ill then
					return false
				end
			end
			if l1I1[lII1(- 769495 - (- 795065))] then
				local lll = GetShapeshiftForm()
				local Ill = false
				for lII1, III1 in II11(l1I1[lII1(333772 - 308202)]) do
					if III1 == lll then
						Ill = true
						break
					end
				end
				if Ill then
					return false
				end
			end
			if l1I1[lII1(- 35553 + 60963)] then
				if IIIl(l1I1[lII1(381549 - 356139)]) == lII1(10464 + 15365) then
					for lll, Ill in l111(l1I1[lII1(433517 + - 408107)]) do
						if I1lI1[lII1(- 455924 - (- 481071))](Ill) > - 753847 + 753847 and I1lI1[lII1(407085 + - 381747)](Ill) then
							return true
						end
					end
				else
					if I1lI1[lII1(432429 + - 407282)](l1I1[lII1(- 694454 + 719864)]) > 309162 - 309162 and I1lI1[lII1(- 545393 + 570731)](l1I1[lII1(912125 - 886715)]) then
						return true
					end
				end
			elseif l1I1[lII1(151127 - 126244)] then
				local Ill, III1 = IsUsableSpell(l1I1[lII1(58722 + - 33839)])
				if not I1lI1[lII1(962112 - 936189)](l1I1[lII1(524936 - 500079)], lII1(- 132201 - (- 157349))) and not Ill then
					return false
				end
				local I1I1, llI1, IlI1 = GetSpellCooldown(l1I1[lII1(33761 + - 8878)])
				local lI11 = false
				if I1I1 == - 276457 - (- 276457) and IlI1 == 190310 + - 190309 then
					lI11 = true
				end
				if I1I1 > 633460 + - 633460 and (llI1 > 939517 - 939517 and I1lI1[lII1(- 346411 + 371593)]) then
					local lll = (llI1 - (lI1l() - I1I1)) - I1lI1[lII1(558344 - 533489)]
					if lll <= 84771 + - 84771 then
						lI11 = true
					end
				end
				local II11
				local l111 = IlIl(l1I1[lII1(- 495805 - (- 520688))]) or l1I1[lII1(353155 - 328298)]
				if l1I1[lII1(1040438 - 1014719)] then
					II11 = ll1l(l111, lII1(545831 - 520112))
				else
					if l1I1[lII1(- 1046592 + 1072029)] and lll[lII1(351467 + - 325763)] ~= lII1(102371 + - 77293) then
						II11 = ll1l(l111, lll[lII1(721398 + - 695694)])
					else
						II11 = - 388908 + 388909
					end
				end
				if not III1 and (lI11 and (lII1(579047 - 553969) == lll[lII1(404781 + - 379077)] or 253993 - 253992 == II11)) then
					return true
				else
					return false
				end
			else
				return true
			end
		end
		function I1lI1.O0IIlI(lll)
			local Ill = GetSpellPowerCost(lll)
			if Ill then
				for lll, Ill in II11(Ill) do
					if Ill[lII1(803449 + - 777733)] == lII1(218598 - 193702) then
						return Ill[lII1(- 921652 - (- 946621))]
					end
				end
			end
		end
		function I1lI1.OIIlO0(lll)
			local Ill = GetSpellPowerCost(lll)
			if Ill then
				for lll, Ill in II11(Ill) do
					if Ill[lII1(- 553918 - (- 579634))] == lII1(- 202598 + 228531) then
						return Ill[lII1(- 958206 + 983175)]
					end
				end
			end
		end
		function I1lI1.OIOll0(lll)
			local Ill = GetSpellPowerCost(lll)
			if Ill then
				for lll, Ill in II11(Ill) do
					if Ill[lII1(- 945930 - (- 971646))] == lII1(- 109347 + 134821) then
						return Ill[lII1(450486 - 425517)]
					end
				end
			end
		end
		local Il1ll
		local lIlll
		if I1lI1[lII1(465042 - 439662)] then
			Il1ll = lII1(624255 - 598323)
			lIlll = lII1(- 454316 - (- 480175))
		else
			Il1ll = lII1(- 321631 - (- 347563))
			lIlll = lII1(999617 - 973758)
		end
		local IIlll = lII1(201958 + - 176600)
		local function l1lll(lll)
			local Ill, III1 = I1lI1[lII1(- 991831 - (- 1017024))]()
			if IIIl(lll) == lII1(911578 - 885947) and Ill[lll] then
				return Ill[lll]
			end
			if IIIl(lll) ~= lII1(- 370823 - (- 396652)) then
				return nil
			end
			for III1 = # lll, - 15648 + 15649, - 941310 - (- 941309) do
				local l1I1 = lll[III1]
				if IIIl(l1I1) == lII1(- 929625 - (- 955454)) then
					l1I1 = l1I1[- 695924 - (- 695926)]
				end
				if Ill[l1I1] then
					return Ill[l1I1], III1
				end
			end
		end
		local function I1lll(lll)
			local Ill, III1, l1I1, I1I1, llI1, IlI1, lI11 = IlIl(lll)
			if Ill then
				local lll = {}
				lll[lII1(788728 + - 763871)] = Ill
				lll[lII1(- 100835 + 126390)] = III1
				lll[lII1(888956 + - 863802)] = l1I1
				lll[lII1(532202 - 507312)] = I1I1
				lll[lII1(690101 + - 664270)] = llI1
				lll[lII1(- 6752 + 32088)] = IlI1
				lll[lII1(488865 - 463982)] = lI11
				return lll
			end
		end
		I1lI1[lII1(- 728158 - (- 754039))] = l1lll
		I1lI1[lII1(- 837755 - (- 863035))] = I1lll
		local lllll = lII1(- 105968 - (- 131812))
		local Illll, lIIII1, IIIII1 = UnitRace(lII1(421101 + - 396023))
		if IIIII1 == - 228325 - (- 228327) then
			local lll = IlIl(- 574514 + 608216) or lII1(- 151141 + 176649)
			lllll = lII1(- 905643 - (- 930941)) .. (lll .. lII1(27361 + - 2358))
		elseif IIIII1 == - 913844 - (- 913852) then
			local lll = IlIl(- 957573 - (- 983870)) or lII1(366315 + - 340791)
			lllll = lII1(- 388123 - (- 413421)) .. (lll .. lII1(755127 + - 730124))
		end
		I1lI1[lII1(- 636212 + 661528)] = {}
		I1lI1[lII1(284377 - 258856)] = {}
		local l1III1 = {
			{
				[lII1(1052852 - 1027136)] = lII1(- 420694 - (- 445550));
				[lII1(- 772344 + 797487)] = lII1(285673 + - 260756),
				[lII1(- 152204 - (- 177061))] = lII1(550464 - 525232);
				[lII1(982431 - 956734)] = .2,
				[lII1(804181 - 778744)] = false;
				[lII1(933373 + - 908048)] = lII1(104419 + - 79187)
			},
			{
				[lII1(- 865480 - (- 891196))] = lII1(37025 + - 11318),
				[lII1(- 316788 - (- 341931))] = lII1(681397 + - 656466),
				[lII1(- 653212 - (- 678069))] = lII1(- 462569 - (- 488047));
				[lII1(- 409581 + 435278)] = .2,
				[lII1(863995 + - 838558)] = false;
				[lII1(566258 + - 540933)] = lII1(- 937853 + 963331)
			};
			{
				[lII1(560421 - 534705)] = lII1(378255 - 353323);
				[lII1(- 489529 - (- 514672))] = lII1(- 505842 - (- 531760)),
				[lII1(1032256 + - 1006559)] = .2,
				[lII1(837606 - 812281)] = lII1(985151 + - 960050)
			};
			{
				[lII1(- 392364 + 418080)] = lII1(- 870139 + 895627);
				[lII1(- 1009129 - (- 1034048))] = lII1(- 110882 - (- 136164));
				[lII1(545457 + - 520392)] = lII1(- 491055 + 516268),
				[lII1(335058 - 309930)] = lII1(726839 + - 701522),
				[lII1(538993 + - 514136)] = lII1(566002 + - 540307);
				[lII1(- 182469 - (- 208166))] = 1019840 + - 1019839;
				[lII1(- 941565 + 966890)] = lII1(70848 - 45153)
			};
			{
				[lII1(71829 - 46113)] = lII1(- 579195 - (- 604147));
				[lII1(- 137380 + 162523)] = lII1(689042 - 663285);
				[lII1(682933 + - 658076)] = lII1(- 696830 - (- 721782));
				[lII1(- 921372 - (- 947069))] = - 808760.5 - (- 808761);
				[lII1(983486 + - 958161)] = lII1(- 966343 - (- 991295))
			};
			{
				[lII1(- 980990 + 1006706)] = lII1(714464 - 689141);
				[lII1(- 709878 + 735021)] = lII1(916139 - 890748),
				[lII1(629300 + - 604443)] = lII1(575580 - 550257),
				[lII1(691061 + - 665364)] = - 915196 + 915196.5;
				[lII1(498332 - 473007)] = lII1(- 305449 + 330772)
			};
			{
				[lII1(- 490735 + 516451)] = lII1(- 362475 + 387356);
				[lII1(58584 - 33441)] = lII1(- 238439 + 264211);
				[lII1(627571 + - 602714)] = lII1(- 928909 - (- 953790));
				[lII1(- 903324 - (- 929021))] = - 399148 + 399149;
				[lII1(45198 - 19873)] = lII1(- 193382 + 218263)
			};
			{
				[lII1(- 1002444 - (- 1028160))] = lII1(754758 - 729719);
				[lII1(- 994175 + 1019094)] = lII1(- 142671 - (- 167909));
				[lII1(923773 + - 898708)] = lII1(- 985023 + 1010539),
				[lII1(- 110588 - (- 135716))] = lII1(662497 - 636852);
				[lII1(- 467542 - (- 492399))] = lII1(- 391212 + 416251);
				[lII1(697014 + - 671317)] = 531377 - 531376;
				[lII1(633248 - 607923)] = lII1(938237 + - 913198)
			};
			{
				[lII1(120023 - 94307)] = lII1(946365 + - 921497);
				[lII1(- 756225 - (- 781368))] = lII1(- 516556 - (- 541937));
				[lII1(158525 - 133668)] = lII1(520944 + - 496076),
				[lII1(598611 - 572914)] = 813817 + - 813816.5;
				[lII1(- 586390 - (- 611827))] = false;
				[lII1(877691 + - 852366)] = lII1(- 798009 + 822877)
			};
			{
				[lII1(1067828 - 1042112)] = lII1(152962 - 127332);
				[lII1(817465 + - 791553)] = true;
				[lII1(- 647412 + 672540)] = lII1(- 1020478 - (- 1045696)),
				[lII1(416173 + - 391316)] = lII1(784598 - 758968),
				[lII1(- 244136 + 269833)] = - 863674.5 - (- 863675),
				[lII1(- 510384 + 535709)] = lII1(473804 - 448174)
			};
			{
				[lII1(1010815 + - 985099)] = lII1(- 374563 - (- 400044));
				[lII1(- 309802 + 335714)] = true;
				[lII1(- 821305 + 846433)] = lII1(545412 - 519600);
				[lII1(- 957285 - (- 982142))] = lII1(- 208486 + 233967);
				[lII1(449678 - 423981)] = .2,
				[lII1(- 990015 + 1015340)] = lII1(175150 - 149669)
			};
			{
				[lII1(- 41070 - (- 66786))] = lII1(- 860219 + 885760),
				[lII1(- 107043 + 132955)] = true;
				[lII1(1037184 + - 1012056)] = lII1(- 607925 - (- 633844));
				[lII1(- 863611 + 888468)] = lII1(- 152037 + 177578),
				[lII1(533297 + - 507600)] = - 703157.5 - (- 703158);
				[lII1(- 923792 - (- 949117))] = lII1(- 145124 + 170665)
			};
			{
				[lII1(- 313463 - (- 339179))] = lII1(- 780871 - (- 806329));
				[lII1(- 298793 + 324705)] = true,
				[lII1(478639 + - 453511)] = lII1(- 16260 - (- 41249));
				[lII1(- 742175 - (- 767032))] = lII1(- 813256 - (- 838714));
				[lII1(- 994655 - (- 1020352))] = 194086 + - 194082;
				[lII1(483503 + - 458178)] = lII1(- 448814 + 474272)
			};
			{
				[lII1(453550 + - 427834)] = lII1(361567 - 336618);
				[lII1(- 88812 - (- 114724))] = true;
				[lII1(- 373484 + 398612)] = lII1(596786 + - 571151),
				[lII1(540145 + - 515288)] = lII1(- 1013195 - (- 1038144));
				[lII1(- 788952 - (- 814649))] = - 589298 + 589299;
				[lII1(726627 - 701302)] = lII1(117860 + - 92911)
			},
			{
				[lII1(414765 + - 389049)] = lII1(- 728532 - (- 754359));
				[lII1(949749 - 923837)] = true;
				[lII1(- 999320 - (- 1024448))] = lII1(764339 - 738551);
				[lII1(359275 + - 334418)] = lII1(95685 - 69858),
				[lII1(- 969406 + 995103)] = .3,
				[lII1(304406 - 279081)] = lII1(712408 - 686581)
			},
			{
				[lII1(- 320362 + 346078)] = lII1(- 282281 + 308191);
				[lII1(- 317354 + 343266)] = true,
				[lII1(9736 - (- 15392))] = lII1(991313 - 966462);
				[lII1(423237 - 398380)] = lII1(248872 + - 222962);
				[lII1(616659 - 590962)] = .3,
				[lII1(929065 - 903740)] = lII1(831407 - 805497)
			},
			{
				[lII1(- 657793 - (- 683509))] = lII1(687989 + - 662570),
				[lII1(- 472247 - (- 498159))] = true,
				[lII1(740510 - 715382)] = lII1(709551 - 684405);
				[lII1(- 603674 - (- 628531))] = lII1(1041216 + - 1015797),
				[lII1(- 583922 + 609619)] = .6;
				[lII1(- 59574 - (- 84899))] = lII1(907516 + - 882097)
			};
			{
				[lII1(549284 - 523568)] = lII1(- 177189 + 202854);
				[lII1(- 781880 + 807792)] = true,
				[lII1(680565 + - 655437)] = lII1(918811 - 892988),
				[lII1(1001343 + - 976486)] = lII1(114468 + - 88803),
				[lII1(- 450318 - (- 476015))] = 365675 + - 365674;
				[lII1(- 510256 + 535581)] = lII1(- 189414 - (- 215079))
			};
			{
				[lII1(- 128689 - (- 154405))] = lII1(418510 - 393324);
				[lII1(556584 - 530672)] = true;
				[lII1(198669 - 173541)] = lII1(460049 - 434797),
				[lII1(- 99107 + 123964)] = lII1(496081 - 470895),
				[lII1(770776 - 745079)] = - 762039 - (- 762040);
				[lII1(- 393856 - (- 419181))] = lII1(599444 - 574258)
			};
			{
				[lII1(1027776 + - 1002060)] = lII1(660084 + - 635243),
				[lII1(- 1008584 - (- 1034496))] = true;
				[lII1(- 691573 + 716701)] = lII1(- 886395 + 912175);
				[lII1(743375 - 718518)] = lII1(237991 + - 213150);
				[lII1(- 125924 + 151621)] = 599220 - 599219,
				[lII1(- 51061 - (- 76386))] = lII1(233511 + - 208670)
			};
			{
				[lII1(- 514416 + 540132)] = lII1(- 1001337 - (- 1027200)),
				[lII1(460133 - 434221)] = true,
				[lII1(- 727799 + 752927)] = lII1(- 732535 + 757983);
				[lII1(678157 - 653300)] = lII1(- 387564 + 413427);
				[lII1(- 88259 - (- 113956))] = - 820537 + 820538,
				[lII1(- 914000 - (- 939325))] = lII1(- 556529 + 582392)
			};
			{
				[lII1(1038003 - 1012287)] = lII1(56866 + - 31383);
				[lII1(286121 + - 260209)] = true;
				[lII1(- 73403 - (- 98531))] = lII1(562737 + - 537160);
				[lII1(247720 + - 222863)] = lII1(571068 - 545585),
				[lII1(- 51009 - (- 76706))] = - 642483 - (- 642484);
				[lII1(570078 - 544753)] = lII1(- 863409 - (- 888892))
			};
			{
				[lII1(- 762808 + 788524)] = lII1(458478 + - 433461),
				[lII1(725323 - 699958)] = true;
				[lII1(- 666357 + 691440)] = lII1(- 434086 - (- 458926)),
				[lII1(- 987414 - (- 1012479))] = lII1(- 878331 + 903463),
				[lII1(- 340459 + 365587)] = lII1(400656 - 375532)
			},
			{
				[lII1(507440 + - 481724)] = lII1(14496 + 10488),
				[lII1(684361 - 658996)] = true,
				[lII1(769208 + - 744125)] = lII1(132644 + - 107661),
				[lII1(- 260352 - (- 285417))] = lII1(605299 + - 580477),
				[lII1(- 96035 + 121163)] = lII1(320624 - 295529)
			};
			{
				[lII1(548580 - 522864)] = lII1(- 667317 + 693247);
				[lII1(- 485407 - (- 510320))] = true,
				[lII1(- 664053 + 688910)] = lII1(744294 - 718710),
				[lII1(- 310378 + 336075)] = - 1002170 - (- 1002175),
				[lII1(- 522480 + 547805)] = lII1(667637 + - 642053);
				[lII1(- 923296 - (- 948797))] = true,
				[lII1(- 972606 + 998513)] = false;
				[lII1(- 85219 + 110108)] = true
			},
			{
				[lII1(995698 - 969982)] = lII1(79698 - 53858),
				[lII1(- 216662 - (- 241575))] = true,
				[lII1(505008 + - 480151)] = lII1(- 966292 - (- 991743)),
				[lII1(- 512720 - (- 538417))] = - 720881 - (- 720886),
				[lII1(663605 + - 638280)] = lII1(- 287103 - (- 312554)),
				[lII1(- 966946 - (- 992447))] = true;
				[lII1(- 283945 + 309852)] = false,
				[lII1(82083 + - 57194)] = true
			};
			{
				[lII1(586674 + - 560958)] = lII1(- 783480 + 808333);
				[lII1(784888 + - 759975)] = true,
				[lII1(548081 + - 523224)] = lII1(898047 - 872763);
				[lII1(- 919805 + 945502)] = - 821625 + 821630,
				[lII1(806201 + - 780876)] = lII1(510579 - 485295),
				[lII1(366728 - 341227)] = true,
				[lII1(698792 - 672885)] = false,
				[lII1(540649 - 515760)] = true
			};
			{
				[lII1(- 903548 + 929264)] = lII1(- 589170 + 614426);
				[lII1(452398 + - 426988)] = {
					- 1040632 - (- 1046144);
					- 894396 + 899907;
					- 764403 - (- 769912);
					- 641838 - (- 647348),
					325354 + - 315933,
					- 875877 - (- 897980);
					1032192 + - 995303;
					1073308 - 1036416
				};
				[lII1(840442 + - 814745)] = .3
			};
			{
				[lII1(491375 + - 465659)] = lII1(- 663558 - (- 688565)),
				[lII1(- 372908 + 398318)] = {
					- 103523 + 103641;
					58236 - 57378;
					741592 - 740663;
					- 791865 + 793575,
					- 330218 + 334146;
					543222 - 529776,
					- 680181 + 719852,
					559729 + - 526282
				};
				[lII1(- 594866 + 620563)] = .3
			};
			{
				[lII1(- 357752 - (- 383468))] = lII1(- 699449 - (- 724726));
				[lII1(- 806905 + 832315)] = - 673314 - (- 713526);
				[lII1(442702 - 417005)] = .3
			};
			{
				[lII1(43029 - 17313)] = lII1(488111 + - 462216),
				[lII1(- 104034 - (- 129444))] = 910780 + - 870569,
				[lII1(- 435341 - (- 461038))] = .3
			},
			{
				[lII1(1053300 - 1027584)] = lII1(424301 + - 398806);
				[lII1(810746 - 785336)] = - 1004735 + 1044828;
				[lII1(- 552849 - (- 578546))] = .3
			};
			{
				[lII1(- 116848 - (- 142564))] = lII1(- 924605 + 949573),
				[lII1(434541 + - 409131)] = - 748761 - (- 789880);
				[lII1(- 718614 - (- 744311))] = 204262 + - 204261.5;
				[lII1(- 513338 - (- 538481))] = lII1(- 93020 - (- 118308))
			};
			{
				[lII1(535537 + - 509821)] = lII1(- 552954 - (- 578226));
				[lII1(849658 + - 824248)] = - 270696 + 311815,
				[lII1(- 60258 + 85955)] = .3,
				[lII1(284905 + - 259762)] = lII1(- 694279 - (- 720182))
			};
			{
				[lII1(- 406061 + 431777)] = lII1(1013671 - 988095);
				[lII1(786424 + - 761014)] = 730950 - 688309,
				[lII1(782104 - 756407)] = .3,
				[lII1(- 515056 + 540199)] = lII1(879236 - 853754)
			};
			{
				[lII1(- 856519 - (- 882235))] = lII1(- 432685 + 457808),
				[lII1(- 605683 + 631093)] = - 184742 + 227383,
				[lII1(- 884219 + 909916)] = .3;
				[lII1(- 242984 + 268127)] = lII1(345035 - 319594)
			},
			{
				[lII1(- 685378 - (- 711094))] = lII1(- 812985 + 838274),
				[lII1(- 965117 - (- 990527))] = 943012 - 909564;
				[lII1(- 907772 + 933469)] = .3
			};
			{
				[lII1(55893 - 30177)] = lII1(- 771798 - (- 796793)),
				[lII1(956926 + - 931783)] = lII1(- 74820 - (- 100003)) .. (lllll .. lII1(421048 - 395372));
				[lII1(403437 + - 377740)] = .3;
				[lII1(469423 + - 444098)] = lII1(- 384620 + 409615)
			};
			{
				[lII1(554020 - 528304)] = lII1(652852 + - 627109);
				[lII1(- 518458 - (- 543601))] = lII1(- 26205 - (- 51938)),
				[lII1(668661 + - 643804)] = lII1(- 1009407 + 1034431),
				[lII1(574290 - 548593)] = 265131 - 265128;
				[lII1(980606 + - 955281)] = lII1(- 1002047 + 1027091)
			};
			{
				[lII1(966654 + - 940938)] = lII1(802706 - 776824),
				[lII1(- 662206 - (- 687349))] = lII1(- 14752 - (- 40673));
				[lII1(1063129 - 1038272)] = lII1(- 69886 - (- 94947));
				[lII1(- 240839 - (- 266536))] = 617590 - 617587;
				[lII1(181586 - 156261)] = lII1(- 625081 - (- 649972))
			},
			{
				[lII1(1030067 - 1004351)] = lII1(802806 - 777848);
				[lII1(524016 + - 498873)] = lII1(307059 - 281641),
				[lII1(761168 - 736311)] = lII1(228135 + - 202364),
				[lII1(165381 - 139684)] = - 892028 + 892029;
				[lII1(- 669577 - (- 694902))] = lII1(- 237991 + 263339)
			};
			{
				[lII1(- 533425 + 559141)] = lII1(739540 - 714550),
				[lII1(- 866683 + 891826)] = lII1(- 351275 + 376271),
				[lII1(- 954366 + 979223)] = lII1(1028452 - 1002751);
				[lII1(218439 - 192742)] = 335914 + - 335913,
				[lII1(- 59382 - (- 84707))] = lII1(661108 + - 635485)
			};
			{
				[lII1(- 57391 - (- 83107))] = lII1(757342 - 731575),
				[lII1(871803 + - 846660)] = lII1(- 72103 - (- 97955));
				[lII1(500296 - 475439)] = lII1(972644 - 946877),
				[lII1(240423 + - 214726)] = 444974 + - 444971,
				[lII1(142500 + - 117175)] = lII1(651444 + - 625932)
			}
		}
		function I1lI1.OIIIOO(lll)
			local Ill = {}
			local III1, l1I1 = I1lI1[lII1(386412 + - 361219)]()
			local function I1I1(lll, Ill)
				if not lll then
					return
				end
				for lll, lII1 in l111(lll) do
					if lII1 == Ill then
						return true
					end
				end
			end
			local function llI1(lll)
				local Ill = {}
				for lll, III1 in II11(lll) do
					if IIIl(III1) == lII1(129700 + - 103871) then
						Ill[lll] = {}
						for lII1, III1 in II11(III1) do
							Ill[lll][lII1] = III1
						end
					else
						Ill[lll] = III1
					end
				end
				return Ill
			end
			local function IlI1(lll, Ill, III1, l1I1, I1I1)
				local IlI1 = llI1(lll)
				local lI11 = l1I1[lII1(- 1000693 - (- 1026432))]
				IlI1[lII1(- 50414 - (- 76130))] = Ill
				IlI1[lII1(- 410042 - (- 434925))] = III1
				IlI1[lII1(176432 - 150693)] = l1I1[lII1(- 256542 - (- 282281))]
				if I1I1 then
					IlI1[lII1(40353 + - 15496)] = l1I1[lII1(799225 + - 773486)]
				else
					IlI1[lII1(- 189862 + 214719)] = IlIl(III1)
					lI11 = IlI1[lII1(624435 + - 599578)]
				end
				local l111 = false
				if lll[lII1(597427 + - 571873)] then
					l111 = true
				end
				local I111 = lII1(- 660481 - (- 686325))
				if I1lI1[lII1(901947 - 876603)] == lII1(919036 + - 893540) or I1lI1[lII1(898748 + - 873404)] == lII1(- 787338 - (- 812793)) or I1lI1[lII1(642164 + - 616820)] == lII1(925053 + - 899257) then
					I111 = lII1(- 95715 + 121559)
				end
				if lll[lII1(- 195163 - (- 220711))] then
					for lll, Ill in II11(lll[lII1(- 40737 + 66285)]) do
						if IlIl(Ill) then
							l111 = true
							I111 = I111 .. (lII1(855544 - 830266) .. (Ill .. lII1(574258 + - 549255)))
						end
					end
				end
				if lll[lII1(495215 + - 469339)] then
					for lll, Ill in II11(lll[lII1(- 940925 + 966801)]) do
						if IlIl(Ill) then
							if not IlI1[lII1(1072153 - 1046784)] then
								IlI1[lII1(348867 - 323498)] = {}
							end
							IlI1[lII1(124540 - 99171)][# IlI1[lII1(- 957566 + 982935)] + (- 227430 - (- 227431))] = Ill
						end
					end
				end
				if lll[lII1(708210 - 682677)] then
					I111 = I111 .. lII1(- 683155 - (- 708022))
				end
				if lll[lII1(721078 + - 695199)] and I1lI1[lII1(- 905660 + 930508)] then
					I111 = I111 .. (lII1(- 994623 + 1019901) .. (I1lI1[lII1(- 459054 + 483902)][lll[lII1(- 148750 - (- 174629))]] .. lII1(558641 + - 533638)))
				end
				if lll[lII1(- 485807 + 511307)] then
					I111 = I111 .. (lll[lII1(586418 + - 560918)] .. lII1(- 383404 + 408407))
					l111 = true
				end
				if lll[lII1(- 546993 + 572136)] then
					I111 = I111 .. (lll[lII1(231783 + - 206640)] .. lII1(99235 + - 74232))
				else
					if lll[lII1(98815 - 73378)] == true then
						I111 = I111 .. (lII1(695406 - 669493) .. (lI11 .. lII1(- 593352 - (- 618355))))
					else
						I111 = I111 .. (lII1(10528 + 14750) .. (lI11 .. lII1(- 604425 - (- 629428))))
					end
				end
				if lll[lII1(403302 - 377580)] then
					l111 = true
					I111 = I111 .. ((lll[lII1(874875 + - 849153)] or lII1(- 82147 + 107991)) .. lII1(376172 + - 351169))
				end
				if l111 then
					I111 = Il1ll .. (I111 .. lIlll)
				end
				IlI1[lII1(421741 + - 396598)] = I111
				if l1I1[lII1(- 449582 + 474472)] > 966014 + - 966014 then
					IlI1[lII1(- 838202 + 863091)] = true
					IlI1[lII1(- 304969 - (- 330666))] = l1I1[lII1(- 787519 - (- 812409))] / (604915 + - 603915)
					if Ill == lII1(682869 + - 657430) then
						IlI1[lII1(- 111107 - (- 136804))] = IlI1[lII1(- 57090 - (- 82787))] + (- 474158 - (- 474159))
					end
				elseif not lll[lII1(874811 + - 849114)] then
					IlI1[lII1(- 433069 + 458766)] = - 338537 - (- 338538)
				end
				IlI1[lII1(- 892751 - (- 918076))] = l1I1[lII1(- 778606 - (- 804345))]
				IlI1[lII1(- 924605 + 949759)] = l1I1[lII1(780857 - 755703)]
				IlI1[lII1(33482 - 7648)] = I1lI1[lII1(- 263848 + 289414)](III1) or 364715 + - 364715
				IlI1[lII1(- 728055 + 753391)] = l1I1[lII1(- 381868 + 407204)]
				IlI1[lII1(- 84899 + 110730)] = l1I1[lII1(- 211879 + 237710)]
				IlI1[lII1(627571 + - 602016)] = l1I1[lII1(399916 + - 374361)]
				IlI1[lII1(405261 - 379436)] = l1I1[lII1(- 438093 - (- 463918))]
				IlI1[lII1(- 847866 + 872756)] = l1I1[lII1(- 63465 - (- 88355))]
				IlI1[lII1(- 498973 - (- 524848))] = l1I1[lII1(- 59536 - (- 85411))]
				IlI1[lII1(873014 - 847482)] = lll[lII1(70626 + - 45094)]
				return IlI1
			end
			for Ill = - 383148 + 383149, # l1III1, 556465 + - 556464 do
				lll1(lll, l1III1[Ill])
			end
			for III1 = - 248487 - (- 248488), # lll, - 546033 + 546034 do
				local l1I1 = lll[III1]
				if l1I1[lII1(- 568127 - (- 593010))] then
					local lll = l1I1[lII1(- 89840 - (- 115556))]
					if IIIl(l1I1[lII1(- 276265 + 301148)]) == lII1(398188 + - 372557) then
						lll = l1I1[lII1(956336 - 931453)]
					end
					if l1I1[lII1(- 7240 - (- 32097))] then
						lll = l1I1[lII1(475591 - 450734)]
					end
					local III1, I1I1, lI11, II11, I111, ll11, Il11 = IlIl(lll)
					if III1 then
						l1I1[lII1(816313 + - 791430)] = Il11
						if l1I1[lII1(- 184847 - (- 210151))] then
							l1I1[lII1(- 199078 + 224292)] = III1
						end
						if l1I1[lII1(- 329560 - (- 355371))] then
							l1I1[lII1(446635 - 421421)] = III1
							l1I1[lII1(- 103905 - (- 129636))] = true
						end
						if l1I1[lII1(945679 - 920765)] then
							l1I1[lII1(- 561329 + 586214)] = III1
						end
						if l1I1[lII1(- 337194 + 362878)] then
							l1I1[lII1(- 543921 + 568806)] = III1
							l1I1[lII1(30891 - 6048)] = true
						end
						if III1 == lII1(- 228077 - (- 253672)) or III1 == lII1(117649 - 91811) then
							local lll = llI1(l1I1)
							lll[lII1(- 938941 + 964266)] = III1
							lll[lII1(762424 + - 737567)] = III1
							lll[lII1(143332 + - 118189)] = lII1(- 855355 + 880633) .. III1
							lll[lII1(678037 - 652340)] = 859584 - 859579
							Ill[# Ill + (- 670644 - (- 670645))] = lll
						else
							local III1, I1I1 = l1lll(l1I1[lII1(666983 - 642100)])
							if III1 then
								if l1I1[lII1(420589 + - 395328)] then
									local III1, I1I1 = I1lI1[lII1(909052 + - 883859)]()
									local llI1 = I1I1[lll]
									if llI1 and # llI1 > - 949821 + 949822 then
										for lll, III1 in l111(llI1) do
											if lll < # llI1 then
												local I1I1 = IlI1(l1I1, l1I1[lII1(463650 - 437934)] .. lll, III1[lII1(- 692419 - (- 717302))], III1, true)
												I1I1[lII1(- 365931 + 391049)] = lll
												Ill[# Ill + (- 560945 + 560946)] = I1I1
											end
										end
									end
								end
								local I1I1 = IlI1(l1I1, l1I1[lII1(- 25825 + 51541)], III1[lII1(- 275881 + 300764)], III1, true)
								Ill[# Ill + (- 847034 + 847035)] = I1I1
								local llI1 = l1I1[lII1(1071796 - 1046080)]
								if I1lI1[lII1(909279 - 883899)] then
								end
							end
						end
					end
				elseif l1I1[lII1(580402 + - 554992)] then
					local lll = llI1(l1I1)
					if IIIl(lll[lII1(- 793145 + 818555)]) == lII1(515120 + - 489291) then
						if not lll[lII1(- 131246 - (- 156389))] then
							local Ill = lII1(310570 + - 284726)
							local III1 = lII1(58786 + - 32942)
							for l1I1, I1I1 in l111(lll[lII1(- 601905 - (- 627315))]) do
								III1 = GetItemInfo(I1I1)
								if III1 then
									Ill = lII1(- 242030 - (- 267944)) .. (III1 .. Ill)
									lll[lII1(- 585432 - (- 610803))] = III1
								end
							end
							lll[lII1(- 787138 - (- 812281))] = Ill
							if not lll[lII1(302121 + - 276424)] then
								lll[lII1(- 299913 - (- 325610))] = .2
							end
						else
							lll[lII1(- 266702 - (- 292073))] = lll[lII1(934256 - 908540)]
						end
						lll[lII1(- 1011007 + 1036332)] = l1I1[lII1(- 656641 - (- 682357))]
						Ill[# Ill + (1041793 - 1041792)] = lll
					else
						local III1 = I1lI1[lII1(995263 + - 969814)](lll[lII1(- 161764 - (- 187174))])
						if III1 then
							lll[lII1(434184 - 408813)] = III1
							if not lll[lII1(878843 + - 853700)] then
								lll[lII1(687669 + - 662526)] = lII1(816651 - 791353) .. III1
							end
							if not lll[lII1(866971 - 841274)] then
								lll[lII1(287593 + - 261896)] = .2
							end
							lll[lII1(- 630343 - (- 655668))] = III1
							Ill[# Ill + (452078 + - 452077)] = lll
						end
					end
				elseif l1I1[lII1(366687 - 340971)] == lII1(- 702262 + 728192) then
					local lll = llI1(l1I1)
					lll[lII1(- 218791 + 244116)] = GetItemInfo(907659 - 899580) or lII1(713421 - 688373)
					lll[lII1(- 808737 - (- 833594))] = GetItemInfo(- 293530 - (- 301609)) or lII1(604403 + - 579355)
					lll[lII1(- 683135 - (- 708278))] = lII1(- 645876 + 671174) .. (GetItemInfo(- 364765 - (- 372844)) or lII1(- 581275 - (- 606323)))
					lll[lII1(- 266248 - (- 291945))] = 1015487 + - 1015482
					Ill[# Ill + (798970 - 798969)] = lll
				elseif l1I1[lII1(- 625203 + 650919)] == lII1(- 47073 + 72913) then
					local lll = llI1(l1I1)
					lll[lII1(- 837946 + 863271)] = GetItemInfo(7660 - (- 416)) or lII1(- 678517 + 704039)
					lll[lII1(989183 + - 964326)] = GetItemInfo(677377 - 669301) or lII1(526690 - 501168)
					lll[lII1(- 96429 - (- 121572))] = lII1(- 369818 - (- 395116)) .. (GetItemInfo(- 206107 - (- 214183)) or lII1(101780 - 76258))
					lll[lII1(- 773080 - (- 798777))] = 612659 + - 612654
					Ill[# Ill + (343211 + - 343210)] = lll
				elseif l1I1[lII1(- 35758 - (- 61474))] == lII1(- 429913 - (- 454766)) then
					local lll = llI1(l1I1)
					lll[lII1(487973 - 462830)] = lII1(867212 - 841914) .. ((GetItemInfo(- 189414 + 197490) or lII1(226471 + - 200949)) .. (lII1(270056 + - 244142) .. (GetItemInfo(161716 - 153637) or lII1(- 81137 - (- 106659)))))
					lll[lII1(- 408652 - (- 434349))] = 346283 + - 346278
					Ill[# Ill + (835130 + - 835129)] = lll
				elseif l1I1[lII1(103331 + - 78412)] and (l1I1[lII1(138189 - 113124)] and l1I1[lII1(710749 - 685621)]) then
					I1lI1[lII1(682293 + - 656977)][# I1lI1[lII1(575858 + - 550542)] + (- 82018 - (- 82019))] = {
						[lII1(- 660916 + 686632)] = l1I1[lII1(- 120689 - (- 146405))],
						[lII1(116496 - 91171)] = l1I1[lII1(- 181689 - (- 207014))],
						[lII1(567816 - 542897)] = l1I1[lII1(- 464600 - (- 489519))];
						[lII1(616499 + - 591434)] = l1I1[lII1(974374 - 949309)];
						[lII1(- 628467 + 653595)] = l1I1[lII1(454165 - 429037)]
					}
					local lll = llI1(l1I1)
					lll[lII1(- 59810 + 85476)] = # I1lI1[lII1(- 117348 + 142664)]
					lll[lII1(942052 - 916924)] = nil
					lll[lII1(599731 + - 574666)] = nil
					Ill[# Ill + (- 533873 + 533874)] = lll
				elseif l1I1[lII1(1024512 + - 998600)] and l1I1[lII1(944420 - 919292)] then
					I1lI1[lII1(270248 + - 244932)][# I1lI1[lII1(755639 + - 730323)] + (- 487918 - (- 487919))] = {
						[lII1(556388 - 530672)] = l1I1[lII1(864251 + - 838535)];
						[lII1(- 964626 - (- 989951))] = l1I1[lII1(728887 + - 703562)],
						[lII1(1012095 + - 986967)] = l1I1[lII1(- 60770 + 85898)]
					}
					local lll = llI1(l1I1)
					lll[lII1(- 488687 + 514353)] = # I1lI1[lII1(- 365000 - (- 390316))]
					lll[lII1(711478 + - 686350)] = nil
					lll[lII1(75618 + - 50553)] = nil
					Ill[# Ill + (200871 - 200870)] = lll
				elseif l1I1[lII1(1066517 - 1041152)] and l1I1[lII1(968357 - 943229)] then
					I1lI1[lII1(328986 - 303465)][# I1lI1[lII1(- 30753 + 56274)] + (157990 - 157989)] = {
						[lII1(- 899401 - (- 925117))] = l1I1[lII1(543281 + - 517565)],
						[lII1(1002431 + - 977106)] = l1I1[lII1(- 328426 + 353751)];
						[lII1(633435 - 608307)] = l1I1[lII1(275280 - 250152)],
						[lII1(- 255208 + 280273)] = l1I1[lII1(- 191654 + 216719)];
						[lII1(- 800377 + 825460)] = l1I1[lII1(765368 + - 740285)]
					}
					local lll = llI1(l1I1)
					lll[lII1(- 135907 - (- 161573))] = # I1lI1[lII1(270937 - 245416)]
					lll[lII1(472214 - 447086)] = nil
					lll[lII1(954302 + - 929237)] = nil
					lll[lII1(- 346603 + 371460)] = l1I1[lII1(- 47009 + 72725)]
					lll[lII1(666593 - 641268)] = l1I1[lII1(- 146097 - (- 171813))]
					Ill[# Ill + (352428 - 352427)] = lll
				else
					Ill[# Ill + (776696 + - 776695)] = llI1(l1I1)
				end
			end
			I1lI1[lII1(501040 + - 475292)] = {}
			for lll, Ill in l111(Ill) do
				if I1lI1[lII1(- 76578 + 102326)][Ill[lII1(- 285686 - (- 311402))]] ~= nil then
					I1lI1[lII1(669237 + - 644013)](lII1(768441 - 742583) .. (Ill[lII1(- 4077 - (- 29793))] .. (lII1(700534 + - 675036) .. Ill[lII1(- 793484 - (- 818809))])))
				end
				Ill[lII1(782328 + - 757463)] = lll
				I1lI1[lII1(9587 - (- 16161))][Ill[lII1(530468 - 504752)]] = Ill
			end
			if not I1lI1[lII1(- 975806 + 1001033)] then
				I1lI1[lII1(- 122563 - (- 147685))](Ill)
			end
			return Ill
		end
		function I1lI1.O0lllO(lll, Ill)
			if lll[lII1(1044466 - 1019584)] == 932413 + - 932412 and I1lI1[lII1(- 947709 + 973113)][lII1(881571 - 855931)] then
				local III1, l1I1 = I1lI1[lII1(- 319471 - (- 344875))][lII1(- 81379 + 107019)](nil, lll[lII1(224167 + - 199284)], Ill[lII1(- 534769 + 560473)])
				return l1I1
			end
			if lll[lII1(- 711862 + 736744)] == - 899964 + 899966 and (I1lI1[lII1(1017920 + - 992516)][lII1(757983 - 732343)] and I1lI1[lII1(564017 + - 538613)][lII1(- 863630 - (- 888508))]) then
				local Ill = - 334506 + 334506
				local III1, l1I1 = I1lI1[lII1(- 398385 - (- 423789))][lII1(- 688821 + 714461)](nil, lll[lII1(- 811591 - (- 836474))], lII1(676778 - 651700))
				Ill = l1I1
				local I1I1, llI1, IlI1 = I1lI1[lII1(974398 + - 948994)][lII1(464924 - 440046)](nil, lll[lII1(- 345195 + 370078)], lII1(925234 - 900156))
				if IIIl(l1I1) == lII1(- 532108 - (- 557937)) then
					for lll, lII1 in II11(l1I1) do
						Ill = Ill + lII1
					end
				else
					Ill = Ill + llI1 * IlI1
				end
				return Ill
			end
			if lll[lII1(681909 + - 657027)] == - 765237 - (- 765240) and I1lI1[lII1(- 745148 - (- 770552))][lII1(- 55156 - (- 80034))] then
				local III1, l1I1, I1I1 = I1lI1[lII1(- 1017988 - (- 1043392))][lII1(- 224762 - (- 249640))](nil, lll[lII1(308138 + - 283255)], Ill[lII1(- 345899 + 371603)])
				local llI1 = - 170149 - (- 170149)
				if IIIl(l1I1) == lII1(7584 + 18245) then
					for lll, Ill in II11(l1I1) do
						llI1 = llI1 + Ill
					end
				else
					llI1 = l1I1 * I1I1
				end
				return llI1
			end
			return lll[lII1(66850 + - 41037)] or 604339 + - 604339
		end
		local I1III1 = - 360171 + 360186
		local llIII1 = 169382 - 169381
		local IlIII1 = - 704500 - (- 704502)
		local lI1II1 = - 770040 + 770044
		local II1II1 = 449134 + - 449126
		local l11II1 = - 182246 + 182262
		local I11II1 = {}
		function I1lI1.O00lOI(lll)
			local Ill, III1 = I1lI1[lII1(950886 - 925693)]()
			local l1I1 = {}
			local I1I1 = {}
			local llI1 = {}
			for Ill = 118629 - 118628, # lll, - 543921 + 543922 do
				local III1 = lll[Ill]
				if III1[lII1(1016704 + - 991822)] == - 22752 - (- 22753) and I1lI1[lII1(307882 + - 282478)][lII1(- 951510 - (- 977150))] then
					local lll, IlI1, lI11 = I1lI1[lII1(- 597427 + 622831)][lII1(- 735159 + 760799)](nil, III1[lII1(- 846330 + 871213)], lII1(- 340917 - (- 365995)))
					local II11 = IlI1
					if lll == IlIII1 then
						II11 = IlI1 * lI11
					elseif lll == llIII1 then
						II11 = IlI1
					end
					III1[lII1(- 194278 + 220091)] = II11
					l1I1[# l1I1 + (- 975037 - (- 975038))] = Ill
					I1I1[# I1I1 + (- 529135 - (- 529136))] = Ill
					llI1[# llI1 + (- 29280 - (- 29281))] = Ill
					I1lI1[lII1(- 392003 - (- 417389))](III1[lII1(- 149029 + 174745)], II11)
				end
				if III1[lII1(296346 - 271464)] == - 29153 + 29155 and (I1lI1[lII1(- 742076 - (- 767480))][lII1(677020 - 651380)] and I1lI1[lII1(- 743095 + 768499)][lII1(- 374846 - (- 399724))]) then
					local lll = 253992 - 253992
					local IlI1, lI11 = I1lI1[lII1(- 412850 - (- 438254))][lII1(- 901628 + 927268)](nil, III1[lII1(- 307114 + 331997)], lII1(- 516272 + 541350))
					lll = lI11
					local l111, I111, ll11 = I1lI1[lII1(496303 + - 470899)][lII1(32718 - 7840)](nil, III1[lII1(- 293623 - (- 318506))], lII1(716587 - 691509))
					if IIIl(lI11) == lII1(- 258820 - (- 284649)) then
						for Ill, lII1 in II11(lI11) do
							lll = lll + lII1
						end
					else
						lll = lll + I111 * ll11
					end
					III1[lII1(- 101091 + 126904)] = lll
					III1[lII1(674549 + - 649206)] = ll11
					l1I1[# l1I1 + (243304 + - 243303)] = Ill
					I1I1[# I1I1 + (- 864378 - (- 864379))] = Ill
					llI1[# llI1 + (- 679861 + 679862)] = Ill
					I1lI1[lII1(311402 + - 286016)](III1[lII1(- 934845 + 960561)], III1[lII1(- 212903 + 238716)])
				end
				if III1[lII1(1026289 - 1001407)] == 434541 + - 434538 and I1lI1[lII1(- 183910 + 209314)][lII1(- 900303 - (- 925181))] then
					local lll, IlI1, lI11 = I1lI1[lII1(- 901180 + 926584)][lII1(- 667829 + 692707)](nil, III1[lII1(- 415611 - (- 440494))], lII1(- 198385 - (- 223463)))
					local l111 = 409901 + - 409901
					if IIIl(IlI1) == lII1(99591 - 73762) then
						for lll, Ill in II11(IlI1) do
							l111 = l111 + Ill
						end
					else
						l111 = IlI1 * lI11
					end
					III1[lII1(- 243432 + 269245)] = l111
					III1[lII1(- 67556 - (- 92899))] = lI11
					l1I1[# l1I1 + (- 759095 - (- 759096))] = Ill
					I1I1[# I1I1 + (401004 + - 401003)] = Ill
					llI1[# llI1 + (- 168997 + 168998)] = Ill
					I1lI1[lII1(740663 + - 715277)](III1[lII1(654952 - 629236)], III1[lII1(- 107555 + 133368)])
				end
				if (III1[lII1(321898 + - 297016)] == 26021 - 26017 or III1[lII1(1043890 - 1019008)] == 348779 + - 348774) and III1[lII1(774054 - 748983)] then
					III1[lII1(- 703734 + 729547)] = 120676 + - 120676
				end
			end
		end
		function I1lI1.OOI0lO(lll, Ill, III1)
			local l1I1, I1I1 = I1lI1[lII1(- 535665 + 560858)]()
			local llI1 = I1I1[Ill]
			if llI1 then
				if # llI1 >= - 666613 + 666614 then
					table[lII1(722116 - 696630)](lll, - 807928 - (- 807929), Ill)
					for l1I1 = # llI1 - (- 128292 + 128293), 668789 + - 668788, - 836858 + 836857 do
						if l1I1 >= III1 then
							table[lII1(774085 - 748599)](lll, 69155 - 69154, Ill .. l1I1)
						end
					end
				end
			end
		end
		function I1lI1.OII0lO()
			if not I1lI1[lII1(737207 + - 711980)] then
				I1lI1[lII1(- 71681 - (- 96803))](I1lI1[lII1(619375 - 593714)])
			end
		end
		function I1lI1.O00OIl(lll, ...)
			local Ill = lll
			if IIIl(lll) == lII1(- 196838 + 222667) then
				Ill = lll[lII1(- 568906 - (- 594610))]
			end
			if not Ill then
				return
			end
			for lll = - 100323 + 100324, IllI1, - 239782 - (- 239783) do
				local III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl = l1ll(Ill, lll)
				if not III1 then
					return
				end
				for lll = - 1000446 - (- 1000447), ll11(lII1(- 690165 + 715725), ...), - 957566 + 957567 do
					local Ill = ll11(lll, ...)
					if tostring(Il11) == tostring(Ill) or III1 == tostring(Ill) or IIIl(Ill) == lII1(15231 - (- 10400)) and IlIl(Ill) == III1 then
						return III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl
					end
				end
			end
		end
		function I1lI1.OI0llI(lll, Ill)
			local III1 = {}
			for l1I1 = - 253864 + 253865, IllI1, - 677173 + 677174 do
				local I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl, IIIl = l1ll(lll, l1I1)
				if not I1I1 then
					return III1
				end
				if Ill and I111 == lII1(606248 - 581170) or not Ill then
					III1[I1I1] = {
						[lII1(- 145957 + 170814)] = I1I1,
						[lII1(906876 + - 881722)] = llI1,
						[lII1(254286 - 228839)] = IlI1,
						[lII1(- 607539 + 632673)] = lI11;
						[lII1(- 810105 + 835367)] = II11,
						[lII1(- 935997 + 961035)] = l111,
						[lII1(- 628752 - (- 654388))] = I111,
						[lII1(- 429204 - (- 454062))] = ll11;
						[lII1(- 388456 - (- 413613))] = Il11;
						[lII1(48994 + - 24111)] = lIl1,
						[lII1(133417 - 108195)] = IIl1;
						[lII1(966965 - 941373)] = l1l1;
						[lII1(208870 + - 183601)] = I1l1,
						[lII1(257086 - 231655)] = lll1;
						[lII1(792427 - 767096)] = Ill1;
						[lII1(695030 + - 669702)] = lIIl,
						[lII1(- 204383 - (- 229927))] = IIIl,
						[lII1(575267 - 549553)] = l111 > 802105 + - 802105 and l111 - lI1l() or - 619315 - (- 619315)
					}
				end
			end
			return III1
		end
		function I1lI1.O00OII(lll, Ill)
			local III1 = {}
			for l1I1 = - 264999 - (- 265000), IllI1, - 135459 - (- 135460) do
				local I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl, IIIl = I1ll(lll, l1I1)
				if not I1I1 then
					return III1
				end
				if Ill and I111 == lII1(- 311786 + 336864) or not Ill then
					III1[I1I1] = {
						[lII1(- 917884 + 942741)] = I1I1,
						[lII1(696758 + - 671604)] = llI1,
						[lII1(- 805011 - (- 830458))] = IlI1;
						[lII1(- 646964 + 672098)] = lI11,
						[lII1(138724 + - 113462)] = II11;
						[lII1(- 407341 + 432379)] = l111,
						[lII1(982718 + - 957082)] = I111,
						[lII1(- 358763 + 383621)] = ll11;
						[lII1(320874 + - 295717)] = Il11,
						[lII1(695592 - 670709)] = lIl1,
						[lII1(- 200358 + 225580)] = IIl1;
						[lII1(222887 + - 197295)] = l1l1,
						[lII1(- 854278 - (- 879547))] = I1l1,
						[lII1(- 360875 + 386306)] = lll1,
						[lII1(395614 - 370283)] = Ill1;
						[lII1(358827 + - 333499)] = lIIl;
						[lII1(433205 - 407661)] = IIIl;
						[lII1(73363 - 47649)] = l111 > 950397 + - 950397 and l111 - lI1l() or - 526384 - (- 526384)
					}
				end
			end
			return III1
		end
		function I1lI1.OIIl0l(lll)
			if not lll then
				return
			end
			for Ill = - 637492 + 637493, IllI1, 361899 + - 361898 do
				local III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1 = l1ll(lll, Ill)
				if not III1 then
					return
				end
				if llI1 == lII1(- 708805 - (- 734199)) then
					return III1, ll11, l111
				end
			end
		end
		function I1lI1.O0lI0l(lll)
			if not lll then
				return
			end
			for Ill = 435886 + - 435885, IllI1, - 638579 - (- 638580) do
				local lII1, III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1 = l1ll(lll, Ill)
				if not lII1 then
					return
				end
				if II11 then
					return lII1, I111, II11, IlI1
				end
			end
		end
		function I1lI1.OOIIII(lll, ...)
			local Ill, III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1 = I1lI1[lII1(317772 - 292585)](lll, ...)
			if Ill and lI11 == lII1(307871 - 282793) then
				return true
			end
			return false
		end
		function I1lI1.O0O0I0(lll, ...)
			local Ill, III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1 = I1lI1[lII1(- 380012 + 405598)](lll, ...)
			if Ill and lI11 == lII1(686453 + - 661375) then
				return true
			end
			return false
		end
		function I1lI1.O0lIO0(lll, Ill)
			local III1, l1I1, I1I1, llI1, IlI1, lI11, II11 = IlIl(Ill)
			if not III1 then
				return false
			end
			local l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl, IIIl, l1Il, I1Il, llIl, lI1l, II1l = I1lI1[lII1(519570 - 494383)](lll, Ill)
			if not l111 then
				return true
			end
			return false
		end
		function I1lI1.OIl00O(lll, ...)
			local Ill = I1lI1[lII1(- 364459 + 389646)](lll, ...)
			if Ill then
				return true
			else
				return false
			end
		end
		function I1lI1.OOO0II(lll, Ill, III1)
			if IIIl(lll) == lII1(- 767956 - (- 793785)) then
				lll = lll[lII1(445550 + - 419846)]
			end
			if not lll then
				return 153957 + - 153957
			end
			if IIIl(Ill) == Integer then
				Ill = IlIl(Ill)
			end
			for l1I1 = - 599474 - (- 599475), IllI1, 626035 + - 626034 do
				local I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl, l1Il = l1ll(lll, l1I1)
				if not I1I1 then
					return 99811 + - 99811
				end
				if (Ill == I1I1 or Ill == lIl1 or IIIl(Ill) == lII1(137508 + - 111877) and IlIl(Ill) == I1I1) and l111 then
					if III1 and I111 == lII1(732588 - 707510) then
						return l111 - lI1l()
					end
					if not III1 then
						return l111 - lI1l()
					end
				end
			end
			return - 71266 - (- 71266)
		end
		function I1lI1.OlOII0(lll, Ill, III1)
			if IIIl(lll) == lII1(- 808661 - (- 834490)) then
				lll = lll[lII1(- 559537 + 585241)]
			end
			if not lll then
				return 515824 - 515824
			end
			if IIIl(Ill) == Integer then
				Ill = IlIl(Ill)
			end
			for l1I1 = 601523 + - 601522, IllI1, 848955 - 848954 do
				local I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl, l1Il = I1ll(lll, l1I1)
				if not I1I1 then
					return 997055 - 997055
				end
				if (Ill == I1I1 or Ill == lIl1 or IIIl(Ill) == lII1(- 11330 - (- 36961)) and IlIl(Ill) == I1I1) and l111 then
					if III1 and I111 == lII1(- 395052 + 420130) then
						return l111 - lI1l()
					end
					if not III1 then
						return l111 - lI1l()
					end
				end
			end
			return - 207142 + 207142
		end
		function I1lI1.OOIl00(lll, ...)
			local Ill = lll
			if IIIl(lll) == lII1(- 86371 + 112200) then
				Ill = lll[lII1(- 791313 - (- 817017))]
			end
			if not Ill then
				return
			end
			for lll = - 93667 + 93668, IllI1, 761272 + - 761271 do
				local III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl = I1ll(Ill, lll)
				if not III1 then
					return
				end
				for lll = - 456941 - (- 456942), ll11(lII1(707277 - 681717), ...), - 1018688 + 1018689 do
					local Ill = ll11(lll, ...)
					if tostring(Il11) == tostring(Ill) or III1 == tostring(Ill) or IIIl(Ill) == lII1(718292 - 692661) and IlIl(Ill) == III1 then
						return III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl
					end
				end
			end
		end
		function I1lI1.OIlllI(lll, ...)
			local Ill = I1lI1[lII1(- 871178 - (- 896764))](lll, ...)
			if Ill then
				return true
			else
				return false
			end
		end
		function I1lI1.Ol0Ill(lll, Ill)
			for Ill, III1 in II11(Ill) do
				if I1lI1[lII1(363115 + - 337529)](lll, III1) then
					return true
				end
			end
		end
		function I1lI1.OlOOlO(lll, Ill)
			local lII1 = 273832 + - 273832
			for III1 = - 275240 - (- 275241), IllI1, 355307 + - 355306 do
				local l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl = I1ll(lll, III1)
				if not l1I1 then
					break
				end
				if IlI1 == Ill then
					lII1 = lII1 + (873980 - 873979)
				end
			end
			return lII1
		end
		function I1lI1.OIl0l0(lll, Ill)
			for III1 = - 817401 + 817402, IllI1, 885756 - 885755 do
				local l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl = l1ll(lll, III1)
				if not l1I1 then
					break
				end
				if l1I1 == Ill or Ill == Il11 or IIIl(Ill) == lII1(138563 - 112932) and IlIl(Ill) == l1I1 then
					if llI1 > - 900924 + 900924 then
						return llI1
					else
						return - 1046655 - (- 1046656)
					end
				end
			end
			return - 959102 - (- 959102)
		end
		function I1lI1.OI0OOO(lll, Ill)
			for III1 = - 679285 + 679286, IllI1, - 747319 + 747320 do
				local l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl = I1ll(lll, III1)
				if not l1I1 then
					break
				end
				if l1I1 == Ill or Ill == Il11 or IIIl(Ill) == lII1(- 344683 + 370314) and IlIl(Ill) == l1I1 then
					if llI1 > 581042 + - 581042 then
						return llI1
					else
						return - 332074 + 332075
					end
				end
			end
			return - 798457 - (- 798457)
		end
		function I1lI1.O0IIIO(lll, Ill)
			local III1 = 941373 - 941373
			for l1I1 = 1039425 - 1039424, IllI1, - 399851 - (- 399852) do
				local I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11, Il11, lIl1, IIl1, l1l1, I1l1, lll1, Ill1, lIIl, l1Il = I1ll(lll, l1I1)
				if not I1I1 then
					break
				end
				if I1I1 == Ill or Ill == lIl1 or IIIl(Ill) == lII1(- 629364 + 654995) and IlIl(Ill) == I1I1 then
					if I111 == lII1(- 480367 + 505445) then
						III1 = III1 + IlI1
					end
				end
			end
			return III1
		end
		function I1lI1.OlOIII(lll)
			return I1lI1[lII1(- 127076 + 151928)](lll, lII1(568099 - 542705))
		end
		function I1lI1.OlO00l(lll)
			return I1lI1[lII1(739831 + - 714979)](lll, lII1(- 1007027 - (- 1032448)))
		end
		function I1lI1.O0OOI0(lll)
			return I1lI1[lII1(566770 + - 541918)](lll, lII1(- 429966 - (- 455022)))
		end
		function I1lI1.OO0OIl(lll)
			return I1lI1[lII1(- 635872 - (- 660724))](lll, lII1(231783 + - 206136))
		end
		function I1lI1.OI0OlI(lll)
			for Ill = - 201638 - (- 201638), 132812 - 132772, 377260 + - 377259 do
				local III1, l1I1, I1I1, llI1, IlI1, lI11 = C_Minimap[lII1(955911 - 931069)](Ill)
				if III1 == lll then
					return I1I1
				end
			end
			return false
		end
		function I1lI1.OOl0l0(lll)
			for Ill = - 194086 - (- 194086), 798969 + - 798929, 684341 + - 684340 do
				local III1, l1I1, I1I1, llI1, IlI1, lI11 = C_Minimap[lII1(- 928893 + 953735)](Ill)
				if III1 == lll then
					C_Minimap[lII1(- 538929 + 564478)](Ill, true)
				end
			end
		end
		local ll1II1 = {
			- 787896 + 831419,
			358763 + - 315245,
			- 41236 - (- 75298),
			310571 - 288553,
			964332 - 933629;
			686197 + - 678118,
			716022 + - 707944;
			- 290153 + 298230;
			- 581746 + 585518,
			983702 - 981566,
			100243 - 97955;
			- 635316 + 640666;
			- 21484 - (- 22689);
			- 337258 + 338903;
			769080 + - 760314,
			789476 - 787768;
			- 48071 - (- 49250);
			- 379213 - (- 379372)
		}
		local Il1II1 = {
			- 210663 + 255413
		}
		function I1lI1.OO0OO0()
			local lll = UnitLevel(lII1(- 483055 + 508133))
			for Ill = - 133604 + 133605, # ll1II1, 125604 + - 125603 do
				if I1lI1[lII1(- 20518 - (- 45665))](ll1II1[Ill]) > 242792 + - 242792 then
					local lII1, III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11 = GetItemInfo(ll1II1[Ill])
					if lII1 and (llI1 and (lll >= llI1 and IsUsableItem(ll1II1[Ill]))) then
						return ll1II1[Ill]
					end
				end
			end
			for Ill = - 224999 + 225000, # Il1II1, 501936 + - 501935 do
				if I1lI1[lII1(- 936515 - (- 961662))](Il1II1[Ill]) > - 937533 - (- 937533) then
					local lII1, III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11 = GetItemInfo(Il1II1[Ill])
					if lII1 and (llI1 and (lll >= llI1 and IsUsableItem(Il1II1[Ill]))) then
						return Il1II1[Ill]
					end
				end
			end
		end
		function I1lI1.Ol00OI(lll)
			if not lll then
				lll = lII1(1012927 + - 987849)
			end
			return I1lI1[lII1(- 93091 + 118504)](lll, lII1(775847 - 750263)) or I1lI1[lII1(- 510192 + 535605)](lll, lII1(- 960702 + 985911)) or I1lI1[lII1(- 403112 - (- 428525))](lll, lII1(19937 + 5240))
		end
		function I1lI1.O0lO0I(lll)
			if not lll then
				lll = lII1(- 80301 - (- 105379))
			end
			return I1lI1[lII1(207723 - 182310)](lll, lII1(253379 - 228455))
		end
		function I1lI1.OllOlI()
			return IsMounted()
		end
		local lIlII1 = {
			- 958206 + 1001729,
			148965 + - 105447,
			- 294249 + 328311,
			- 990844 - (- 1012863);
			423515 - 400620;
			806137 + - 806020;
			168933 + - 160857,
			- 647028 + 655103;
			152613 + - 151126;
			645428 + - 644314,
			- 896956 + 898069;
			901052 + - 895703;
			590280 - 588210;
			- 531769 - (- 536305),
			- 190566 + 191697,
			- 919677 + 924278,
			536728 - 535601;
			- 636148 + 640690,
			- 525171 - (- 529712),
			- 593586 + 598126,
			- 256448 - (- 289897);
			935805 + - 926855;
			- 12128 + 16672
		}
		function I1lI1.OOlI00()
			local lll = UnitLevel(lII1(1020288 + - 995210))
			for Ill = 134692 + - 134691, # lIlII1, 161573 + - 161572 do
				if I1lI1[lII1(- 37863 - (- 63010))](lIlII1[Ill]) > 10528 + - 10528 then
					local lII1, III1, l1I1, I1I1, llI1, IlI1, lI11, II11, l111, I111, ll11 = GetItemInfo(lIlII1[Ill])
					if lII1 and (llI1 and (lll >= llI1 and IsUsableItem(lIlII1[Ill]))) then
						return lIlII1[Ill]
					end
				end
			end
		end
		function I1lI1.O0lIlI()
			return I1lI1[lII1(- 782194 - (- 807481))]()
		end
		function I1lI1.OOIlOl()
			return I1lI1[lII1(- 780472 + 806362)]()
		end
		local function IIlII1()
			local lll, Ill, lII1, III1 = GetSpellTabInfo(GetNumSpellTabs())
			return lII1 + III1
		end
		local function l1lII1(lll, Ill)
			local III1 = {}
			string[lII1(490810 - 465006)](lll, lII1(1029824 + - 1003939) .. (Ill .. lII1(- 694620 - (- 719798))), function(lll)
				table[lII1(- 705449 - (- 730935))](III1, lll)
			end)
			return III1
		end
		I1lI1[lII1(299433 + - 274119)] = l1lII1
		function I1lI1.OI00I0()
			local lll, Ill = pcall(function()
				GetItemSpell(- 477231 + 482581)
				GetItemSpell(- 731666 - (- 737015))
				GetItemInfo(981325 - 973246)
				GetItemInfo(124272 - 116196)
				GetItemInfo(731668 - 690549)
				GetItemInfo(- 1008191 + 1048402)
				GetItemInfo(- 243029 - (- 283241))
				I1lI1[lII1(- 183398 + 208685)]()
				I1lI1[lII1(- 213637 - (- 239527))]()
			end)
			if not lll and Ill then
				print(lII1(957310 + - 932027), Ill)
			end
			I1lI1[lII1(- 821369 + 846758)] = true
		end
		local I1lII1
		local lllII1
		local function IllII1(lll)
			if I1lI1[lII1(576818 + - 551438)] then
				if not I1lII1 or lll then
					local lll = GetCVar(lII1(198132 - 173029))
					if lll == lII1(521114 - 495279) then
						SetCVar(lII1(856891 + - 831788), lII1(- 586290 + 611846))
					end
					I1lII1 = {}
					lllII1 = {}
					local Ill = lII1(544177 + - 518333)
					local III1 = 1048320 - 1048320
					if lIlI1() > lIlI1({
						[lII1(- 504816 + 530315)] = 712502 + - 710477;
						[lII1(- 221813 - (- 247208))] = - 241571 - (- 241575);
						[lII1(731319 + - 706104)] = 1002623 + - 1002616
					}) then
						throw(lII1(- 726851 - (- 752695)))
					end
					for lll = 869243 + - 869242, IIlII1(), 737847 + - 737846 do
						local l1I1, I1I1 = GetSpellBookItemName(lll, BOOKTYPE_SPELL)
						if not l1I1 then
							break
						end
						local llI1, IlI1, lI11, II11, l111, I111, ll11 = IlIl(l1I1)
						if llI1 then
							I1lII1[ll11] = {}
							I1lII1[ll11][lII1(788856 + - 763999)] = l1I1
							I1lII1[ll11][lII1(- 483677 - (- 509552))] = I1I1
							I1lII1[ll11][lII1(114852 + - 89027)] = skillType
							I1lII1[ll11][lII1(823148 - 798265)] = ll11
							I1lII1[ll11][lII1(- 251823 - (- 276713))] = II11
							I1lII1[ll11][lII1(- 977560 - (- 1003391))] = l111
							I1lII1[ll11][lII1(- 330282 + 355618)] = I111
							I1lII1[ll11][lII1(784120 + - 758966)] = lI11
							I1lII1[ll11][lII1(- 410843 - (- 436398))] = IlI1
							if Ill ~= l1I1 then
								Ill = l1I1
								III1 = - 825657 - (- 825658)
							else
								III1 = III1 + (1032961 - 1032960)
							end
							if IlI1 == nil then
								I1lII1[ll11][lII1(460928 - 435373)] = III1
							end
							I1lII1[ll11][lII1(591869 - 566130)] = l1I1
							if not lllII1[l1I1] then
								lllII1[l1I1] = {}
							end
							lllII1[l1I1][# lllII1[l1I1] + (356907 + - 356906)] = I1lII1[ll11]
						end
					end
				end
				SetCVar(lII1(- 231527 + 256630), showranks)
				return I1lII1, lllII1
			else
				if not I1lII1 or lll then
					local lll = GetCVar(lII1(670019 - 644916))
					if lll == lII1(- 1019776 + 1045611) then
						SetCVar(lII1(648130 - 623027), lII1(803660 - 778104))
					end
					I1lII1 = {}
					lllII1 = {}
					local Ill = lII1(93731 + - 67887)
					local III1 = 652340 + - 652340
					for lll = - 430189 + 430190, IIlII1(), 434029 + - 434028 do
						local l1I1, I1I1 = GetSpellBookItemInfo(lll, BOOKTYPE_SPELL)
						local llI1, IlI1, lI11, II11, l111, I111, ll11 = IlIl(I1I1)
						if llI1 then
							I1lII1[ll11] = {}
							I1lII1[ll11][lII1(435014 - 410157)] = llI1
							I1lII1[ll11][lII1(- 312874 + 338749)] = spellSubName
							I1lII1[ll11][lII1(- 211398 - (- 237223))] = l1I1
							I1lII1[ll11][lII1(410719 - 385836)] = ll11
							I1lII1[ll11][lII1(519600 + - 494710)] = II11
							I1lII1[ll11][lII1(113994 - 88163)] = l111
							I1lII1[ll11][lII1(- 336883 - (- 362219))] = I111
							I1lII1[ll11][lII1(- 607474 - (- 632628))] = lI11
							I1lII1[ll11][lII1(- 324952 - (- 350507))] = IlI1
							local lll = GetSpellSubtext(ll11)
							if lll and lll ~= lII1(- 35425 + 61269) then
								I1lII1[ll11][lII1(- 34007 - (- 59746))] = llI1 .. (lII1(582580 - 557105) .. (lll .. lII1(141156 + - 115336)))
							else
								I1lII1[ll11][lII1(- 549745 + 575484)] = llI1
							end
							if Ill ~= llI1 and lll then
								Ill = llI1
								III1 = 698422 + - 698421
							else
								III1 = III1 + (- 310057 - (- 310058))
							end
							if IlI1 == nil then
								I1lII1[ll11][lII1(199160 - 173605)] = III1
							end
							if not lllII1[llI1] then
								lllII1[llI1] = {}
							end
							lllII1[llI1][# lllII1[llI1] + (156198 - 156197)] = I1lII1[ll11]
						end
					end
				end
				SetCVar(lII1(330666 + - 305563), showranks)
				if lIlI1() > lIlI1({
					[lII1(- 110217 - (- 135716))] = - 989206 - (- 991231);
					[lII1(703848 - 678453)] = - 950525 + 950529;
					[lII1(- 607413 - (- 632628))] = 668021 + - 668014
				}) then
					return
				end
				return I1lII1, lllII1
			end
		end
		function I1lI1.OIlIlO(lll)
			return IllII1(lll)
		end
		function I1lI1.OllIOI(lll)
			local Ill, III1 = I1lI1[lII1(23521 + 1672)]()
			if IIIl(lll) == lII1(- 711990 + 736936) then
				return III1[lll]
			else
				return Ill[lll]
			end
		end
		function I1lI1.O0lIII(lll)
			local Ill
			if GetItemInfo(567302 - 559153) then
				Ill = IsItemInRange(900668 + - 892519, lll)
			end
			return IIll(lll) and (lIII1(lll) and Ill)
		end
		function I1lI1.O00IlI()
			if I11l() then
				return lII1(890812 + - 865601), lII1(- 980734 + 1005979)
			elseif l11l() then
				return lII1(844729 - 819065), lII1(- 21729 + 47469)
			else
				return lII1(- 467641 - (- 492719)), lII1(81049 - 55330)
			end
		end
		I1lI1[lII1(1011839 + - 986439)] = nil
		local function lII1I1()
			return I11l() and 1009729 - 1009727 or l11l() and 92196 - 92195 or - 66978 - (- 66978)
		end
		local function III1I1(lll)
			if not lll then
				return 866428 - 866427
			end
			if lll == lII1(682282 - 657204) then
				lll = I1lI1[lII1(800441 + - 775041)]
			end
			local Ill = lll:match(lII1(- 15191 - (- 40929)))
			local III1 = lll:match(lII1(- 29152 - (- 54114)))
			if Ill then
				return Ill
			elseif III1 then
				return III1
			else
				return - 940413 + 940414
			end
		end
		function I1lI1.O0l0IO()
			local lll
			if - 291753 + 291755 == lII1I1() then
				for Ill = 118884 + - 118883, 866363 + - 866323, 190886 + - 190885 do
					lll = lII1(- 826623 - (- 851834)) .. Ill
					if UnitIsUnit(lII1(863024 - 837946), lll) then
						return lll
					end
				end
			end
			return lII1(- 87533 - (- 112611))
		end
		function I1lI1.OI0OlO(lll)
			if not lll then
				return nil
			end
			local Ill = I1lI1[lII1(98851 + - 73836)][lll]
			if Ill ~= nil then
				return Ill
			end
			if I1lI1[lII1(332202 + - 307031)][lll] ~= nil then
				return I1lI1[lII1(- 896326 - (- 921341))][I1lI1[lII1(- 693475 - (- 718646))][lll]]
			end
			local III1 = l1II1(lll)
			if I1lI1[lII1(- 735159 + 760330)][III1] ~= nil then
				return I1lI1[lII1(125220 + - 100205)][I1lI1[lII1(883662 - 858491)][III1]]
			end
			return nil
		end
		function I1lI1.O0I0II(lll)
			if not lll then
				return - 658740 + 658740
			elseif 877883 + - 877881 == lII1I1() then
				return ll11(782907 - 782904, GetRaidRosterInfo(III1I1(lll))) or - 78754 + 78755
			else
				return 239784 - 239783
			end
		end
		function I1lI1.O0000I()
			if not IIll(lII1(- 168713 - (- 194150))) and not IIll(lII1(500036 - 474415)) then
				return nil
			end
			if UnitInParty(lII1(- 823162 + 848599)) or IIII1(lII1(959102 + - 933665)) then
				return I1lI1[lII1(- 417975 - (- 443886))](lII1(596239 - 570802))
			end
			if UnitIsEnemy(lII1(- 525872 + 550950), lII1(364232 - 338795)) and (UnitInParty(lII1(- 907964 + 933030)) or IIII1(lII1(- 383340 + 408406))) then
				return I1lI1[lII1(888178 - 862267)](lII1(45089 + - 20023))
			end
			if UnitIsUnit(lII1(- 594045 - (- 619123)), lII1(- 520112 + 545549)) or UnitIsUnit(lII1(- 344821 - (- 369899)), lII1(- 173605 + 198671)) then
				return I1lI1[lII1(902076 + - 877061)][lII1(- 86445 - (- 111523))]
			end
			if UnitInParty(lII1(- 961194 - (- 986815))) or IIII1(lII1(- 434137 - (- 459758))) then
				return I1lI1[lII1(70104 - 44193)](lII1(583622 - 558001))
			end
			if UnitIsUnit(lII1(105560 - 80482), lII1(414125 + - 388504)) or UnitIsUnit(lII1(- 336362 + 361440), lII1(- 273401 - (- 298409))) then
				return I1lI1[lII1(- 919805 + 944820)][lII1(- 922695 - (- 947773))]
			end
			return nil
		end
		function I1lI1.OIIOI0()
			if lIlI1() > lIlI1({
				[lII1(- 186252 - (- 211751))] = - 262696 + 264721;
				[lII1(- 300265 + 325660)] = 206122 - 206118;
				[lII1(515952 + - 490737)] = 596338 + - 596331
			}) then
				return
			end
			if not IIll(lII1(- 565448 - (- 590514))) then
				return nil
			end
			if UnitCanAttack(lII1(- 97134 - (- 122212)), lII1(- 104570 - (- 129636))) and not UnitIsDead(lII1(- 140091 - (- 165157))) then
				return I1lI1[lII1(314027 - 289129)](lII1(425069 + - 400003))
			end
		end
		function I1lI1.O0IOOl(lll)
			local Ill, III1 = I1lI1[lII1(- 187085 - (- 212199))]()
			local l1I1 = GetNumGroupMembers()
			if lIlI1() > lIlI1({
				[lII1(951128 - 925629)] = - 688053 + 690078;
				[lII1(849146 + - 823751)] = 900864 - 900860;
				[lII1(722165 - 696950)] = 96867 + - 96860
			}) then
				return
			end
			for III1 = 865275 + - 865274, l1I1, - 707190 + 707191 do
				local l1I1 = Ill .. III1
				local I1I1 = l1I1 .. lII1(- 761976 + 787413)
				if IIll(I1I1) and UnitCanAttack(lII1(- 993663 + 1018741), I1I1) then
					if lll(I1I1) then
						return true
					end
				end
			end
		end
		local l1I1I1 = {
			lII1(- 314474 + 339911),
			lII1(- 531036 - (- 556657)),
			lII1(- 955838 + 981467);
			lII1(183526 + - 158460)
		}
		function I1lI1.O00O0I(lll)
			for Ill, III1 in l111(l1I1I1) do
				if IIll(III1) and UnitCanAttack(lII1(876400 - 851322), III1) then
					if lll(III1) then
						return true
					end
				end
			end
		end
		function I1lI1.OIOI00()
			local lll = {}
			if lIlI1() > lIlI1({
				[lII1(- 84835 + 110334)] = - 1027712 + 1029737,
				[lII1(- 151154 - (- 176549))] = - 149793 - (- 149797);
				[lII1(- 417199 - (- 442414))] = 111907 + - 111900
			}) then
				return
			end
			for Ill, III1 in II11(I1lI1[lII1(588136 - 563121)]) do
				if IIll(Ill .. lII1(- 590066 + 615503)) and UnitLevel(Ill .. lII1(- 323150 - (- 348587))) == - 218600 - (- 218599) then
					local III1 = IIll(Ill .. lII1(504217 - 479151)) and l1II1(Ill .. lII1(- 156709 + 181775))
					local l1I1 = I1lI1[lII1(- 561969 + 587140)][III1]
					local I1I1 = I1lI1[lII1(- 830660 - (- 855675))][l1I1]
					if I1I1 and I1I1[lII1(827260 - 801593)] == lII1(947581 + - 921687) then
						local Ill = false
						for lll, lII1 in l111(lll) do
							if lII1 == III1 then
								Ill = true
							end
						end
						if not Ill then
							lll[# lll + (303850 - 303849)] = III1
						end
					end
				end
			end
			return lll
		end
		local I1I1I1 = {
			lII1(679483 - 654260),
			lII1(- 74220 - (- 99555)),
			lII1(582834 + - 557176),
			lII1(- 713718 + 739091);
			lII1(- 148261 + 173354);
			lII1(876731 + - 851135);
			lII1(- 805493 - (- 831418));
			lII1(- 245224 + 270086),
			lII1(152677 + - 126914),
			lII1(339289 - 314090),
			lII1(- 557909 - (- 583538)),
			lII1(- 1014115 - (- 1039552));
			lII1(648200 - 622579),
			lII1(228374 - 203366),
			lII1(79756 - 54690);
			lII1(- 815673 + 841543);
			lII1(57506 + - 32339),
			lII1(136487 - 110883);
			lII1(149508 - 123876);
			lII1(105603 - 79842),
			lII1(947475 - 921917);
			lII1(- 982142 + 1007436);
			lII1(16481 + 8682),
			lII1(88693 - 63650),
			lII1(- 161445 + 186760);
			lII1(- 418122 - (- 443886));
			lII1(- 936125 + 961054);
			lII1(29529 - 4448);
			lII1(611443 + - 585829);
			lII1(50031 - 24801);
			lII1(1032964 - 1007615);
			lII1(- 686581 + 712201);
			lII1(824442 + - 799297);
			lII1(494649 - 469615);
			lII1(- 78262 - (- 104035));
			lII1(780533 - 755639);
			lII1(579954 + - 554295),
			lII1(- 154749 - (- 180454)),
			lII1(- 287571 - (- 313130)),
			lII1(- 569548 - (- 595314)),
			lII1(- 874235 - (- 899964));
			lII1(- 97529 - (- 122916)),
			lII1(276216 - 251240),
			lII1(- 650077 - (- 674997));
			lII1(516076 - 491055),
			lII1(- 551729 + 577132),
			lII1(985003 - 959806),
			lII1(- 127769 - (- 152613));
			lII1(686581 + - 661248);
			lII1(726324 - 700726);
			lII1(712078 - 686837);
			lII1(- 757059 - (- 782584)),
			lII1(- 62306 + 87351),
			lII1(574747 - 549233),
			lII1(- 724214 + 749582),
			lII1(- 573362 + 598919);
			lII1(308247 - 282921),
			lII1(- 356779 + 382403),
			lII1(295853 - 270248);
			lII1(- 788171 - (- 813753)),
			lII1(934065 - 908476),
			lII1(- 340779 + 366028);
			lII1(- 1014207 + 1039746);
			lII1(823525 - 798585);
			lII1(- 907402 - (- 932861)),
			lII1(525512 - 499695),
			lII1(- 234151 + 259874);
			lII1(- 965383 - (- 990527)),
			lII1(- 1019392 + 1044581);
			lII1(- 440174 + 465614),
			lII1(383210 - 358379);
			lII1(694016 - 668085);
			lII1(739895 + - 714498);
			lII1(493916 - 468911),
			lII1(- 158821 + 183915),
			lII1(- 764984 + 790636);
			lII1(990975 + - 965482),
			lII1(- 61095 - (- 86307));
			lII1(- 510704 + 536235);
			lII1(- 872021 - (- 896892))
		}
		function I1lI1.O00IO0(lll)
			local Ill = GetCVar(lII1(514806 - 489199))
			if Ill ~= lII1(- 179090 - (- 204646)) then
				I1lI1[lII1(583218 + - 557959)](- 907475 - (- 907516))
			end
			local III1 = {}
			local l1I1 = - 24225 - (- 24225)
			for Ill, I1I1 in l111(I1I1I1) do
				if IIll(I1I1) and (not UnitIsDead(I1I1) and UnitCanAttack(lII1(746231 + - 721153), I1I1)) then
					local Ill = llll(I1I1)
					if Ill and not III1[Ill] then
						III1[Ill] = true
						local llI1, IlI1 = I1lI1[lII1(33682 - 8416)](I1I1)
						if IlI1 and IlI1 <= (lll or I1lI1[lII1(748547 - 722742)] or 432951 - 432941) then
							l1I1 = l1I1 + (- 909756 + 909757)
						end
					end
				end
			end
			return l1I1
		end
		local function llI1I1(lll)
			return GetStatus(lII1(228967 + - 204074)) and I1lI1[lII1(957246 + - 931487)]() >= lll or GetStatus(lII1(- 317606 - (- 342891)))
		end
		I1lI1[lII1(- 77349 - (- 102179))] = llI1I1
		function I1lI1.Ol0IOl(lll)
			if lll then
				local Ill, III1, l1I1, I1I1, llI1, IlI1, lI11 = l1l1(lII1(930493 + - 905479), lll or lII1(- 604864 - (- 630708)))
				if Ill and (Ill == lII1(- 891644 + 916562) or Ill == lII1(- 987775 + 1013429) or Ill == lII1(- 574348 - (- 599475))) then
					return Ill1(IlI1)
				elseif Ill and (Ill == lII1(422853 - 397356) or Ill == lII1(393516 + - 367596)) then
					return Ill1(l1I1)
				end
			end
			return - 872891 - (- 872891)
		end
		function I1lI1.O0OI0l(lll)
			if not lll then
				return lII1(523299 - 497455)
			end
			if lll[lII1(792825 + - 767207)] == lII1(- 924965 - (- 950461)) then
				return lII1(235184 - 210087) .. (lll[lII1(385503 - 359787)] .. lII1(- 422950 - (- 448750)))
			elseif lll[lII1(- 975742 + 1001360)] == lII1(16048 - (- 9824)) then
				return lII1(- 740242 - (- 765944)) .. (lll[lII1(- 515389 - (- 541105))] .. lII1(995839 + - 970039))
			elseif lll[lII1(- 667317 + 692935)] == lII1(- 815289 + 840744) then
				return lII1(- 204262 + 229309) .. (lll[lII1(535972 - 510256)] .. lII1(- 17953 + 43753))
			elseif lll[lII1(119844 + - 94226)] == lII1(- 314407 - (- 340203)) then
				return lII1(- 589362 + 614707) .. (lll[lII1(- 17313 + 43029)] .. lII1(228775 + - 202975))
			elseif lll[lII1(967742 + - 942124)] == lII1(- 571890 + 597636) then
				return lII1(- 548545 - (- 573682)) .. (lll[lII1(- 413997 + 439713)] .. lII1(- 835699 - (- 861499)))
			elseif lll[lII1(308475 - 282857)] == lII1(886733 - 861755) then
				return lII1(458289 - 432749) .. (lll[lII1(873966 - 848250)] .. lII1(524400 + - 498600))
			elseif lll[lII1(263993 - 238375)] == lII1(794873 + - 769907) then
				return lII1(238183 + - 213209) .. (lll[lII1(418400 - 392684)] .. lII1(956478 + - 930678))
			elseif lll[lII1(139510 - 113892)] == lII1(- 897404 + 922758) then
				return lII1(733431 + - 708460) .. (lll[lII1(781419 - 755703)] .. lII1(966654 + - 940854))
			elseif lll[lII1(341675 + - 316057)] == lII1(- 628875 - (- 654132)) then
				return lII1(817695 - 791993) .. (lll[lII1(410976 - 385260)] .. lII1(- 588075 - (- 613875)))
			elseif lll[lII1(- 204245 - (- 229863))] == lII1(- 755072 - (- 780152)) then
				return lII1(1013898 - 988863) .. (lll[lII1(- 622848 - (- 648564))] .. lII1(335594 + - 309794))
			end
			return lII1(- 221364 - (- 247208))
		end
		function I1lI1.O0IOOO(lll)
			if llll(lII1(- 211047 + 236484)) == lll then
				return I1lI1[lII1(- 871739 + 897650)](l1II1(lII1(- 550001 + 575067)))
			end
			for Ill, III1 in II11(I1lI1[lII1(- 382572 + 407587)]) do
				if llll(Ill .. lII1(- 415697 - (- 441134))) == lll then
					return I1lI1[lII1(- 958142 + 984053)](l1II1(Ill .. lII1(- 343233 - (- 368299))))
				end
			end
			for Ill = - 42337 + 42338, 628699 - 628659, 551089 + - 551088 do
				if llll(lII1(150590 - 125348) .. Ill) == lll then
					return I1lI1[lII1(1005695 + - 979784)](l1II1(lII1(- 876859 + 902101) .. (Ill .. lII1(577586 + - 552149))))
				end
			end
			return nil
		end
		local IlI1I1 = {
			[lII1(475806 - 450542)] = {
				- 88867 + 117726
			},
			[lII1(- 164965 + 190739)] = {
				978174 + - 962218;
				529904 + - 513951;
				- 300762 - (- 316714),
				560365 - 544433;
				195494 + - 179563;
				886935 - 870907;
				999295 + - 983367,
				17441 + - 1451,
				182630 + - 166641;
				1030784 + - 1014724;
				28575 - 12512,
				- 920957 + 937021;
				- 153124 - (- 169189),
				- 130192 - (- 160741);
				- 431597 + 447658,
				853562 + - 837626,
				- 374881 - (- 390892),
				- 196966 + 212920
			};
			[lII1(361684 - 336426)] = {
				540337 + - 511477,
				- 840584 - (- 871035);
				291113 + - 260661,
				237031 + - 206582
			};
			[lII1(179174 + - 153685)] = {
				- 239591 + 270716,
				800633 + - 766640,
				131108 + - 96095;
				1061217 - 1022784
			};
			[lII1(329111 - 304169)] = {
				1032583 - 999295,
				142960 - 109667;
				582770 + - 549905;
				- 23232 - (- 56418);
				- 31329 + 64761;
				- 969406 + 1002336,
				- 571792 - (- 604659);
				675765 + - 642838;
				252672 - 219815;
				549326 - 516208,
				566270 - 533425,
				375148 + - 342222,
				63960 - 30689;
				341372 - 308458,
				618995 + - 586080;
				148197 + - 115284;
				648244 + - 615338,
				138660 + - 105547,
				- 597171 + 630686,
				354475 + - 321604
			},
			[lII1(- 651941 - (- 677493))] = {
				- 58658 + 68842
			},
			[lII1(- 571346 - (- 596466))] = {
				598197 - 563633,
				1006015 + - 971557;
				1017809 - 983358;
				- 362577 - (- 397036);
				893308 + - 858860;
				811833 + - 777384;
				- 996223 + 1030668;
				861842 - 827386;
				- 974782 + 1009229,
				- 541545 - (- 575986),
				- 30924 - (- 65378),
				- 450478 + 484922,
				- 746721 - (- 781176),
				- 640564 + 675014;
				- 417945 - (- 452398),
				323690 + - 289229;
				357419 + - 322959,
				233831 + - 199362,
				- 554353 + 588820,
				552980 - 518512,
				350993 - 316522;
				- 313610 - (- 348075),
				777497 - 743031,
				664861 - 630388,
				468015 + - 433543,
				- 964825 - (- 999295),
				- 383148 + 417611,
				133348 + - 98874,
				- 591240 - (- 625715);
				- 172554 - (- 207334),
				- 488068 - (- 522864),
				724733 - 689589;
				- 633030 - (- 667829);
				359703 - 324906,
				1056257 - 1021760,
				- 253544 + 288040
			};
			[lII1(141028 + - 115556)] = {
				- 687536 - (- 727287);
				- 397356 + 437219;
				538353 + - 498606;
				- 440622 + 480368
			};
			[lII1(- 769890 - (- 795001))] = {
				- 556093 - (- 592946),
				547377 + - 510588,
				- 7584 + 45554,
				- 135908 + 173880,
				515012 - 477039,
				- 878779 + 916734,
				1027008 + - 990411,
				- 599039 - (- 636852);
				- 434040 - (- 470895),
				1019997 - 982782;
				462673 - 425133;
				- 529070 - (- 565682),
				480960 - 444334;
				- 257635 - (- 294313);
				8114 - (- 28513)
			}
		}
		local lI11I1 = {}
		do
			for lll, Ill in II11(IlI1I1) do
				for lll, Ill in l111(Ill) do
					lI11I1[Ill] = true
				end
			end
		end
		function I1lI1.OIIOll()
			local lll = llll(lII1(- 672949 + 698386))
			if lll then
				local Ill = I1lI1[lII1(- 83228 - (- 108387))](lll)
				if lI11I1[Ill] then
					return true
				end
			end
			return false
		end
		local II11I1 = {
			lII1(- 319210 + 344799),
			lII1(1060705 - 1035456);
			lII1(- 344491 + 370030),
			lII1(603678 - 578738);
			lII1(- 144818 - (- 170277));
			lII1(923901 + - 898084);
			lII1(794041 + - 768318);
			lII1(840625 - 815481),
			lII1(- 288453 - (- 313642)),
			lII1(77186 - 51746);
			lII1(343403 + - 318572);
			lII1(301993 + - 276062),
			lII1(- 635583 - (- 660980));
			lII1(- 452206 + 477211),
			lII1(- 543660 - (- 568754));
			lII1(186406 + - 160754);
			lII1(- 672949 + 698442),
			lII1(- 651001 - (- 676213));
			lII1(- 672635 - (- 698166));
			lII1(- 420807 - (- 445678)),
			lII1(- 752311 + 777475);
			lII1(- 680899 - (- 706614));
			lII1(80856 - 55522);
			lII1(- 23049 - (- 48225));
			lII1(- 904464 - (- 930173));
			lII1(- 887083 - (- 912444)),
			lII1(- 230567 + 256510);
			lII1(- 869819 + 895394);
			lII1(- 161361 - (- 186534)),
			lII1(- 1020217 - (- 1046016));
			lII1(- 430445 + 456325);
			lII1(295977 + - 270620),
			lII1(- 772060 - (- 797177));
			lII1(- 715574 + 740585);
			lII1(302121 + - 276888);
			lII1(- 795654 - (- 820857)),
			lII1(- 51171 - (- 76770));
			lII1(- 640948 + 666203);
			lII1(568626 + - 543425),
			lII1(369131 + - 343262)
		}
		function I1lI1.O0l0lO(lll)
			for Ill, lII1 in l111(II11I1) do
				local III1 = l1II1(lII1)
				if III1 == lll then
					return lII1
				end
			end
		end
		function I1lI1.OIllII()
			return IIll(lII1(924541 + - 898912)) and llll(lII1(- 929569 - (- 955006))) == llll(lII1(647092 + - 621463))
		end
		function MouseoverIsTank()
			if lIlI1() > lIlI1({
				[lII1(66082 + - 40583)] = - 111739 - (- 113764),
				[lII1(- 131634 - (- 157029))] = - 1004667 - (- 1004671);
				[lII1(- 695927 - (- 721142))] = 355954 - 355947
			}) then
				return
			end
			if IIll(lII1(629620 + - 603991)) then
				local lll = llll(lII1(564110 - 538481))
				for Ill, III1 in II11(I1lI1[lII1(- 700918 + 725933)]) do
					if III1[lII1(- 726964 - (- 752631))] == lII1(- 828794 + 854688) and llll(Ill) == lll then
						return true
					end
				end
			end
		end
		function I1lI1.OIIO0l()
			return IIll(lII1(368043 + - 342414)) and UnitCanAttack(lII1(- 534459 - (- 559537)), lII1(639668 + - 614039))
		end
		function I1lI1.O0IOI0(lll)
			if IIIl(lll) == lII1(1073183 - 1047552) and lll > - 196198 + 196198 then
				SetCVar(lII1(- 768818 - (- 794425)), lII1(104483 + - 78927))
				SetCVar(lII1(922429 + - 897192), lll)
			else
				SetCVar(lII1(- 403366 - (- 428973)), lII1(- 296105 + 321940))
				SetCVar(lII1(209915 - 184678), nil)
			end
		end
		function I1lI1.OIOlOl()
			local lll = 716470 - 716470
			local Ill = - 218663 + 218663
			local III1 = 190182 + - 190182
			local l1I1 = - 846138 - (- 846138)
			local I1I1 = 257896 - 257896
			local llI1 = - 295529 + 295529
			local IlI1 = {}
			for IlI1, lI11 in II11(I1lI1[lII1(- 771384 + 796399)]) do
				if lI11[lII1(- 1001215 + 1026092)] and not lI11[lII1(- 199910 + 225798)] then
					lll = lll + lI11[lII1(- 243624 + 268754)]
					Ill = Ill + lI11[lII1(571560 - 546097)]
					local IlI1, II11 = UnitPowerType(lI11[lII1(- 52730 - (- 78434))])
					if II11 == lII1(339242 - 314346) then
						III1 = III1 + lI11[lII1(787576 + - 762421)]
						l1I1 = l1I1 + lI11[lII1(- 450470 - (- 476399))]
					end
					if lI11[lII1(40097 + - 14430)] == lII1(- 971208 - (- 996735)) then
						I1I1 = I1I1 + lI11[lII1(1025282 - 1000127)]
						llI1 = llI1 + lI11[lII1(749439 - 723510)]
					end
				end
			end
			return lll, Ill, III1, l1I1, I1I1, llI1, IlI1
		end
		function I1lI1.OOOIOO()
			local lll = - 959102 - (- 959102)
			local Ill = - 502192 - (- 502192)
			local III1 = 258152 - 258152
			local l1I1 = 457262 - 457262
			for I1I1, llI1 in II11(I1lI1[lII1(- 703414 + 728401)]) do
				III1 = III1 + (628531 + - 628530)
				if llI1[lII1(- 464110 + 488987)] and (not llI1[lII1(- 529136 + 555024)] and (UnitInRange(llI1[lII1(- 991807 + 1017511)]) or lII1(11616 + 13462) == llI1[lII1(- 996632 - (- 1022336))])) then
					lll = lll + llI1[lII1(725110 + - 699980)]
					Ill = Ill + llI1[lII1(270559 - 245096)]
					l1I1 = l1I1 + (- 590897 - (- 590898))
				end
			end
			return lll, Ill, III1, l1I1
		end
		function I1lI1.OlI00O(lll)
			if not lll then
				return - 909052 - (- 909052), 724598 + - 724598
			end
			local Ill = lll[lII1(- 820857 + 845987)]
			local III1 = lll[lII1(- 131044 + 156507)]
			return III1 - Ill, Ill / III1
		end
		function I1lI1.OOl0ll(lll, Ill, III1)
			if lIlI1() > lIlI1({
				[lII1(157925 + - 132426)] = 677470 - 675445;
				[lII1(285979 - 260584)] = 867455 - 867451;
				[lII1(218021 - 192806)] = - 211232 - (- 211239)
			}) then
				return
			end
			if not lll then
				return 659956 + - 659956
			end
			III1 = III1 or - 151653 + 151655
			if I1lI1[lII1(- 887227 + 912631)] then
				local l1I1 = llll(lll)
				if Ill then
					local lll = llll(Ill)
					return (I1lI1[lII1(- 868096 - (- 893500))]:GetHealAmount(l1I1, I1lI1[lII1(- 692085 + 717489)][lII1(115559 - 89699)], lI1l() + III1, lll) or - 1035136 + 1035136) * (I1lI1[lII1(- 861883 + 887287)]:GetHealModifier(l1I1) or - 74721 - (- 74722))
				else
					return (I1lI1[lII1(224487 + - 199083)]:GetHealAmount(l1I1, I1lI1[lII1(- 513328 + 538732)][lII1(811449 + - 785589)], lI1l() + III1) or - 541105 + 541105) * (I1lI1[lII1(633519 - 608115)]:GetHealModifier(l1I1) or - 183909 - (- 183910))
				end
			else
				return - 683829 - (- 683829)
			end
		end
		function I1lI1.O0OIII(lll, Ill)
			if not lll then
				return 525104 - 525104
			end
			Ill = Ill or - 140577 - (- 140580)
			if I1lI1[lII1(- 663797 + 689201)] then
				local III1 = llll(lll)
				return (I1lI1[lII1(- 755580 - (- 780984))]:GetOthersHealAmount(III1, I1lI1[lII1(- 572466 + 597870)][lII1(17316 - (- 8544))], lI1l() + Ill) or 80931 + - 80931) * (I1lI1[lII1(582130 + - 556726)]:GetHealModifier(III1) or 935550 - 935549)
			else
				return - 250664 + 250664
			end
		end
		function I1lI1.OII0Il(lll, Ill)
			if not lll then
				return - 505520 + 505520
			end
			Ill = Ill or - 856568 - (- 856571)
			if I1lI1[lII1(903100 + - 877696)] then
				local III1 = llll(lll)
				local l1I1 = llll(lII1(863227 + - 838149))
				return (I1lI1[lII1(- 961534 + 986938)]:GetHealAmount(III1, I1lI1[lII1(625011 + - 599607)][lII1(498351 + - 472491)], lI1l() + Ill, l1I1) or 542577 + - 542577) * (I1lI1[lII1(662581 + - 637177)]:GetHealModifier(III1) or - 50786 + 50787)
			else
				return - 584626 - (- 584626)
			end
		end
		local l111I1 = {
			lII1(- 861014 - (- 886651)),
			lII1(- 120340 - (- 145637));
			lII1(929213 + - 903613)
		}
		function I1lI1.OIIl0I(lll, Ill, III1)
			if not Ill then
				Ill = 2.99
			end
			III1 = III1 or 750007 + - 749977
			if lll[lII1(970816 - 945149)] == lII1(790777 + - 764883) then
				III1 = 514608 + - 514602
			end
			local l1I1 = I1lI1[lII1(- 308010 + 332918)](lll[lII1(279120 - 253416)], Ill)
			local I1I1 = I1lI1[lII1(- 551907 - (- 577842))](lll[lII1(- 782904 + 808608)], III1)
			l1I1 = l1I1 + I1I1
			if l1I1 == - 902396 - (- 902396) then
				if I1lI1[lII1(- 519536 + 544949)](lll[lII1(288489 + - 262785)], l1Il(l111I1)) then
					l1I1 = 785144 + - 784744
				end
			end
			local llI1, IlI1 = (lll[lII1(- 676940 - (- 702070))] + l1I1) / lll[lII1(308000 - 282537)], (lll[lII1(256872 + - 231409)] - lll[lII1(- 571208 - (- 596338))]) - l1I1
			if llI1 > 844347 - 844346 then
				llI1 = 1014336 - 1014335
			end
			if IlI1 < 16481 - 16481 then
				IlI1 = - 417517 + 417517
			end
			return llI1, IlI1
		end
		function I1lI1.OIOOIO(lll, Ill)
			I1lI1[lII1(- 907324 + 932216)][lll] = Ill
		end
		function I1lI1.OIlOl0(lll)
			return I1lI1[lII1(184614 + - 159722)][lll] ~= nil and I1lI1[lII1(458985 - 434093)][lll] > 173477 - 173477
		end
		function I1lI1.OO0OOl(lll)
			local Ill = I1lI1[lII1(- 23585 + 48600)][lll]
			return I1lI1[lII1(- 387505 - (- 412397))][lll] ~= nil and I1lI1[lII1(- 53986 + 78878)][lll] > - 799545 - (- 799545) or Ill ~= nil and Ill[lII1(- 900348 + 925173)] == true
		end
		function I1lI1.OIIOlO()
			for lll, Ill in II11(I1lI1[lII1(- 687605 + 712620)]) do
				if Ill[lII1(680291 - 654708)] then
					return true
				end
			end
			return false
		end
		function I1lI1.OIIllI()
			for lll, Ill in II11(I1lI1[lII1(- 331819 - (- 357355))]) do
				return true
			end
			return false
		end
		local I111I1 = lII1(- 548209 + 573886)
		local ll11I1 = GetLocale()
		if ll11I1 == lII1(948157 + - 922955) or ll11I1 == lII1(387436 + - 361886) then
			I111I1 = lII1(- 538673 + 564456)
		end
		function I1lI1.O0IIOI(lll)
			local Ill, III1 = I1lI1[lII1(- 611251 + 636444)]()
			local l1I1 = {}
			if lIlI1() > lIlI1({
				[lII1(726673 - 701174)] = - 642100 + 644125,
				[lII1(562916 - 537521)] = 1017220 - 1017216,
				[lII1(- 747193 - (- 772408))] = 786040 + - 786033
			}) then
				return
			end
			for lll, Ill in l111(lll) do
				if Ill[lII1(934909 + - 909193)] == I111I1 then
					local lll = {}
					lll[lII1(11668 - (- 14048))] = Ill[lII1(- 562750 - (- 588466))]
					lll[lII1(586678 - 560817)] = Ill[lII1(988018 - 962302)]
					lll[lII1(530544 + - 505458)] = 18593 + - 18593
					lll[lII1(- 171301 + 196667)] = false
					lll[lII1(31905 + - 6821)] = Ill[lII1(22676 - (- 3040))]
					lll[lII1(494575 + - 469263)] = Ill[lII1(- 59682 + 84994)]
					l1I1[# l1I1 + (108964 - 108963)] = lll
				else
					local lll = I1lI1[lII1(- 725878 + 751158)](Ill[lII1(- 300854 - (- 326570))])
					if lll then
						local III1 = {}
						III1[lII1(- 1041984 + 1067700)] = Ill[lII1(- 960958 + 986674)]
						III1[lII1(138468 + - 113382)] = Ill[lII1(- 504818 - (- 529904))]
						III1[lII1(- 511408 + 536774)] = Ill[lII1(35041 + - 9675)]
						III1[lII1(- 173348 - (- 198502))] = lll[lII1(516528 + - 491374)]
						III1[lII1(932161 - 906300)] = lII1(- 335107 - (- 360939)) .. (lll[lII1(313963 - 288809)] .. (lII1(816249 + - 791258) .. lll[lII1(435526 - 410669)]))
						III1[lII1(- 685493 + 710577)] = lII1(997183 + - 971351) .. (lll[lII1(- 918587 - (- 943741))] .. lII1(- 946557 + 971548))
						III1[lII1(912732 - 887420)] = Ill[lII1(446382 + - 421070)]
						l1I1[# l1I1 + (- 1028095 - (- 1028096))] = III1
					end
				end
			end
			return l1I1
		end
		function I1lI1.Oll00O()
			return ll11(- 570418 + 570422, GetNetStats()) / (- 464774 - (- 465774))
		end
		local function Il11I1(lll)
			for Ill = 739511 + - 739510, - 375212 + 375332, - 445357 - (- 445358) do
				local III1, l1I1, I1I1 = GetActionInfo(Ill)
				if III1 == lII1(- 426935 - (- 452078)) and l1I1 == lll then
					return true
				end
			end
		end
		function I1lI1.O0OIll()
			for lll = (901628 - 901628) + ll11(- 551921 + 551922, GetNumMacros()), - 1014142 - (- 1014143), - 530545 - (- 530544) do
				if lIlI1() > lIlI1({
					[lII1(- 126500 + 151999)] = 1016640 + - 1014615;
					[lII1(761770 - 736375)] = - 920125 + 920129;
					[lII1(- 449264 - (- 474479))] = 354290 - 354283
				}) then
					return
				end
				local Ill, III1, l1I1 = GetMacroInfo(lll)
				if I1lI1[lII1(- 127396 + 153083)] then
					if Ill and Ill:sub(7200 + - 7199, - 893562 - (- 893564)) == lII1(166757 + - 141322) or l1I1 and I1lI1[lII1(- 1029440 + 1055363)](l1I1, lII1(37676 - 12064)) or l1I1 and I1lI1[lII1(880573 - 854650)](l1I1, lII1(- 620521 - (- 646196))) or l1I1 and I1lI1[lII1(- 624179 + 650102)](l1I1, lII1(943101 + - 917997)) then
						DeleteMacro(lll)
					end
				else
					if Ill and Ill:sub(- 689589 + 689590, 285931 - 285929) == lII1(53666 + - 28231) or l1I1 and I1lI1[lII1(- 1032320 + 1058243)](l1I1, lII1(- 750892 - (- 776504))) or l1I1 and I1lI1[lII1(881083 + - 855160)](l1I1, lII1(- 859824 - (- 885499))) or l1I1 and I1lI1[lII1(163559 - 137636)](l1I1, lII1(1039616 + - 1014512)) then
						DeleteMacro(lll)
					end
				end
			end
			for lll = (382372 - 382252) + ll11(438064 - 438062, GetNumMacros()), 535345 + - 535224, 957182 + - 957183 do
				local Ill, III1, l1I1 = GetMacroInfo(lll)
				if I1lI1[lII1(551857 + - 526170)] then
					if Ill and Ill:sub(- 489262 - (- 489263), - 773816 + 773818) == lII1(- 909026 - (- 934461)) or l1I1 and I1lI1[lII1(- 273640 + 299563)](l1I1, lII1(- 864699 + 890311)) or l1I1 and I1lI1[lII1(40353 + - 14430)](l1I1, lII1(- 335328 - (- 361003))) or l1I1 and I1lI1[lII1(- 777590 - (- 803513))](l1I1, lII1(- 234663 + 259767)) then
						DeleteMacro(lll)
					end
				else
					if Ill and Ill:sub(- 895100 + 895101, - 803961 + 803963) == lII1(506570 - 481135) or l1I1 and I1lI1[lII1(444462 + - 418539)](l1I1, lII1(134308 + - 108696)) or l1I1 and I1lI1[lII1(924925 + - 899002)](l1I1, lII1(403447 - 377772)) or l1I1 and I1lI1[lII1(- 830392 - (- 856315))](l1I1, lII1(- 101332 - (- 126436))) then
						DeleteMacro(lll)
					end
				end
			end
		end
		function I1lI1.OlO000(lll, Ill, III1, l1I1, I1I1, llI1, IlI1, lI11)
			local II11 = function()
				if Ill == nil then
					Ill = lII1(751991 + - 726150)
				end
				local II11 = GetMacroIndexByName(lll)
				if II11 == 107171 - 107171 then
					local l1I1, llI1 = GetNumMacros()
					local IlI1 = true
					if llI1 >= - 884411 + 884429 or lI11 then
						IlI1 = false
					end
					if l1I1 < 382508 + - 382388 then
						II11 = CreateMacro(lll, Ill, III1, IlI1)
						I1I1 = true
					else
						I1lI1[lII1(457589 - 432365)](lII1(- 193265 - (- 218215)))
					end
				else
					II11 = EditMacro(lll, lll, Ill, III1, - 426988 - (- 426989), 1040449 - 1040448)
				end
				if l1I1 ~= nil and (l1I1 > - 770232 - (- 770232) and not Il11I1(II11)) then
					PickupMacro(II11)
					PlaceAction(l1I1)
					ClearCursor()
				end
				if llI1 ~= nil then
					SetBinding(llI1, IlI1)
				end
				return II11
			end
			C_Timer[lII1(808633 + - 782831)](380204 + - 380202, II11)
		end
		do
			local lll = {}
			local Ill = - 302632 - (- 302633)
			local III1 = 690549 - 690549
			function I1lI1.OOO00O(Ill)
				III1 = III1 + (37986 - 37985)
				lll[III1] = Ill
			end
			function I1lI1.Ol0OO0()
				if Ill > III1 then
					Ill = - 936060 - (- 936061)
					III1 = - 108323 - (- 108323)
					return nil
				end
				local lII1 = lll[Ill]
				lll[Ill] = nil
				Ill = Ill + (760441 - 760440)
				return lII1
			end
			function I1lI1.OII00I()
				while I1lI1[lII1(366315 + - 340407)]() do
				end
			end
			function I1lI1.OIIOIl()
				return Ill <= III1
			end
		end
		local function lIl1I1()
			local lll = GetSpellBonusDamage(- 652785 - (- 652788))
			local Ill = GetSpellBonusDamage(- 966778 - (- 966782))
			local III1 = GetSpellBonusDamage(39206 - 39201)
			local I1I1 = GetSpellBonusDamage(634036 + - 634030)
			local llI1 = GetSpellBonusDamage(- 974071 - (- 974078))
			local IlI1 = {
				lll,
				Ill,
				III1;
				I1I1;
				llI1
			}
			local lI11 = math[lII1(609651 + - 584403)](l1Il(IlI1))
			local II11 = GetInventoryItemID(lII1(130276 + - 105198), 10098 - 10080)
			if II11 == - 494043 - (- 539313) then
				sx = 149733 + - 149337
			else
				sx = - 382572 - (- 382572)
			end
			local l111 = 677301 + - 677300
			local I111 = 310698 + - 310697
			local ll11 = false
			if I1lI1[lII1(609015 - 583602)](lII1(- 16427 - (- 41505)), 435499 - (- 29473)) then
				l111 = 1.15
			else
				l111 = 1.15
				I1lI1[lII1(682229 + - 657005)](lII1(- 545969 + 571511))
			end
			if I1lI1[lII1(238252 - 212839)](lII1(813870 - 788792), 297833 + - 243790) then
				I111 = 1.03
			end
			local Il11 = {
				[lII1(- 836216 - (- 861243))] = - 859451 + 898996,
				[lII1(914044 + - 888742)] = - 639545 - (- 679093),
				[lII1(564955 - 539377)] = - 299568 - (- 339115),
				[lII1(- 181811 - (- 207462))] = - 644797 - (- 684341),
				[lII1(- 224615 - (- 249896))] = - 567417 - (- 606963),
				[lII1(954765 - 929597)] = - 815464 - (- 855931),
				[lII1(344508 - 319338)] = 1031680 + - 991210,
				[lII1(651316 + - 626421)] = - 243112 + 283581,
				[lII1(- 140772 + 166706)] = 796665 + - 756199;
				[lII1(693686 + - 668195)] = 744695 + - 704227
			}
			local lIl1 = - 434413 - (- 434413)
			local IIl1 = GetInventoryItemID(lII1(183462 + - 158384), 987263 + - 987262)
			if Il11[IIl1] then
				lIl1 = lIl1 + (- 459117 - (- 459118))
			end
			IIl1 = GetInventoryItemID(lII1(- 946888 - (- 971966)), - 484463 + 484466)
			if Il11[IIl1] then
				lIl1 = lIl1 + (179815 - 179814)
			end
			IIl1 = GetInventoryItemID(lII1(- 16673 + 41751), 515120 + - 515115)
			if Il11[IIl1] then
				lIl1 = lIl1 + (364204 - 364203)
			end
			IIl1 = GetInventoryItemID(lII1(- 731777 - (- 756855)), - 893756 + 893763)
			if Il11[IIl1] then
				lIl1 = lIl1 + (- 270760 + 270761)
			end
			IIl1 = GetInventoryItemID(lII1(936050 - 910972), 365301 - 365291)
			if Il11[IIl1] then
				lIl1 = lIl1 + (- 324906 + 324907)
			end
			if lIl1 >= - 200356 - (- 200358) then
				t7 = .1
			else
				t7 = 595954 - 595954
			end
			local l1l1 = - 733814 - (- 733815)
			if I1lI1[lII1(- 275433 + 300793)][- 762808 + 817653] then
				l1l1 = 1.3
			end
			local I1l1 = 530224 + - 530218
			if I1lI1[lII1(- 212488 - (- 237415))][IlIl(454069 - 396204)] == 700535 - 700534 then
				I1l1 = 118884 + - 118877
			end
			local lll1 = ((((((((- 369835 + 370050) + (lI11 + sx) * .2) * l1l1) * 1.06) * 1.04) * I1l1) * l111) * I111) * ((- 98275 + 98276) + t7)
			local Ill1 = ((((((((- 1020992 + 1021164) + (lI11 + sx) * .2) * l1l1) * 1.06) * 1.04) * I1l1) * l111) * I111) * ((381100 + - 381099) + t7)
			local lIIl = ((((((((- 80739 + 80863) + (lI11 + sx) * .11) * l1l1) * 1.06) * 1.04) * I1l1) * l111) * I111) * ((- 898684 + 898685) + t7)
			local IIIl = ((((((((992063 + - 991973) + (lI11 + sx) * .01) * l1l1) * 1.06) * 1.04) * I1l1) * l111) * I111) * ((112483 + - 112482) + t7)
			local I1Il = (((((((29791 - 29729) * l1l1) * 1.06) * 1.04) * I1l1) * l111) * I111) * ((- 144483 - (- 144484)) + t7)
			I1lI1[lII1(- 761016 + 786240)](lII1(36957 - 11040) .. (lI11 .. lII1(373939 - 348075)))
			I1lI1[lII1(- 976951 - (- 1002175))](lII1(- 882875 + 907834))
			I1lI1[lII1(- 35738 - (- 60962))](lII1(- 1039040 + 1064637) .. (l1I1(lll1) .. (lII1(- 358609 - (- 383660)) .. (l1I1(lll1 / I1l1) .. lII1(1006972 - 981438)))))
			I1lI1[lII1(121771 - 96547)](lII1(- 101027 + 126247) .. (l1I1(Ill1) .. (lII1(91133 - 66082) .. (l1I1(Ill1 / I1l1) .. lII1(71266 + - 45732)))))
			I1lI1[lII1(- 632812 - (- 658036))](lII1(- 477152 - (- 502576)) .. (l1I1(lIIl) .. (lII1(- 249384 + 274435) .. (l1I1(lIIl / I1l1) .. lII1(505072 + - 479538)))))
			I1lI1[lII1(853434 + - 828210)](lII1(- 548657 + 574180) .. (l1I1(IIIl) .. (lII1(- 130724 + 155775) .. (l1I1(IIIl / I1l1) .. lII1(- 243816 + 269350)))))
			I1lI1[lII1(310570 + - 285346)](lII1(- 603763 + 629667) .. (l1I1(I1Il) .. (lII1(- 17987 - (- 43041)) .. (l1I1(I1Il / I1l1) .. lII1(- 790139 - (- 815673))))))
			I1lI1[lII1(- 736311 + 761535)](lII1(- 783610 - (- 808569)))
			I1lI1[lII1(8103 - (- 17121))](lII1(- 182131 - (- 207910)))
			local llIl = {
				Ill1 * (- 548399 - (- 548401));
				lll1 + Ill1,
				lll1 * (- 36961 + 36963);
				lll1 * (- 54176 - (- 54178)) + I1Il;
				(lll1 + Ill1) + IIIl,
				lll1 * (50530 + - 50528) + IIIl,
				(lll1 + Ill1) + lIIl,
				(lll1 + lll1) + lIIl;
				Ill1 * (- 107296 - (- 107299)),
				lll1 * (301033 + - 301030)
			}
			local lI1l = {
				lII1(441326 + - 415664);
				lII1(- 996095 + 1021400),
				lII1(771587 - 746487);
				lII1(- 239496 - (- 265192)),
				lII1(331882 + - 306058),
				lII1(525872 + - 500871);
				lII1(118244 + - 93195);
				lII1(- 382622 - (- 408173)),
				lII1(- 785063 - (- 810489));
				lII1(966078 + - 940389)
			}
			local II1l = 386732 - 386732
			for lll = 779576 + - 779575, # llIl, 643764 + - 643763 do
				local Ill = l1I1(llIl[lll])
				if Ill > 99107 + - 81107 and Ill < - 259560 + 280560 then
					II1l = II1l + (- 918268 + 918269)
					if lI1l[lll] == lII1(- 838525 - (- 864187)) or lI1l[lll] == lII1(863174 - 838074) or lI1l[lll] == lII1(210616 - 185190) or lI1l[lll] == lII1(577970 + - 552281) then
						I1lI1[lII1(766143 - 740919)](lII1(- 124772 + 150245) .. (II1l .. (lII1(- 656164 - (- 681845)) .. (lI1l[lll] .. (lII1(- 943677 + 969146) .. (Ill .. lII1(- 260904 + 285996)))))))
					else
						I1lI1[lII1(- 249825 - (- 275049))](lII1(- 771960 + 797433) .. (II1l .. (lII1(944509 + - 918828) .. (lI1l[lll] .. (lII1(- 626999 - (- 652468)) .. (Ill .. lII1(289833 + - 264033)))))))
					end
				end
			end
			if II1l == - 182630 + 182630 then
				I1lI1[lII1(- 219047 + 244271)](lII1(417209 - 391724))
			end
			I1lI1[lII1(425901 + - 400677)](lII1(- 554273 - (- 579314)))
			I1lI1[lII1(458805 - 433581)](lII1(213671 - 188454))
			local l11l = {
				lll1 * (- 914492 + 914494) + lIIl * (- 625329 - (- 625331));
				(lll1 * (- 719286 + 719288) + Ill1) + lIIl;
				lll1 * (919677 + - 919674) + lIIl,
				lll1 + Ill1 * (- 750007 + 750010);
				lll1 * (- 238247 + 238249) + Ill1 * (- 409453 + 409455);
				lll1 * (560753 + - 560750) + Ill1;
				lll1 * (36577 + - 36573)
			}
			lI1l = {
				lII1(- 238631 + 264533),
				lII1(- 203436 - (- 228775)),
				lII1(- 801785 + 826852),
				lII1(- 908631 - (- 933565)),
				lII1(316010 + - 291089);
				lII1(198372 - 173285),
				lII1(116738 - 91619)
			}
			II1l = 964094 - 964094
			for lll = - 522928 + 522929, # l11l, - 328746 + 328747 do
				local Ill = l1I1(l11l[lll])
				if Ill > 601170 - 565170 and Ill < - 412142 - (- 452142) then
					II1l = II1l + (- 890363 - (- 890364))
					if lI1l[lll] == lII1(442094 + - 416192) or lI1l[lll] == lII1(345104 - 320170) or lI1l[lll] == lII1(887227 + - 862108) then
						I1lI1[lII1(738039 + - 712815)](lII1(557873 + - 532400) .. (II1l .. (lII1(- 816761 + 842442) .. (lI1l[lll] .. (lII1(258344 + - 232875) .. (Ill .. lII1(822329 + - 797237)))))))
					else
						I1lI1[lII1(- 874996 - (- 900220))](lII1(- 700854 + 726327) .. (II1l .. (lII1(- 925420 - (- 951101)) .. (lI1l[lll] .. (lII1(1023356 - 997887) .. (Ill .. lII1(- 296425 + 322225)))))))
					end
				end
			end
			if II1l == 560753 + - 560753 then
				I1lI1[lII1(- 164638 - (- 189862))](lII1(- 474031 + 498995))
			end
		end
	end
	lll()
end)(...)